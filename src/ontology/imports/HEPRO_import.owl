Prefix(:=<http://purl.obolibrary.org/obo/HOSO/imports/HEPRO_import.owl#>)
Prefix(dc:=<http://purl.org/dc/elements/1.1/>)
Prefix(obo:=<http://purl.obolibrary.org/obo/>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(IOIO:=<http://purl.obolibrary.org/obo/IOIO#>)
Prefix(foaf:=<http://xmlns.com/foaf/0.1/>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)
Prefix(swrl:=<http://www.w3.org/2003/11/swrl#>)
Prefix(HEPRO:=<http://purl.obolibrary.org/obo/HEPRO#>)
Prefix(swrlb:=<http://www.w3.org/2003/11/swrlb#>)
Prefix(terms:=<http://purl.org/dc/terms/>)
Prefix(subsets:=<http://purl.obolibrary.org/obo/ro/subsets#>)
Prefix(oboInOwl:=<http://www.geneontology.org/formats/oboInOwl#>)
Prefix(OpenLHS-Core:=<http://purl.obolibrary.org/obo/OpenLHS-Core#>)
Prefix(CommonCoreOntologies:=<http://www.ontologyrepository.com/CommonCoreOntologies/>)


Ontology(<http://purl.obolibrary.org/obo/HOSO/imports/HEPRO_import.owl>
<http://purl.obolibrary.org/obo/HOSO/releases/2025-09-06/imports/HEPRO_import.owl>
Annotation(dc:source <http://purl.obolibrary.org/obo/HEPRO/releases/2025-09-06/HEPRO.owl>)
Annotation(owl:versionInfo "2025-09-06")

Declaration(Class(obo:BFO_0000001))
Declaration(Class(obo:BFO_0000002))
Declaration(Class(obo:BFO_0000003))
Declaration(Class(obo:BFO_0000004))
Declaration(Class(obo:BFO_0000006))
Declaration(Class(obo:BFO_0000008))
Declaration(Class(obo:BFO_0000009))
Declaration(Class(obo:BFO_0000011))
Declaration(Class(obo:BFO_0000015))
Declaration(Class(obo:BFO_0000016))
Declaration(Class(obo:BFO_0000017))
Declaration(Class(obo:BFO_0000018))
Declaration(Class(obo:BFO_0000019))
Declaration(Class(obo:BFO_0000020))
Declaration(Class(obo:BFO_0000023))
Declaration(Class(obo:BFO_0000024))
Declaration(Class(obo:BFO_0000026))
Declaration(Class(obo:BFO_0000027))
Declaration(Class(obo:BFO_0000028))
Declaration(Class(obo:BFO_0000029))
Declaration(Class(obo:BFO_0000030))
Declaration(Class(obo:BFO_0000031))
Declaration(Class(obo:BFO_0000034))
Declaration(Class(obo:BFO_0000035))
Declaration(Class(obo:BFO_0000038))
Declaration(Class(obo:BFO_0000040))
Declaration(Class(obo:BFO_0000140))
Declaration(Class(obo:BFO_0000141))
Declaration(Class(obo:BFO_0000142))
Declaration(Class(obo:BFO_0000144))
Declaration(Class(obo:BFO_0000145))
Declaration(Class(obo:BFO_0000146))
Declaration(Class(obo:BFO_0000147))
Declaration(Class(obo:BFO_0000148))
Declaration(Class(obo:BFO_0000182))
Declaration(Class(obo:HEPRO_0000001))
Declaration(Class(obo:HEPRO_0000003))
Declaration(Class(obo:HEPRO_0000004))
Declaration(Class(obo:HEPRO_0000005))
Declaration(Class(obo:HEPRO_0000006))
Declaration(Class(obo:HEPRO_0000007))
Declaration(Class(obo:HEPRO_0000008))
Declaration(Class(obo:HEPRO_0000009))
Declaration(Class(obo:HEPRO_0000010))
Declaration(Class(obo:HEPRO_0000011))
Declaration(Class(obo:HEPRO_0000012))
Declaration(Class(obo:HEPRO_0000013))
Declaration(Class(obo:HEPRO_0000014))
Declaration(Class(obo:HEPRO_0000015))
Declaration(Class(obo:HEPRO_0000016))
Declaration(Class(obo:HEPRO_0000017))
Declaration(Class(obo:HEPRO_0000018))
Declaration(Class(obo:HEPRO_0000019))
Declaration(Class(obo:HEPRO_0000020))
Declaration(Class(obo:HEPRO_0000021))
Declaration(Class(obo:HEPRO_0000022))
Declaration(Class(obo:HEPRO_0000023))
Declaration(Class(obo:HEPRO_0000025))
Declaration(Class(obo:HEPRO_0000030))
Declaration(Class(obo:HEPRO_0000100))
Declaration(Class(obo:HEPRO_0000101))
Declaration(Class(obo:HEPRO_0000102))
Declaration(Class(obo:HEPRO_0000103))
Declaration(Class(obo:HEPRO_0000104))
Declaration(Class(obo:HEPRO_0000105))
Declaration(Class(obo:HEPRO_0000125))
Declaration(Class(obo:HEPRO_0000127))
Declaration(Class(obo:HEPRO_0000128))
Declaration(Class(obo:HEPRO_0000129))
Declaration(Class(obo:HEPRO_0000130))
Declaration(Class(obo:IAO_0000005))
Declaration(Class(obo:IAO_0000007))
Declaration(Class(obo:IAO_0000027))
Declaration(Class(obo:IAO_0000028))
Declaration(Class(obo:IAO_0000030))
Declaration(Class(obo:IAO_0000033))
Declaration(Class(obo:IAO_0000104))
Declaration(Class(obo:IAO_0000109))
Declaration(Class(obo:IAO_0000300))
Declaration(Class(obo:IAO_0000310))
Declaration(Class(obo:IAO_0000422))
Declaration(Class(obo:IAO_0000577))
Declaration(Class(obo:IAO_0000578))
Declaration(Class(obo:IAO_0000579))
Declaration(Class(obo:IAO_0000646))
Declaration(Class(obo:IAO_0020000))
Declaration(Class(obo:IAO_0020010))
Declaration(Class(obo:IAO_0020020))
Declaration(Class(obo:IOIO_0000001))
Declaration(Class(obo:IOIO_0000002))
Declaration(Class(obo:IOIO_0000003))
Declaration(Class(obo:IOIO_0000004))
Declaration(Class(obo:IOIO_0000005))
Declaration(Class(obo:IOIO_0000006))
Declaration(Class(obo:IOIO_0000010))
Declaration(Class(obo:IOIO_0000011))
Declaration(Class(obo:IOIO_0000012))
Declaration(Class(obo:IOIO_0000013))
Declaration(Class(obo:IOIO_0000014))
Declaration(Class(obo:IOIO_0000015))
Declaration(Class(obo:IOIO_0000020))
Declaration(Class(obo:IOIO_0000021))
Declaration(Class(obo:IOIO_0000022))
Declaration(Class(obo:IOIO_0000023))
Declaration(Class(obo:IOIO_0000030))
Declaration(Class(obo:IOIO_0000031))
Declaration(Class(obo:NCBITaxon_10239))
Declaration(Class(obo:NCBITaxon_2))
Declaration(Class(obo:NCBITaxon_2157))
Declaration(Class(obo:NCBITaxon_2759))
Declaration(Class(obo:NCBITaxon_9606))
Declaration(Class(obo:OBI_0000011))
Declaration(Class(obo:OBI_0000245))
Declaration(Class(obo:OBI_0000260))
Declaration(Class(obo:OBI_0100026))
Declaration(Class(obo:OGMS_0000020))
Declaration(Class(obo:OGMS_0000031))
Declaration(Class(obo:OGMS_0000045))
Declaration(Class(obo:OGMS_0000060))
Declaration(Class(obo:OGMS_0000061))
Declaration(Class(obo:OGMS_0000086))
Declaration(Class(obo:OGMS_0000102))
Declaration(Class(obo:OGMS_0000129))
Declaration(Class(obo:OGMS_0000141))
Declaration(Class(obo:OGMS_0000142))
Declaration(Class(obo:OMRSE_00000061))
Declaration(Class(obo:OMRSE_00000062))
Declaration(Class(obo:OMRSE_00000204))
Declaration(Class(obo:OMRSE_00000209))
Declaration(Class(obo:OMRSE_00000210))
Declaration(Class(obo:OMRSE_00000211))
Declaration(Class(obo:OMRSE_00000212))
Declaration(Class(obo:OpenLHS-Core_0000009))
Declaration(Class(obo:OpenLHS-Core_0000010))
Declaration(Class(obo:OpenLHS-Core_0000011))
Declaration(Class(obo:OpenLHS-Core_0000012))
Declaration(Class(obo:OpenLHS-Core_0000013))
Declaration(Class(obo:OpenLHS-Core_0000020))
Declaration(Class(obo:OpenLHS-Core_0000021))
Declaration(Class(obo:OpenLHS-Core_0000022))
Declaration(Class(obo:OpenLHS-Core_0000023))
Declaration(Class(obo:OpenLHS-Core_0000024))
Declaration(Class(obo:OpenLHS-Core_0000025))
Declaration(Class(obo:OpenLHS-Core_0000026))
Declaration(Class(obo:OpenLHS-Core_0000027))
Declaration(Class(obo:OpenLHS-Core_0000028))
Declaration(Class(obo:OpenLHS-Core_0000029))
Declaration(Class(obo:OpenLHS-Core_0000030))
Declaration(Class(obo:OpenLHS-Core_0000031))
Declaration(Class(obo:OpenLHS-Core_0000033))
Declaration(Class(obo:OpenLHS-Core_0000034))
Declaration(Class(obo:OpenLHS-Core_0000035))
Declaration(Class(obo:OpenLHS-Core_0000036))
Declaration(Class(obo:OpenLHS-Core_0000043))
Declaration(Class(obo:OpenLHS-Core_0000044))
Declaration(Class(obo:OpenLHS-Core_0000045))
Declaration(Class(obo:OpenLHS-Core_0000051))
Declaration(Class(obo:OpenLHS-Core_0000052))
Declaration(Class(obo:OpenLHS-Core_0000053))
Declaration(Class(obo:OpenLHS-Core_0000054))
Declaration(Class(obo:OpenLHS-Core_0000055))
Declaration(Class(obo:OpenLHS-Core_0000056))
Declaration(Class(obo:OpenLHS-Core_0000057))
Declaration(Class(obo:OpenLHS-Core_0000060))
Declaration(Class(obo:OpenLHS-Core_0000065))
Declaration(Class(obo:SEPIO_0000174))
Declaration(Class(obo:SEPIO_0000187))
Declaration(Class(CommonCoreOntologies:Agent))
Declaration(Class(CommonCoreOntologies:AgentCapability))
Declaration(ObjectProperty(obo:BFO_0000050))
Declaration(ObjectProperty(obo:BFO_0000051))
Declaration(ObjectProperty(obo:BFO_0000054))
Declaration(ObjectProperty(obo:BFO_0000055))
Declaration(ObjectProperty(obo:BFO_0000062))
Declaration(ObjectProperty(obo:BFO_0000063))
Declaration(ObjectProperty(obo:BFO_0000066))
Declaration(ObjectProperty(obo:BFO_0000067))
Declaration(ObjectProperty(obo:IAO_0000136))
Declaration(ObjectProperty(obo:IAO_0000142))
Declaration(ObjectProperty(obo:IAO_0000143))
Declaration(ObjectProperty(obo:IAO_0000219))
Declaration(ObjectProperty(obo:IAO_0000235))
Declaration(ObjectProperty(obo:OBI_0000293))
Declaration(ObjectProperty(obo:OBI_0000295))
Declaration(ObjectProperty(obo:OBI_0000299))
Declaration(ObjectProperty(obo:OBI_0000312))
Declaration(ObjectProperty(obo:OMRSE_00000068))
Declaration(ObjectProperty(obo:OpenLHS-Core_0000001))
Declaration(ObjectProperty(obo:OpenLHS-Core_0000004))
Declaration(ObjectProperty(obo:OpenLHS-Core_0000005))
Declaration(ObjectProperty(obo:OpenLHS-Core_0000007))
Declaration(ObjectProperty(obo:OpenLHS-Core_0000008))
Declaration(ObjectProperty(obo:OpenLHS-Core_0000066))
Declaration(ObjectProperty(obo:OpenLHS-Core_0000067))
Declaration(ObjectProperty(obo:OpenLHS-Core_0000070))
Declaration(ObjectProperty(obo:OpenLHS-Core_0000071))
Declaration(ObjectProperty(obo:RO_0000052))
Declaration(ObjectProperty(obo:RO_0000053))
Declaration(ObjectProperty(obo:RO_0000056))
Declaration(ObjectProperty(obo:RO_0000057))
Declaration(ObjectProperty(obo:RO_0000058))
Declaration(ObjectProperty(obo:RO_0000059))
Declaration(ObjectProperty(obo:RO_0000079))
Declaration(ObjectProperty(obo:RO_0000080))
Declaration(ObjectProperty(obo:RO_0000081))
Declaration(ObjectProperty(obo:RO_0000085))
Declaration(ObjectProperty(obo:RO_0000086))
Declaration(ObjectProperty(obo:RO_0000087))
Declaration(ObjectProperty(obo:RO_0000091))
Declaration(ObjectProperty(obo:RO_0000092))
Declaration(ObjectProperty(obo:RO_0002018))
Declaration(ObjectProperty(obo:RO_0002081))
Declaration(ObjectProperty(obo:RO_0002082))
Declaration(ObjectProperty(obo:RO_0002083))
Declaration(ObjectProperty(obo:RO_0002084))
Declaration(ObjectProperty(obo:RO_0002085))
Declaration(ObjectProperty(obo:RO_0002086))
Declaration(ObjectProperty(obo:RO_0002087))
Declaration(ObjectProperty(obo:RO_0002088))
Declaration(ObjectProperty(obo:RO_0002089))
Declaration(ObjectProperty(obo:RO_0002090))
Declaration(ObjectProperty(obo:RO_0002091))
Declaration(ObjectProperty(obo:RO_0002092))
Declaration(ObjectProperty(obo:RO_0002093))
Declaration(ObjectProperty(obo:RO_0002180))
Declaration(ObjectProperty(obo:RO_0002222))
Declaration(ObjectProperty(obo:RO_0002223))
Declaration(ObjectProperty(obo:RO_0002224))
Declaration(ObjectProperty(obo:RO_0002229))
Declaration(ObjectProperty(obo:RO_0002230))
Declaration(ObjectProperty(obo:RO_0002233))
Declaration(ObjectProperty(obo:RO_0002234))
Declaration(ObjectProperty(obo:RO_0002350))
Declaration(ObjectProperty(obo:RO_0002351))
Declaration(ObjectProperty(obo:RO_0002352))
Declaration(ObjectProperty(obo:RO_0002353))
Declaration(ObjectProperty(obo:RO_0002479))
Declaration(ObjectProperty(CommonCoreOntologies:agent_in))
Declaration(ObjectProperty(CommonCoreOntologies:capability_of))
Declaration(ObjectProperty(CommonCoreOntologies:has_agent))
Declaration(ObjectProperty(CommonCoreOntologies:has_capability))
Declaration(DataProperty(obo:Ontorel-Core_0000002))
Declaration(DataProperty(obo:Ontorel-Core_0000003))
Declaration(DataProperty(obo:Ontorel-Core_0000004))
Declaration(AnnotationProperty(obo:BFO_0000179))
Declaration(AnnotationProperty(obo:BFO_0000180))
Declaration(AnnotationProperty(obo:IAO_0000111))
Declaration(AnnotationProperty(obo:IAO_0000112))
Declaration(AnnotationProperty(obo:IAO_0000114))
Declaration(AnnotationProperty(obo:IAO_0000115))
Declaration(AnnotationProperty(obo:IAO_0000116))
Declaration(AnnotationProperty(obo:IAO_0000117))
Declaration(AnnotationProperty(obo:IAO_0000118))
Declaration(AnnotationProperty(obo:IAO_0000119))
Declaration(AnnotationProperty(obo:IAO_0000232))
Declaration(AnnotationProperty(obo:IAO_0000233))
Declaration(AnnotationProperty(obo:IAO_0000412))
Declaration(AnnotationProperty(obo:IAO_0000600))
Declaration(AnnotationProperty(obo:IAO_0000601))
Declaration(AnnotationProperty(obo:IAO_0000602))
Declaration(AnnotationProperty(obo:IAO_0010000))
Declaration(AnnotationProperty(obo:Ontorel-Core_0000005))
Declaration(AnnotationProperty(obo:OpenLHS-Core_0000061))
Declaration(AnnotationProperty(obo:OpenLHS-Core_0000062))
Declaration(AnnotationProperty(obo:OpenLHS-Core_0000063))
Declaration(AnnotationProperty(obo:OpenLHS-Core_0000064))
Declaration(AnnotationProperty(obo:RO_0001900))
Declaration(AnnotationProperty(obo:RO_0002259))
Declaration(AnnotationProperty(obo:RO_0002575))
Declaration(AnnotationProperty(obo:RO_0040042))
Declaration(AnnotationProperty(obo:valid_for_go_annotation_extension))
Declaration(AnnotationProperty(obo:valid_for_go_gp2term))
Declaration(AnnotationProperty(obo:valid_for_go_ontology))
Declaration(AnnotationProperty(obo:valid_for_gocam))
Declaration(AnnotationProperty(OpenLHS-Core:OpenLHS-H))
Declaration(AnnotationProperty(subsets:ro-eco))
Declaration(AnnotationProperty(dc:contributor))
Declaration(AnnotationProperty(dc:creator))
Declaration(AnnotationProperty(dc:date))
Declaration(AnnotationProperty(dc:member))
Declaration(AnnotationProperty(dc:source))
Declaration(AnnotationProperty(terms:description))
Declaration(AnnotationProperty(terms:license))
Declaration(AnnotationProperty(terms:source))
Declaration(AnnotationProperty(terms:title))
Declaration(AnnotationProperty(oboInOwl:SubsetProperty))
Declaration(AnnotationProperty(oboInOwl:created_by))
Declaration(AnnotationProperty(oboInOwl:creation_date))
Declaration(AnnotationProperty(oboInOwl:inSubset))
Declaration(AnnotationProperty(CommonCoreOntologies:is_curated_in_ontology))
Declaration(AnnotationProperty(rdfs:isDefinedBy))
Declaration(AnnotationProperty(rdfs:seeAlso))
Declaration(AnnotationProperty(foaf:homepage))
Declaration(AnnotationProperty(foaf:mbox))
Declaration(Datatype(obo:Ontorel-Core_0000001))
Declaration(Datatype(obo:Ontorel-Core_0000006))
############################
#   Annotation Properties
############################

# Annotation Property: obo:BFO_0000179 (BFO OWL specification label)

AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000179 "Relates an entity in the ontology to the name of the variable that is used to represent it in the code that generates the BFO OWL file from the lispy specification."@en)
AnnotationAssertion(obo:IAO_0000232 obo:BFO_0000179 "Really of interest to developers only"@en)
AnnotationAssertion(rdfs:label obo:BFO_0000179 "BFO OWL specification label"@en)
SubAnnotationPropertyOf(obo:BFO_0000179 rdfs:label)

# Annotation Property: obo:BFO_0000180 (BFO CLIF specification label)

AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000180 "Relates an entity in the ontology to the term that is used to represent it in the the CLIF specification of BFO2"@en)
AnnotationAssertion(obo:IAO_0000119 obo:BFO_0000180 "Person:Alan Ruttenberg")
AnnotationAssertion(obo:IAO_0000232 obo:BFO_0000180 "Really of interest to developers only"@en)
AnnotationAssertion(rdfs:label obo:BFO_0000180 "BFO CLIF specification label"@en)
SubAnnotationPropertyOf(obo:BFO_0000180 rdfs:label)

# Annotation Property: obo:IAO_0000111 (editor preferred term)

AnnotationAssertion(rdfs:isDefinedBy obo:IAO_0000111 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000111 "editor preferred term"@en)

# Annotation Property: obo:IAO_0000112 (example of usage)

AnnotationAssertion(rdfs:isDefinedBy obo:IAO_0000112 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000112 "example of usage"@en)

# Annotation Property: obo:IAO_0000115 (definition)

AnnotationAssertion(rdfs:isDefinedBy obo:IAO_0000115 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000115 "definition"@en)

# Annotation Property: obo:IAO_0000116 (editor note)

AnnotationAssertion(rdfs:isDefinedBy obo:IAO_0000116 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000116 "editor note"@en)

# Annotation Property: obo:IAO_0000117 (term editor)

AnnotationAssertion(rdfs:isDefinedBy obo:IAO_0000117 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000117 "term editor"@en)

# Annotation Property: obo:IAO_0000118 (alternative term)

AnnotationAssertion(rdfs:isDefinedBy obo:IAO_0000118 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000118 "alternative term"@en)

# Annotation Property: obo:IAO_0000119 (definition source)

AnnotationAssertion(rdfs:isDefinedBy obo:IAO_0000119 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000119 "definition source"@en)

# Annotation Property: obo:IAO_0000232 (curator note)

AnnotationAssertion(rdfs:isDefinedBy obo:IAO_0000232 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000232 "curator note"@en)

# Annotation Property: obo:IAO_0000412 (imported from)

AnnotationAssertion(rdfs:isDefinedBy obo:IAO_0000412 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000412 "imported from"@en)

# Annotation Property: obo:IAO_0000600 (elucidation)

AnnotationAssertion(rdfs:isDefinedBy obo:IAO_0000600 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000600 "elucidation"@en)

# Annotation Property: obo:IAO_0000601 (has associated axiom(nl))

AnnotationAssertion(rdfs:isDefinedBy obo:IAO_0000601 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000601 "has associated axiom(nl)"@en)

# Annotation Property: obo:IAO_0000602 (has associated axiom(fol))

AnnotationAssertion(rdfs:isDefinedBy obo:IAO_0000602 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:IAO_0000602 "has associated axiom(fol)"@en)

# Annotation Property: obo:IAO_0010000 (has axiom label)

AnnotationAssertion(rdfs:isDefinedBy obo:IAO_0010000 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:IAO_0010000 "has axiom label"@en)

# Annotation Property: obo:Ontorel-Core_0000005 (ontorel specification)

AnnotationAssertion(obo:IAO_0000115 obo:Ontorel-Core_0000005 "An annotation property used to tag relevant classes for ontorel generation."@en)
AnnotationAssertion(rdfs:comment obo:Ontorel-Core_0000005 "Three values for this annotation (WIP) :
 - interest: means that the annotated class instances or associated data properties are of interest for a request.
 - joint: means that the annotated clas or property is necessary for a jointure in the request.
 - pivot: means that the annotated class is the pivot of the request."@en)
AnnotationAssertion(rdfs:label obo:Ontorel-Core_0000005 "ontorel specification"@en)

# Annotation Property: obo:OpenLHS-Core_0000061 (definitional necessary conditions)

AnnotationAssertion(obo:IAO_0000115 obo:OpenLHS-Core_0000061 "Necessary condition that is definitional, that is the notion to be defined does not appear in the condition."@en)
AnnotationAssertion(Annotation(rdfs:comment "If we know several definitional necessary conditions associated with an entity, we write as definitional necessary condition the conjunction of them."@en) obo:OpenLHS-Core_0000062 obo:OpenLHS-Core_0000061 "Necessary condition that is definitional, that is the notion to be defined does not appear in the condition."@en)
AnnotationAssertion(rdfs:label obo:OpenLHS-Core_0000061 "definitional necessary conditions"@en)

# Annotation Property: obo:OpenLHS-Core_0000062 (definitional necessary and sufficient conditions)

AnnotationAssertion(obo:IAO_0000115 obo:OpenLHS-Core_0000062 "A necessary and sufficient condition that is definitional, that is the notion to be defined does not appear in the condition."@en)
AnnotationAssertion(Annotation(rdfs:comment "If we know several definitional necessary and sufficient conditions associated with an entity, we regroup them in the same annotation."@en) obo:OpenLHS-Core_0000062 obo:OpenLHS-Core_0000062 "A necessary and sufficient condition that is definitional, that is the notion to be defined does not appear in the condition."@en)
AnnotationAssertion(rdfs:label obo:OpenLHS-Core_0000062 "definitional necessary and sufficient conditions"@en)

# Annotation Property: obo:OpenLHS-Core_0000063 (necessary conditions)

AnnotationAssertion(obo:IAO_0000600 obo:OpenLHS-Core_0000063 "Human-readable necessary membership condition(s) of a class or a property."@en)
AnnotationAssertion(rdfs:comment obo:OpenLHS-Core_0000063 "We introduce 'necessary conditions' rather than 'necessary condition' to avoid the multiplication of annotations."@en)
AnnotationAssertion(rdfs:label obo:OpenLHS-Core_0000063 "necessary conditions"@en)

# Annotation Property: obo:OpenLHS-Core_0000064 (necessary and sufficient conditions)

AnnotationAssertion(obo:IAO_0000600 obo:OpenLHS-Core_0000064 "Human-readable necessary and sufficient membership conditions of a class or a property."@en)
AnnotationAssertion(rdfs:label obo:OpenLHS-Core_0000064 "necessary and sufficient conditions"@en)

# Annotation Property: obo:RO_0002259 (obo:RO_0002259)

SubAnnotationPropertyOf(obo:RO_0002259 oboInOwl:SubsetProperty)

# Annotation Property: obo:valid_for_go_annotation_extension (obo:valid_for_go_annotation_extension)

SubAnnotationPropertyOf(obo:valid_for_go_annotation_extension oboInOwl:SubsetProperty)

# Annotation Property: obo:valid_for_go_gp2term (obo:valid_for_go_gp2term)

SubAnnotationPropertyOf(obo:valid_for_go_gp2term oboInOwl:SubsetProperty)

# Annotation Property: obo:valid_for_go_ontology (obo:valid_for_go_ontology)

SubAnnotationPropertyOf(obo:valid_for_go_ontology oboInOwl:SubsetProperty)

# Annotation Property: obo:valid_for_gocam (obo:valid_for_gocam)

SubAnnotationPropertyOf(obo:valid_for_gocam oboInOwl:SubsetProperty)

# Annotation Property: OpenLHS-Core:OpenLHS-H (OpenLHS-H)

AnnotationAssertion(rdfs:comment OpenLHS-Core:OpenLHS-H "OpenLHS classes relevant to humans."@en)
AnnotationAssertion(rdfs:label OpenLHS-Core:OpenLHS-H "OpenLHS-H"@en)
SubAnnotationPropertyOf(OpenLHS-Core:OpenLHS-H oboInOwl:SubsetProperty)

# Annotation Property: subsets:ro-eco (subsets:ro-eco)

SubAnnotationPropertyOf(subsets:ro-eco oboInOwl:SubsetProperty)

# Annotation Property: terms:description (description)

AnnotationAssertion(rdfs:label terms:description "description")

# Annotation Property: terms:license (license)

AnnotationAssertion(rdfs:label terms:license "license")

# Annotation Property: terms:title (title)

AnnotationAssertion(rdfs:label terms:title "title")


############################
#   Object Properties
############################

# Object Property: obo:BFO_0000050 (part of)

AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000050 "is part of"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000050 "my brain is part of my body (continuant parthood, two material entities)"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000050 "my stomach cavity is part of my stomach (continuant parthood, immaterial entity is part of material entity)"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000050 "this day is part of this year (occurrent parthood)"@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000050 "a core relation that holds between a part and its whole"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000050 "Everything is part of itself. Any part of any part of a thing is itself part of that thing. Two distinct things cannot be part of each other."@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000050 "Occurrents are not subject to change and so parthood between occurrents holds for all the times that the part exists. Many continuants are subject to change, so parthood between continuants will only hold at certain times, but this is difficult to specify in OWL. See http://purl.obolibrary.org/obo/ro/docs/temporal-semantics/"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000050 "Parthood requires the part and the whole to have compatible classes: only an occurrent can be part of an occurrent; only a process can be part of a process; only a continuant can be part of a continuant; only an independent continuant can be part of an independent continuant; only an immaterial entity can be part of an immaterial entity; only a specifically dependent continuant can be part of a specifically dependent continuant; only a generically dependent continuant can be part of a generically dependent continuant. (This list is not exhaustive.)

A continuant cannot be part of an occurrent: use 'participates in'. An occurrent cannot be part of a continuant: use 'has participant'. A material entity cannot be part of an immaterial entity: use 'has location'. A specifically dependent continuant cannot be part of an independent continuant: use 'inheres in'. An independent continuant cannot be part of a specifically dependent continuant: use 'bearer of'."@en)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000050 "part_of"@en)
AnnotationAssertion(obo:RO_0001900 obo:BFO_0000050 obo:RO_0001901)
AnnotationAssertion(obo:RO_0040042 obo:BFO_0000050 obo:BFO_0000002)
AnnotationAssertion(obo:RO_0040042 obo:BFO_0000050 obo:BFO_0000003)
AnnotationAssertion(obo:RO_0040042 obo:BFO_0000050 obo:BFO_0000004)
AnnotationAssertion(obo:RO_0040042 obo:BFO_0000050 obo:BFO_0000017)
AnnotationAssertion(obo:RO_0040042 obo:BFO_0000050 obo:BFO_0000019)
AnnotationAssertion(obo:RO_0040042 obo:BFO_0000050 obo:BFO_0000020)
AnnotationAssertion(obo:RO_0040042 obo:BFO_0000050 obo:BFO_0000031)
AnnotationAssertion(oboInOwl:inSubset obo:BFO_0000050 obo:valid_for_go_annotation_extension)
AnnotationAssertion(oboInOwl:inSubset obo:BFO_0000050 obo:valid_for_go_gp2term)
AnnotationAssertion(oboInOwl:inSubset obo:BFO_0000050 obo:valid_for_go_ontology)
AnnotationAssertion(oboInOwl:inSubset obo:BFO_0000050 obo:valid_for_gocam)
AnnotationAssertion(rdfs:label obo:BFO_0000050 "part of"@en)
AnnotationAssertion(rdfs:seeAlso obo:BFO_0000050 <http://ontologydesignpatterns.org/wiki/Community:Parts_and_Collections>)
AnnotationAssertion(rdfs:seeAlso obo:BFO_0000050 <http://ontologydesignpatterns.org/wiki/Submissions:PartOf>)
AnnotationAssertion(rdfs:seeAlso obo:BFO_0000050 "http://www.obofoundry.org/ro/#OBO_REL:part_of")
InverseObjectProperties(obo:BFO_0000050 obo:BFO_0000051)
TransitiveObjectProperty(obo:BFO_0000050)

# Object Property: obo:BFO_0000051 (has part)

AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000051 "has part"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000051 "my body has part my brain (continuant parthood, two material entities)"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000051 "my stomach has part my stomach cavity (continuant parthood, material entity has part immaterial entity)"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000051 "this year has part this day (occurrent parthood)"@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000051 "a core relation that holds between a whole and its part"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000051 "Everything has itself as a part. Any part of any part of a thing is itself part of that thing. Two distinct things cannot have each other as a part."@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000051 "Occurrents are not subject to change and so parthood between occurrents holds for all the times that the part exists. Many continuants are subject to change, so parthood between continuants will only hold at certain times, but this is difficult to specify in OWL. See http://purl.obolibrary.org/obo/ro/docs/temporal-semantics/"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000051 "Parthood requires the part and the whole to have compatible classes: only an occurrent have an occurrent as part; only a process can have a process as part; only a continuant can have a continuant as part; only an independent continuant can have an independent continuant as part; only a specifically dependent continuant can have a specifically dependent continuant as part; only a generically dependent continuant can have a generically dependent continuant as part. (This list is not exhaustive.)

A continuant cannot have an occurrent as part: use 'participates in'. An occurrent cannot have a continuant as part: use 'has participant'. An immaterial entity cannot have a material entity as part: use 'location of'. An independent continuant cannot have a specifically dependent continuant as part: use 'bearer of'. A specifically dependent continuant cannot have an independent continuant as part: use 'inheres in'."@en)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000051 "has_part"@en)
AnnotationAssertion(obo:RO_0001900 obo:BFO_0000051 obo:RO_0001901)
AnnotationAssertion(oboInOwl:inSubset obo:BFO_0000051 obo:valid_for_go_annotation_extension)
AnnotationAssertion(oboInOwl:inSubset obo:BFO_0000051 obo:valid_for_go_ontology)
AnnotationAssertion(oboInOwl:inSubset obo:BFO_0000051 obo:valid_for_gocam)
AnnotationAssertion(rdfs:label obo:BFO_0000051 "has part"@en)
TransitiveObjectProperty(obo:BFO_0000051)

# Object Property: obo:BFO_0000054 (realized in)

AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000054 "realized in"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000054 "this disease is realized in this disease course"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000054 "this fragility is realized in this shattering"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000054 "this investigator role is realized in this investigation"@en)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000054 "is realized by"@en)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000054 "realized_in"@en)
AnnotationAssertion(obo:IAO_0000600 obo:BFO_0000054 "[copied from inverse property 'realizes'] to say that b realizes c at t is to assert that there is some material entity d & b is a process which has participant d at t & c is a disposition or role of which d is bearer_of at t& the type instantiated by b is correlated with the type instantiated by c. (axiom label in BFO2 Reference: [059-003])"@en)
AnnotationAssertion(rdfs:comment obo:BFO_0000054 "Paraphrase of elucidation: a relation between a realizable entity and a process, where there is some material entity that is bearer of the realizable entity and participates in the process, and the realizable entity comes to be realized in the course of the process")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000054 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000054 "realized in"@en)
InverseObjectProperties(obo:BFO_0000054 obo:BFO_0000055)
ObjectPropertyDomain(obo:BFO_0000054 obo:BFO_0000017)
ObjectPropertyRange(obo:BFO_0000054 obo:BFO_0000015)

# Object Property: obo:BFO_0000055 (realizes)

AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000055 "realizes"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000055 "this disease course realizes this disease"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000055 "this investigation realizes this investigator role"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000055 "this shattering realizes this fragility"@en)
AnnotationAssertion(obo:IAO_0000600 obo:BFO_0000055 "to say that b realizes c at t is to assert that there is some material entity d & b is a process which has participant d at t & c is a disposition or role of which d is bearer_of at t& the type instantiated by b is correlated with the type instantiated by c. (axiom label in BFO2 Reference: [059-003])"@en)
AnnotationAssertion(rdfs:comment obo:BFO_0000055 "Paraphrase of elucidation: a relation between a process and a realizable entity, where there is some material entity that is bearer of the realizable entity and participates in the process, and the realizable entity comes to be realized in the course of the process")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000055 obo:iao.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000055 "realizes"@en)
ObjectPropertyDomain(obo:BFO_0000055 obo:BFO_0000015)
ObjectPropertyRange(obo:BFO_0000055 obo:BFO_0000017)

# Object Property: obo:BFO_0000062 (preceded by)

AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000062 "preceded by"@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000062 "x is preceded by y if and only if the time point at which y ends is before or equivalent to the time point at which x starts. Formally: x preceded by y iff ω(y) <= α(x), where α is a function that maps a process to a start point, and ω is a function that maps a process to an end point."@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000062 "An example is: translation preceded_by transcription; aging preceded_by development (not however death preceded_by aging). Where derives_from links classes of continuants, preceded_by links classes of processes. Clearly, however, these two relations are not independent of each other. Thus if cells of type C1 derive_from cells of type C, then any cell division involving an instance of C1 in a given lineage is preceded_by cellular processes involving an instance of C.    The assertion P preceded_by P1 tells us something about Ps in general: that is, it tells us something about what happened earlier, given what we know about what happened later. Thus it does not provide information pointing in the opposite direction, concerning instances of P1 in general; that is, that each is such as to be succeeded by some instance of P. Note that an assertion to the effect that P preceded_by P1 is rather weak; it tells us little about the relations between the underlying instances in virtue of which the preceded_by relation obtains. Typically we will be interested in stronger relations, for example in the relation immediately_preceded_by, or in relations which combine preceded_by with a condition to the effect that the corresponding instances of P and P1 share participants, or that their participants are connected by relations of derivation, or (as a first step along the road to a treatment of causality) that the one process in some way affects (for example, initiates or regulates) the other."@en)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000062 "is preceded by"@en)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000062 "preceded_by"@en)
AnnotationAssertion(dc:source obo:BFO_0000062 "http://www.obofoundry.org/ro/#OBO_REL:preceded_by")
AnnotationAssertion(oboInOwl:inSubset obo:BFO_0000062 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:BFO_0000062 "preceded by"@en)
SubObjectPropertyOf(obo:BFO_0000062 obo:RO_0002086)
InverseObjectProperties(obo:BFO_0000062 obo:BFO_0000063)
TransitiveObjectProperty(obo:BFO_0000062)
ObjectPropertyDomain(obo:BFO_0000062 obo:BFO_0000003)
ObjectPropertyRange(obo:BFO_0000062 obo:BFO_0000003)

# Object Property: obo:BFO_0000063 (precedes)

AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000063 "precedes"@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000063 "x precedes y if and only if the time point at which x ends is before or equivalent to the time point at which y starts. Formally: x precedes y iff ω(x) <= α(y), where α is a function that maps a process to a start point, and ω is a function that maps a process to an end point."@en)
AnnotationAssertion(oboInOwl:inSubset obo:BFO_0000063 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:BFO_0000063 "precedes"@en)
SubObjectPropertyOf(obo:BFO_0000063 obo:RO_0002222)
TransitiveObjectProperty(obo:BFO_0000063)
ObjectPropertyDomain(obo:BFO_0000063 obo:BFO_0000003)
ObjectPropertyRange(obo:BFO_0000063 obo:BFO_0000003)

# Object Property: obo:BFO_0000066 (occurs in)

AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000066 "occurs in"@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000066 "b occurs_in c =def b is a process and c is a material entity or immaterial entity& there exists a spatiotemporal region r and b occupies_spatiotemporal_region r.& forall(t) if b exists_at t then c exists_at t & there exist spatial regions s and s’ where & b spatially_projects_onto s at t& c is occupies_spatial_region s’ at t& s is a proper_continuant_part_of s’ at t"@en)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000066 "occurs_in"@en)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000066 "unfolds in"@en)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000066 "unfolds_in"@en)
AnnotationAssertion(oboInOwl:inSubset obo:BFO_0000066 obo:valid_for_go_annotation_extension)
AnnotationAssertion(oboInOwl:inSubset obo:BFO_0000066 obo:valid_for_go_ontology)
AnnotationAssertion(oboInOwl:inSubset obo:BFO_0000066 obo:valid_for_gocam)
AnnotationAssertion(rdfs:comment obo:BFO_0000066 "Paraphrase of definition: a relation between a process and an independent continuant, in which the process takes place entirely within the independent continuant")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000066 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000066 "occurs in"@en)
InverseObjectProperties(obo:BFO_0000066 obo:BFO_0000067)
ObjectPropertyDomain(obo:BFO_0000066 obo:BFO_0000003)
ObjectPropertyRange(obo:BFO_0000066 obo:BFO_0000004)

# Object Property: obo:BFO_0000067 (contains process)

AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000067 "site of"@en)
AnnotationAssertion(obo:IAO_0000115 obo:BFO_0000067 "[copied from inverse property 'occurs in'] b occurs_in c =def b is a process and c is a material entity or immaterial entity& there exists a spatiotemporal region r and b occupies_spatiotemporal_region r.& forall(t) if b exists_at t then c exists_at t & there exist spatial regions s and s’ where & b spatially_projects_onto s at t& c is occupies_spatial_region s’ at t& s is a proper_continuant_part_of s’ at t"@en)
AnnotationAssertion(rdfs:comment obo:BFO_0000067 "Paraphrase of definition: a relation between an independent continuant and a process, in which the process takes place entirely within the independent continuant")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000067 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000067 "contains process"@en)

# Object Property: obo:IAO_0000136 (is about)

AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000136 "This document is about information artifacts and their representations"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000136 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000136 "A (currently) primitive relation that relates an information artifact to an entity."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000136 "7/6/2009 Alan Ruttenberg. Following discussion with Jonathan Rees, and introduction of \"mentions\" relation. Weaken the is_about relationship to be primitive. 

We will try to build it back up by elaborating the various subproperties that are more precisely defined.

Some currently missing phenomena that should be considered \"about\" are predications - \"The only person who knows the answer is sitting beside me\" , Allegory, Satire, and other literary forms that can be topical without explicitly mentioning the topic."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000136 "person:Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000136 "Smith, Ceusters, Ruttenberg, 2000 years of philosophy"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000136 "is about"@en)
ObjectPropertyDomain(obo:IAO_0000136 obo:IAO_0000030)

# Object Property: obo:IAO_0000142 (mentions)

AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000142 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000142 "An information artifact IA mentions an entity E exactly when it has a component/part that denotes E"@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000142 "7/6/2009 Alan Ruttenberg. P4 RC1 munges our GCI so remove it for now: mentions some entity equivalentTo has_part some ('generically denotes' some entity)"@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000142 "7/6/2009 Alan Ruttenberg: Add this relation following conversation with Jonathan Rees that N&S GCI for is_about was too strong. Really it was simply sufficient. To effect this change we introduce this relation, which is subproperty of is_about, and have previous GCI use this relation \"mentions\" in it's (logical) definition"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000142 "PERSON: Jonathan Rees"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000142 "Person: Alan Ruttenberg"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000142 "mentions"@en)
SubObjectPropertyOf(obo:IAO_0000142 obo:IAO_0000136)
InverseObjectProperties(obo:IAO_0000142 obo:IAO_0000143)

# Object Property: obo:IAO_0000143 (mentioned by)

AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000143 "Inverse of the relation 'mentions'"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000143 <http://orcid.org/0000-0002-8844-9165>)
AnnotationAssertion(obo:IAO_0000233 obo:IAO_0000143 <https://github.com/information-artifact-ontology/IAO/issues/250>)
AnnotationAssertion(dc:date obo:IAO_0000143 "2022-01-28T07:20:08Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label obo:IAO_0000143 "mentioned by"@en)

# Object Property: obo:IAO_0000219 (denotes)

AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000219 "A person's name denotes the person. A variable name in a computer program denotes some piece of memory. Lexically equivalent strings can denote different things, for instance \"Alan\" can denote different people. In each case of use, there is a case of the denotation relation obtaining, between \"Alan\" and the person that is being named."@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000219 "A primitive, instance-level, relation obtaining between an information content entity and some portion of reality. Denotation is what happens when someone creates an information content entity E in order to specifically refer to something. The only relation between E and the thing is that E can be used to 'pick out' the thing. This relation connects those two together. Freedictionary.com sense 3: To signify directly; refer to specifically"@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000219 "2009-11-10 Alan Ruttenberg. Old definition said the following to emphasize the generic nature of this relation. We no longer have 'specifically denotes', which would have been primitive, so make this relation primitive.
g denotes r =def 
r is a portion of reality
there is some c that is a concretization of g 
every c that is a concretization of g specifically denotes r"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000219 "person:Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000219 "Conversations with Barry Smith, Werner Ceusters, Bjoern Peters, Michel Dumontier, Melanie Courtot, James Malone, Bill Hogan"@en)
AnnotationAssertion(rdfs:comment obo:IAO_0000219 ""@en)
AnnotationAssertion(rdfs:label obo:IAO_0000219 "denotes"@en)
SubObjectPropertyOf(obo:IAO_0000219 obo:IAO_0000136)
InverseObjectProperties(obo:IAO_0000219 obo:IAO_0000235)
ObjectPropertyDomain(obo:IAO_0000219 obo:IAO_0000030)
ObjectPropertyRange(obo:IAO_0000219 obo:BFO_0000001)

# Object Property: obo:IAO_0000235 (denoted by)

AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000235 "inverse of the relation 'denotes'"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000235 "Person: Jie Zheng, Chris Stoeckert, Mike Conlon"@en)
AnnotationAssertion(obo:IAO_0000233 obo:IAO_0000235 <https://github.com/information-artifact-ontology/IAO/issues/206>)
AnnotationAssertion(rdfs:label obo:IAO_0000235 "denoted by"@en)
ObjectPropertyDomain(obo:IAO_0000235 obo:BFO_0000001)
ObjectPropertyRange(obo:IAO_0000235 obo:IAO_0000030)

# Object Property: obo:OBI_0000293 (has_specified_input)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000293 "has_specified_input")
AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000293 "has_specified_input"@en)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000293 "see is_input_of example_of_usage"@en)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000293 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000293 "The inverse property of is_specified_input_of"@en)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0000293 "8/17/09: specified inputs of one process are not necessarily specified inputs of a larger process that it is part of. This is in contrast to how 'has participant' works.")
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000293 "PERSON: Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000293 "PERSON: Bjoern Peters")
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000293 "PERSON: Larry Hunter")
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000293 "PERSON: Melanie Coutot")
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000293 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:OBI_0000293 "has_specified_input"@en)
EquivalentObjectProperties(obo:OBI_0000293 ObjectInverseOf(obo:OBI_0000295))
SubObjectPropertyOf(obo:OBI_0000293 obo:RO_0000057)
InverseObjectProperties(obo:OBI_0000293 obo:OBI_0000295)
ObjectPropertyDomain(obo:OBI_0000293 obo:OBI_0000011)

# Object Property: obo:OBI_0000295 (is_specified_input_of)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000295 "is_specified_input_of")
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000295 "some Autologous EBV(Epstein-Barr virus)-transformed B-LCL (B lymphocyte cell line) is_input_for instance of Chromum Release Assay described at https://wiki.cbil.upenn.edu/obiwiki/index.php/Chromium_Release_assay"@en)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000295 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000295 "A relation between a planned process and a continuant participating in that process that is not created during  the process. The presence of the continuant during the process is explicitly specified in the plan specification which the process realizes the concretization of."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000295 "Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000295 "PERSON:Bjoern Peters")
AnnotationAssertion(rdfs:label obo:OBI_0000295 "is_specified_input_of"@en)
SubObjectPropertyOf(obo:OBI_0000295 obo:RO_0000056)
ObjectPropertyRange(obo:OBI_0000295 obo:OBI_0000011)

# Object Property: obo:OBI_0000299 (has_specified_output)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000299 "has_specified_output")
AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000299 "has_specified_output"@en)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000299 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000299 "The inverse property of is_specified_output_of"@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000299 "PERSON: Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000299 "PERSON: Bjoern Peters")
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000299 "PERSON: Larry Hunter")
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000299 "PERSON: Melanie Courtot")
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000299 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:OBI_0000299 "has_specified_output"@en)
EquivalentObjectProperties(obo:OBI_0000299 ObjectInverseOf(obo:OBI_0000312))
SubObjectPropertyOf(obo:OBI_0000299 obo:RO_0000057)
InverseObjectProperties(obo:OBI_0000299 obo:OBI_0000312)
ObjectPropertyDomain(obo:OBI_0000299 obo:OBI_0000011)

# Object Property: obo:OBI_0000312 (is_specified_output_of)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000312 "is_specified_output_of")
AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000312 "is_specified_output_of"@en)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000312 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000312 "A relation between a planned process and a continuant participating in that process. The presence of the continuant at the end of the process is explicitly specified in the objective specification which the process realizes the concretization of."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000312 "Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000312 "PERSON:Bjoern Peters")
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000312 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:OBI_0000312 "is_specified_output_of"@en)
SubObjectPropertyOf(obo:OBI_0000312 obo:RO_0000056)
ObjectPropertyRange(obo:OBI_0000312 obo:OBI_0000011)

# Object Property: obo:OMRSE_00000068 (is administered by)

AnnotationAssertion(rdfs:label obo:OMRSE_00000068 "is administered by"@en)
AsymmetricObjectProperty(obo:OMRSE_00000068)

# Object Property: obo:OpenLHS-Core_0000001 (fills)

AnnotationAssertion(obo:IAO_0000600 obo:OpenLHS-Core_0000001 "A relation that holds between a filler and a slot it fills."@en)
AnnotationAssertion(rdfs:label obo:OpenLHS-Core_0000001 "fills"@en)
InverseObjectProperties(obo:OpenLHS-Core_0000001 obo:OpenLHS-Core_0000008)
InverseFunctionalObjectProperty(obo:OpenLHS-Core_0000001)
IrreflexiveObjectProperty(obo:OpenLHS-Core_0000001)
ObjectPropertyDomain(obo:OpenLHS-Core_0000001 obo:OpenLHS-Core_0000013)
ObjectPropertyRange(obo:OpenLHS-Core_0000001 obo:OpenLHS-Core_0000012)

# Object Property: obo:OpenLHS-Core_0000004 (is directed by)

AnnotationAssertion(obo:IAO_0000115 obo:OpenLHS-Core_0000004 "The inverse relations of directs"@en)
AnnotationAssertion(obo:OpenLHS-Core_0000062 obo:OpenLHS-Core_0000004 "The inverse relations of directs"@en)
AnnotationAssertion(rdfs:label obo:OpenLHS-Core_0000004 "is directed by"@en)
InverseObjectProperties(obo:OpenLHS-Core_0000004 obo:OpenLHS-Core_0000007)
ObjectPropertyDomain(obo:OpenLHS-Core_0000004 obo:BFO_0000015)
ObjectPropertyRange(obo:OpenLHS-Core_0000004 obo:IAO_0000033)

# Object Property: obo:OpenLHS-Core_0000005 (is about an aspect of)

AnnotationAssertion(obo:IAO_0000115 obo:OpenLHS-Core_0000005 "A is about an aspect of B := A is about a specifically dependent continuant that inheres in B."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000062 obo:OpenLHS-Core_0000005 "A is about an aspect of B := A is about a specifically dependent continuant that inheres in B."@en)
AnnotationAssertion(rdfs:label obo:OpenLHS-Core_0000005 "is about an aspect of"@en)
SubObjectPropertyOf(obo:OpenLHS-Core_0000005 obo:IAO_0000136)
ObjectPropertyDomain(obo:OpenLHS-Core_0000005 obo:IAO_0000030)

# Object Property: obo:OpenLHS-Core_0000007 (directs)

AnnotationAssertion(obo:IAO_0000115 obo:OpenLHS-Core_0000007 "A directs B := A is a directive information entity that guides an agent in the execution of B."@en)
AnnotationAssertion(Annotation(rdfs:comment "This includes failed attempts where B is not compliant to A."@en) obo:OpenLHS-Core_0000061 obo:OpenLHS-Core_0000007 "A directs B := A is a directive information entity that guides an agent in the execution of B."@en)
AnnotationAssertion(rdfs:label obo:OpenLHS-Core_0000007 "directs"@en)
ObjectPropertyDomain(obo:OpenLHS-Core_0000007 obo:IAO_0000033)
ObjectPropertyRange(obo:OpenLHS-Core_0000007 obo:BFO_0000015)

# Object Property: obo:OpenLHS-Core_0000008 (is filled by)

AnnotationAssertion(obo:IAO_0000115 obo:OpenLHS-Core_0000008 "The inverse relation of fills"@en)
AnnotationAssertion(obo:OpenLHS-Core_0000062 obo:OpenLHS-Core_0000008 "The inverse relation of fills"@en)
AnnotationAssertion(rdfs:label obo:OpenLHS-Core_0000008 "is filled by"@en)
FunctionalObjectProperty(obo:OpenLHS-Core_0000008)
IrreflexiveObjectProperty(obo:OpenLHS-Core_0000008)
ObjectPropertyDomain(obo:OpenLHS-Core_0000008 obo:OpenLHS-Core_0000012)
ObjectPropertyRange(obo:OpenLHS-Core_0000008 obo:OpenLHS-Core_0000013)

# Object Property: obo:OpenLHS-Core_0000066 (maximally directs)

AnnotationAssertion(obo:IAO_0000115 obo:OpenLHS-Core_0000066 "A maximally directs B := A directs B, and B is compliant to A."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000061 obo:OpenLHS-Core_0000066 "A maximally directs B := A directs B, and B is compliant to A."@en)
AnnotationAssertion(rdfs:comment obo:OpenLHS-Core_0000066 "Discussed in: Adrien Barton, Laure Vieu, Jean-François Ethier. Directing Actions. Workshop on Foundational Ontology (FOUST III), Joint Ontology Workshops (JOWO 2019), Sep 2019, Graz, Austria."@en)
AnnotationAssertion(rdfs:label obo:OpenLHS-Core_0000066 "maximally directs"@en)
SubObjectPropertyOf(obo:OpenLHS-Core_0000066 obo:OpenLHS-Core_0000007)
ObjectPropertyDomain(obo:OpenLHS-Core_0000066 obo:IAO_0000033)
ObjectPropertyRange(obo:OpenLHS-Core_0000066 obo:BFO_0000015)

# Object Property: obo:OpenLHS-Core_0000067 (is maximally directed by)

AnnotationAssertion(obo:IAO_0000115 obo:OpenLHS-Core_0000067 "The inverse relation of maximally directs."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000062 obo:OpenLHS-Core_0000067 "The inverse relation of maximally directs."@en)
AnnotationAssertion(rdfs:label obo:OpenLHS-Core_0000067 "is maximally directed by"@en)
SubObjectPropertyOf(obo:OpenLHS-Core_0000067 obo:OpenLHS-Core_0000004)
ObjectPropertyDomain(obo:OpenLHS-Core_0000067 obo:BFO_0000015)
ObjectPropertyRange(obo:OpenLHS-Core_0000067 obo:IAO_0000033)

# Object Property: obo:OpenLHS-Core_0000070 (component of)

AnnotationAssertion(obo:IAO_0000115 obo:OpenLHS-Core_0000070 "The inverse relation of has component."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000062 obo:OpenLHS-Core_0000070 "The inverse relation of has component."@en)
AnnotationAssertion(rdfs:label obo:OpenLHS-Core_0000070 "component of"@en)
SubObjectPropertyOf(obo:OpenLHS-Core_0000070 obo:BFO_0000050)
InverseObjectProperties(obo:OpenLHS-Core_0000070 obo:RO_0002180)

# Object Property: obo:OpenLHS-Core_0000071 (component process of)

AnnotationAssertion(obo:IAO_0000115 obo:OpenLHS-Core_0000071 "The inverse relation of has component process."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000062 obo:OpenLHS-Core_0000071 "The inverse relation of has component process."@en)
AnnotationAssertion(rdfs:label obo:OpenLHS-Core_0000071 "component process of"@en)
SubObjectPropertyOf(obo:OpenLHS-Core_0000071 obo:OpenLHS-Core_0000070)
InverseObjectProperties(obo:OpenLHS-Core_0000071 obo:RO_0002018)
ObjectPropertyDomain(obo:OpenLHS-Core_0000071 obo:BFO_0000015)
ObjectPropertyRange(obo:OpenLHS-Core_0000071 obo:BFO_0000015)

# Object Property: obo:RO_0000052 (characteristic of)

AnnotationAssertion(obo:IAO_0000111 obo:RO_0000052 "inheres in"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000052 "this fragility is a characteristic of this vase"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000052 "this red color is a characteristic of this apple"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000052 "a relation between a specifically dependent continuant (the characteristic) and any other entity (the bearer), in which the characteristic depends on the bearer for its existence."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000052 "inheres_in"@en)
AnnotationAssertion(obo:RO_0001900 obo:RO_0000052 obo:RO_0001901)
AnnotationAssertion(rdfs:comment obo:RO_0000052 "Note that this relation was previously called \"inheres in\", but was changed to be called \"characteristic of\" because BFO2 uses \"inheres in\" in a more restricted fashion. This relation differs from BFO2:inheres_in in two respects: (1) it does not impose a range constraint, and thus it allows qualities of processes, as well as of information entities, whereas BFO2 restricts inheres_in to only apply to independent continuants (2) it is declared functional, i.e. something can only be a characteristic of one thing.")
AnnotationAssertion(rdfs:label obo:RO_0000052 "characteristic of"@en)
InverseObjectProperties(obo:RO_0000052 obo:RO_0000053)
FunctionalObjectProperty(obo:RO_0000052)

# Object Property: obo:RO_0000053 (has characteristic)

AnnotationAssertion(obo:IAO_0000111 obo:RO_0000053 "bearer of"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000053 "this apple is bearer of this red color"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000053 "this vase is bearer of this fragility"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000053 "Inverse of characteristic_of"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000053 "A bearer can have many dependents, and its dependents can exist for different periods of time, but none of its dependents can exist when the bearer does not exist."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000053 "bearer_of"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000053 "is bearer of"@en)
AnnotationAssertion(obo:RO_0001900 obo:RO_0000053 obo:RO_0001901)
AnnotationAssertion(rdfs:label obo:RO_0000053 "has characteristic"@en)
InverseFunctionalObjectProperty(obo:RO_0000053)
ObjectPropertyRange(obo:RO_0000053 obo:BFO_0000020)

# Object Property: obo:RO_0000056 (participates in)

AnnotationAssertion(obo:IAO_0000111 obo:RO_0000056 "participates in"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000056 "this blood clot participates in this blood coagulation"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000056 "this input material (or this output material) participates in this process"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000056 "this investigator participates in this investigation"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000056 "a relation between a continuant and a process, in which the continuant is somehow involved in the process"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000056 "participates_in"@en)
AnnotationAssertion(rdfs:label obo:RO_0000056 "participates in"@en)
InverseObjectProperties(obo:RO_0000056 obo:RO_0000057)
ObjectPropertyDomain(obo:RO_0000056 obo:BFO_0000002)
ObjectPropertyRange(obo:RO_0000056 obo:BFO_0000003)

# Object Property: obo:RO_0000057 (has participant)

AnnotationAssertion(obo:IAO_0000111 obo:RO_0000057 "has participant"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000057 "this blood coagulation has participant this blood clot"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000057 "this investigation has participant this investigator"@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000057 "this process has participant this input material (or this output material)"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000057 "a relation between a process and a continuant, in which the continuant is somehow involved in the process"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000057 "Has_participant is a primitive instance-level relation between a process, a continuant, and a time at which the continuant participates in some way in the process. The relation obtains, for example, when this particular process of oxygen exchange across this particular alveolar membrane has_participant this particular sample of hemoglobin at this particular time."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000057 "has_participant"@en)
AnnotationAssertion(dc:source obo:RO_0000057 "http://www.obofoundry.org/ro/#OBO_REL:has_participant")
AnnotationAssertion(rdfs:label obo:RO_0000057 "has participant"@en)
ObjectPropertyDomain(obo:RO_0000057 obo:BFO_0000003)
ObjectPropertyRange(obo:RO_0000057 obo:BFO_0000002)

# Object Property: obo:RO_0000058 (is concretized as)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0000058 "A journal article is an information artifact that inheres in some number of printed journals. For each copy of the printed journal there is some quality that carries the journal article, such as a pattern of ink. The journal article (a generically dependent continuant) is concretized as the quality (a specifically dependent continuant), and both depend on that copy of the printed journal (an independent continuant)."@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000058 "An investigator reads a protocol and forms a plan to carry out an assay. The plan is a realizable entity (a specifically dependent continuant) that concretizes the protocol (a generically dependent continuant), and both depend on the investigator (an independent continuant). The plan is then realized by the assay (a process)."@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000058 "A relationship between a generically dependent continuant and a specifically dependent continuant, in which the generically dependent continuant depends on some independent continuant in virtue of the fact that the specifically dependent continuant also depends on that same independent continuant. A generically dependent continuant may be concretized as multiple specifically dependent continuants."@en)
AnnotationAssertion(rdfs:label obo:RO_0000058 "is concretized as"@en)
InverseObjectProperties(obo:RO_0000058 obo:RO_0000059)
ObjectPropertyDomain(obo:RO_0000058 obo:BFO_0000031)
ObjectPropertyRange(obo:RO_0000058 obo:BFO_0000020)

# Object Property: obo:RO_0000059 (concretizes)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0000059 "A journal article is an information artifact that inheres in some number of printed journals. For each copy of the printed journal there is some quality that carries the journal article, such as a pattern of ink. The quality (a specifically dependent continuant) concretizes the journal article (a generically dependent continuant), and both depend on that copy of the printed journal (an independent continuant)."@en)
AnnotationAssertion(obo:IAO_0000112 obo:RO_0000059 "An investigator reads a protocol and forms a plan to carry out an assay. The plan is a realizable entity (a specifically dependent continuant) that concretizes the protocol (a generically dependent continuant), and both depend on the investigator (an independent continuant). The plan is then realized by the assay (a process)."@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000059 "A relationship between a specifically dependent continuant and a generically dependent continuant, in which the generically dependent continuant depends on some independent continuant in virtue of the fact that the specifically dependent continuant also depends on that same independent continuant. Multiple specifically dependent continuants can concretize the same generically dependent continuant."@en)
AnnotationAssertion(rdfs:label obo:RO_0000059 "concretizes"@en)
ObjectPropertyDomain(obo:RO_0000059 obo:BFO_0000020)
ObjectPropertyRange(obo:RO_0000059 obo:BFO_0000031)

# Object Property: obo:RO_0000079 (function of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0000079 "this catalysis function is a function of this enzyme"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000079 "a relation between a function and an independent continuant (the bearer), in which the function specifically depends on the bearer for its existence"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000079 "A function inheres in its bearer at all times for which the function exists, however the function need not be realized at all the times that the function exists."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000079 "function_of"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000079 "is function of"@en)
AnnotationAssertion(rdfs:comment obo:RO_0000079 "This relation is modeled after the BFO relation of the same name which was in BFO2, but is used in a more restricted sense - specifically, we model this relation as functional (inherited from characteristic-of). Note that this relation is now removed from BFO2020.")
AnnotationAssertion(rdfs:label obo:RO_0000079 "function of"@en)
SubObjectPropertyOf(obo:RO_0000079 obo:RO_0000052)
InverseObjectProperties(obo:RO_0000079 obo:RO_0000085)
ObjectPropertyDomain(obo:RO_0000079 obo:BFO_0000034)

# Object Property: obo:RO_0000080 (quality of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0000080 "this red color is a quality of this apple"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000080 "a relation between a quality and an independent continuant (the bearer), in which the quality specifically depends on the bearer for its existence"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000080 "A quality inheres in its bearer at all times for which the quality exists."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000080 "is quality of"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000080 "quality_of"@en)
AnnotationAssertion(rdfs:comment obo:RO_0000080 "This relation is modeled after the BFO relation of the same name which was in BFO2, but is used in a more restricted sense - specifically, we model this relation as functional (inherited from characteristic-of). Note that this relation is now removed from BFO2020.")
AnnotationAssertion(rdfs:label obo:RO_0000080 "quality of"@en)
SubObjectPropertyOf(obo:RO_0000080 obo:RO_0000052)
InverseObjectProperties(obo:RO_0000080 obo:RO_0000086)

# Object Property: obo:RO_0000081 (role of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0000081 "this investigator role is a role of this person"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000081 "a relation between a role and an independent continuant (the bearer), in which the role specifically depends on the bearer for its existence"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000081 "A role inheres in its bearer at all times for which the role exists, however the role need not be realized at all the times that the role exists."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000081 "is role of"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000081 "role_of"@en)
AnnotationAssertion(rdfs:comment obo:RO_0000081 "This relation is modeled after the BFO relation of the same name which was in BFO2, but is used in a more restricted sense - specifically, we model this relation as functional (inherited from characteristic-of). Note that this relation is now removed from BFO2020.")
AnnotationAssertion(rdfs:label obo:RO_0000081 "role of"@en)
SubObjectPropertyOf(obo:RO_0000081 obo:RO_0000052)
InverseObjectProperties(obo:RO_0000081 obo:RO_0000087)

# Object Property: obo:RO_0000085 (has function)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0000085 "this enzyme has function this catalysis function (more colloquially: this enzyme has this catalysis function)"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000085 "a relation between an independent continuant (the bearer) and a function, in which the function specifically depends on the bearer for its existence"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000085 "A bearer can have many functions, and its functions can exist for different periods of time, but none of its functions can exist when the bearer does not exist. A function need not be realized at all the times that the function exists."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000085 "has_function"@en)
AnnotationAssertion(rdfs:label obo:RO_0000085 "has function"@en)
SubObjectPropertyOf(obo:RO_0000085 obo:RO_0000053)
ObjectPropertyDomain(obo:RO_0000085 obo:BFO_0000004)
ObjectPropertyRange(obo:RO_0000085 obo:BFO_0000034)

# Object Property: obo:RO_0000086 (has quality)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0000086 "this apple has quality this red color"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000086 "a relation between an independent continuant (the bearer) and a quality, in which the quality specifically depends on the bearer for its existence"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000086 "A bearer can have many qualities, and its qualities can exist for different periods of time, but none of its qualities can exist when the bearer does not exist."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000086 "has_quality"@en)
AnnotationAssertion(rdfs:label obo:RO_0000086 "has quality"@en)
SubObjectPropertyOf(obo:RO_0000086 obo:RO_0000053)
ObjectPropertyRange(obo:RO_0000086 obo:BFO_0000019)

# Object Property: obo:RO_0000087 (has role)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0000087 "this person has role this investigator role (more colloquially: this person has this role of investigator)"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0000087 "a relation between an independent continuant (the bearer) and a role, in which the role specifically depends on the bearer for its existence"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000087 "A bearer can have many roles, and its roles can exist for different periods of time, but none of its roles can exist when the bearer does not exist. A role need not be realized at all the times that the role exists."@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000087 "has_role"@en)
AnnotationAssertion(rdfs:label obo:RO_0000087 "has role"@en)
SubObjectPropertyOf(obo:RO_0000087 obo:RO_0000053)
ObjectPropertyDomain(obo:RO_0000087 obo:BFO_0000004)
ObjectPropertyRange(obo:RO_0000087 obo:BFO_0000023)

# Object Property: obo:RO_0000091 (has disposition)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0000091 "a relation between an independent continuant (the bearer) and a disposition, in which the disposition specifically depends on the bearer for its existence"@en)
AnnotationAssertion(rdfs:label obo:RO_0000091 "has disposition"@en)
SubObjectPropertyOf(obo:RO_0000091 obo:RO_0000053)
InverseObjectProperties(obo:RO_0000091 obo:RO_0000092)
ObjectPropertyDomain(obo:RO_0000091 obo:BFO_0000004)
ObjectPropertyRange(obo:RO_0000091 obo:BFO_0000016)

# Object Property: obo:RO_0000092 (disposition of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0000092 "inverse of has disposition")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0000092 obo:RO_0002259)
AnnotationAssertion(rdfs:comment obo:RO_0000092 "This relation is modeled after the BFO relation of the same name which was in BFO2, but is used in a more restricted sense - specifically, we model this relation as functional (inherited from characteristic-of). Note that this relation is now removed from BFO2020.")
AnnotationAssertion(rdfs:label obo:RO_0000092 "disposition of"@en)
SubObjectPropertyOf(obo:RO_0000092 obo:RO_0000052)

# Object Property: obo:RO_0002018 (has component process)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002018 "w 'has process component' p if p and w are processes,  w 'has part' p and w is such that it can be directly disassembled into into n parts p, p2, p3, ..., pn, where these parts are of similar type.")
AnnotationAssertion(oboInOwl:created_by obo:RO_0002018 "dos")
AnnotationAssertion(oboInOwl:creation_date obo:RO_0002018 "2017-05-24T09:49:21Z"^^xsd:dateTime)
AnnotationAssertion(rdfs:label obo:RO_0002018 "has component process")
SubObjectPropertyOf(obo:RO_0002018 obo:RO_0002180)
ObjectPropertyDomain(obo:RO_0002018 obo:BFO_0000015)
ObjectPropertyRange(obo:RO_0002018 obo:BFO_0000015)

# Object Property: obo:RO_0002081 (before or simultaneous with)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002081 "David Osumi-Sutherland")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002081 "<="@en)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002081 subsets:ro-eco)
AnnotationAssertion(rdfs:comment obo:RO_0002081 "Primitive instance level timing relation between events")
AnnotationAssertion(rdfs:label obo:RO_0002081 "before or simultaneous with"@en)
SubObjectPropertyOf(obo:RO_0002081 obo:RO_0002222)

# Object Property: obo:RO_0002082 (simultaneous with)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002082 <https://orcid.org/0000-0002-7073-9172>)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002082 "David Osumi-Sutherland")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002082 subsets:ro-eco)
AnnotationAssertion(rdfs:comment obo:RO_0002082 "t1 simultaneous_with t2 iff:=  t1 before_or_simultaneous_with t2  and not (t1 before t2)"@en)
AnnotationAssertion(rdfs:label obo:RO_0002082 "simultaneous with"@en)
SubObjectPropertyOf(obo:RO_0002082 obo:RO_0002081)
TransitiveObjectProperty(obo:RO_0002082)

# Object Property: obo:RO_0002083 (before)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002083 "David Osumi-Sutherland")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002083 subsets:ro-eco)
AnnotationAssertion(rdfs:comment obo:RO_0002083 "t1 before t2 iff:=  t1 before_or_simulataneous_with t2  and not (t1 simultaeous_with t2)"@en)
AnnotationAssertion(rdfs:label obo:RO_0002083 "before"@en)
SubObjectPropertyOf(obo:RO_0002083 obo:RO_0002081)
TransitiveObjectProperty(obo:RO_0002083)

# Object Property: obo:RO_0002084 (during which ends)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002084 "David Osumi-Sutherland")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002084 subsets:ro-eco)
AnnotationAssertion(rdfs:comment obo:RO_0002084 "Previously had ID  http://purl.obolibrary.org/obo/RO_0002122 in test files in sandpit - but this seems to have been dropped from ro-edit.owl at some point.  No re-use under this ID AFAIK, but leaving note here in case we run in to clashes down the line.  Official ID now chosen from DOS ID range.")
AnnotationAssertion(rdfs:label obo:RO_0002084 "during which ends"@en)
SubObjectPropertyOf(obo:RO_0002084 obo:RO_0002222)
InverseObjectProperties(obo:RO_0002084 obo:RO_0002093)

# Object Property: obo:RO_0002085 (encompasses)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002085 <https://orcid.org/0000-0002-7073-9172>)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002085 "di")
AnnotationAssertion(rdfs:comment obo:RO_0002085 "Previously had ID  http://purl.obolibrary.org/obo/RO_0002124 in test files in sandpit - but this seems to have been dropped from ro-edit.owl at some point.  No re-use under this ID AFAIK, but leaving note here in case we run in to clashes down the line.  Official ID now chosen from DOS ID range.")
AnnotationAssertion(rdfs:label obo:RO_0002085 "encompasses"@en)
SubObjectPropertyOf(obo:RO_0002085 obo:RO_0002088)
InverseObjectProperties(obo:RO_0002085 obo:RO_0002092)
TransitiveObjectProperty(obo:RO_0002085)

# Object Property: obo:RO_0002086 (ends after)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002086 "David Osumi-Sutherland")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002086 subsets:ro-eco)
AnnotationAssertion(rdfs:comment obo:RO_0002086 "X ends_after Y iff: end(Y) before_or_simultaneous_with end(X)"@en)
AnnotationAssertion(rdfs:label obo:RO_0002086 "ends after"@en)
SubObjectPropertyOf(obo:RO_0002086 obo:RO_0002222)
TransitiveObjectProperty(obo:RO_0002086)

# Object Property: obo:RO_0002087 (immediately preceded by)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002087 "David Osumi-Sutherland")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002087 "starts_at_end_of")
AnnotationAssertion(rdfs:comment obo:RO_0002087 "X immediately_preceded_by Y iff: end(X) simultaneous_with start(Y)"@en)
AnnotationAssertion(rdfs:label obo:RO_0002087 "immediately preceded by"@en)
SubObjectPropertyOf(obo:RO_0002087 obo:BFO_0000062)
InverseObjectProperties(obo:RO_0002087 obo:RO_0002090)

# Object Property: obo:RO_0002088 (during which starts)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002088 "David Osumi-Sutherland")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002088 subsets:ro-eco)
AnnotationAssertion(rdfs:comment obo:RO_0002088 "Previously had ID  http://purl.obolibrary.org/obo/RO_0002123 in test files in sandpit - but this seems to have been dropped from ro-edit.owl at some point.  No re-use under this ID AFAIK, but leaving note here in case we run in to clashes down the line.  Official ID now chosen from DOS ID range.")
AnnotationAssertion(rdfs:label obo:RO_0002088 "during which starts"@en)
SubObjectPropertyOf(obo:RO_0002088 obo:RO_0002222)
InverseObjectProperties(obo:RO_0002088 obo:RO_0002091)

# Object Property: obo:RO_0002089 (starts before)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002089 "David Osumi-Sutherland")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002089 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002089 "starts before"@en)
SubObjectPropertyOf(obo:RO_0002089 obo:RO_0002222)
TransitiveObjectProperty(obo:RO_0002089)

# Object Property: obo:RO_0002090 (immediately precedes)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002090 <https://orcid.org/0000-0002-7073-9172>)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002090 "David Osumi-Sutherland")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002090 "ends_at_start_of")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002090 "meets")
AnnotationAssertion(obo:RO_0002575 obo:RO_0002090 obo:BFO_0000063)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002090 subsets:ro-eco)
AnnotationAssertion(rdfs:comment obo:RO_0002090 "X immediately_precedes_Y iff: end(X) simultaneous_with start(Y)"@en)
AnnotationAssertion(rdfs:label obo:RO_0002090 "immediately precedes"@en)
SubObjectPropertyOf(obo:RO_0002090 obo:BFO_0000063)

# Object Property: obo:RO_0002091 (starts during)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002091 "David Osumi-Sutherland")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002091 "io")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002091 subsets:ro-eco)
AnnotationAssertion(rdfs:comment obo:RO_0002091 "X starts_during Y iff: (start(Y) before_or_simultaneous_with start(X)) AND (start(X) before_or_simultaneous_with end(Y))"@en)
AnnotationAssertion(rdfs:label obo:RO_0002091 "starts during"@en)
SubObjectPropertyOf(obo:RO_0002091 obo:RO_0002222)
ObjectPropertyDomain(obo:RO_0002091 obo:BFO_0000003)
ObjectPropertyRange(obo:RO_0002091 obo:BFO_0000003)

# Object Property: obo:RO_0002092 (happens during)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002092 "David Osumi-Sutherland")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002092 "d")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002092 "during")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002092 obo:valid_for_go_annotation_extension)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002092 obo:valid_for_go_ontology)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002092 obo:valid_for_gocam)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002092 subsets:ro-eco)
AnnotationAssertion(rdfs:comment obo:RO_0002092 "X happens_during Y iff: (start(Y) before_or_simultaneous_with start(X)) AND (end(X) before_or_simultaneous_with end(Y))"@en)
AnnotationAssertion(rdfs:label obo:RO_0002092 "happens during"@en)
SubObjectPropertyOf(obo:RO_0002092 obo:RO_0002091)
SubObjectPropertyOf(obo:RO_0002092 obo:RO_0002093)
TransitiveObjectProperty(obo:RO_0002092)

# Object Property: obo:RO_0002093 (ends during)

AnnotationAssertion(obo:IAO_0000117 obo:RO_0002093 "David Osumi-Sutherland")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002093 "o")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002093 "overlaps")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002093 subsets:ro-eco)
AnnotationAssertion(rdfs:comment obo:RO_0002093 "X ends_during Y iff: ((start(Y) before_or_simultaneous_with end(X)) AND end(X) before_or_simultaneous_with end(Y). "@en)
AnnotationAssertion(rdfs:label obo:RO_0002093 "ends during"@en)
SubObjectPropertyOf(obo:RO_0002093 obo:RO_0002222)

# Object Property: obo:RO_0002180 (has component)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002180 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002180 "w 'has component' p if w 'has part' p and w is such that it can be directly disassembled into into n parts p, p2, p3, ..., pn, where these parts are of similar type.")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002180 "The definition of 'has component' is still under discussion. The challenge is in providing a definition that does not imply transitivity.")
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002180 "For use in recording has_part with a cardinality constraint, because OWL does not permit cardinality constraints to be used in combination with transitive object properties. In situations where you would want to say something like 'has part exactly 5 digit, you would instead use has_component exactly 5 digit."@en)
AnnotationAssertion(obo:RO_0001900 obo:RO_0002180 obo:RO_0001901)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002180 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002180 "has component"@en)
AnnotationAssertion(rdfs:seeAlso obo:RO_0002180 <http://ontologydesignpatterns.org/wiki/Submissions:Componency>)
SubObjectPropertyOf(obo:RO_0002180 obo:BFO_0000051)

# Object Property: obo:RO_0002222 (temporally related to)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002222 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002222 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002222 <https://en.wikipedia.org/wiki/Allen%27s_interval_algebra>)
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002222 "Do not use this relation directly. It is ended as a grouping for relations between occurrents involving the relative timing of their starts and ends.")
AnnotationAssertion(terms:source obo:RO_0002222 "https://docs.google.com/document/d/1kBv1ep_9g3sTR-SD3jqzFqhuwo9TPNF-l-9fUDbO6rM/edit?pli=1"^^xsd:anyURI)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002222 subsets:ro-eco)
AnnotationAssertion(rdfs:comment obo:RO_0002222 "A relation that holds between two occurrents. This is a grouping relation that collects together all the Allen relations.")
AnnotationAssertion(rdfs:label obo:RO_0002222 "temporally related to"@en)
ObjectPropertyDomain(obo:RO_0002222 obo:BFO_0000003)
ObjectPropertyRange(obo:RO_0002222 obo:BFO_0000003)

# Object Property: obo:RO_0002223 (starts)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002223 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002223 "inverse of starts with")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002223 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002223 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002223 "Allen")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002223 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002223 "starts"@en)
SubObjectPropertyOf(obo:RO_0002223 obo:BFO_0000050)
SubObjectPropertyOf(obo:RO_0002223 obo:RO_0002222)
InverseObjectProperties(obo:RO_0002223 obo:RO_0002224)

# Object Property: obo:RO_0002224 (starts with)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002224 "Every insulin receptor signaling pathway starts with the binding of a ligand to the insulin receptor")
AnnotationAssertion(obo:IAO_0000114 obo:RO_0002224 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002224 "x starts with y if and only if x has part y and the time point at which x starts is equivalent to the time point at which y starts. Formally: α(y) = α(x) ∧ ω(y) < ω(x), where α is a function that maps a process to a start point, and ω is a function that maps a process to an end point.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002224 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002224 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002224 "started by")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002224 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002224 "starts with"@en)
SubObjectPropertyOf(obo:RO_0002224 obo:BFO_0000051)
SubObjectPropertyOf(obo:RO_0002224 obo:RO_0002222)
TransitiveObjectProperty(obo:RO_0002224)

# Object Property: obo:RO_0002229 (ends)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002229 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002229 "inverse of ends with")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002229 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002229 "Chris Mungall")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002229 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002229 "ends"@en)
SubObjectPropertyOf(obo:RO_0002229 obo:BFO_0000050)
SubObjectPropertyOf(obo:RO_0002229 obo:RO_0002222)
InverseObjectProperties(obo:RO_0002229 obo:RO_0002230)

# Object Property: obo:RO_0002230 (ends with)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002230 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002230 "x ends with y if and only if x has part y and the time point at which x ends is equivalent to the time point at which y ends. Formally: α(y) > α(x) ∧ ω(y) = ω(x), where α is a function that maps a process to a start point, and ω is a function that maps a process to an end point.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002230 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002230 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002230 "finished by")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002230 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002230 "ends with"@en)
SubObjectPropertyOf(obo:RO_0002230 obo:BFO_0000051)
SubObjectPropertyOf(obo:RO_0002230 obo:RO_0002222)
TransitiveObjectProperty(obo:RO_0002230)

# Object Property: obo:RO_0002233 (has input)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002233 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002233 "p has input c iff: p is a process, c is a material entity, c is a participant in p, c is present at the start of p, and the state of c is modified during p.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002233 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002233 "consumes")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002233 obo:valid_for_go_annotation_extension)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002233 obo:valid_for_go_ontology)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002233 obo:valid_for_gocam)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002233 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002233 "has input"@en)
SubObjectPropertyOf(obo:RO_0002233 obo:RO_0000057)
InverseObjectProperties(obo:RO_0002233 obo:RO_0002352)
ObjectPropertyDomain(obo:RO_0002233 obo:BFO_0000015)

# Object Property: obo:RO_0002234 (has output)

AnnotationAssertion(obo:IAO_0000114 obo:RO_0002234 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002234 "p has output c iff c is a participant in p, c is present at the end of p, and c is not present in the same state at the beginning of p.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002234 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002234 "produces")
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002234 obo:valid_for_go_annotation_extension)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002234 obo:valid_for_go_ontology)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002234 obo:valid_for_gocam)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002234 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002234 "has output"@en)
SubObjectPropertyOf(obo:RO_0002234 obo:RO_0000057)
InverseObjectProperties(obo:RO_0002234 obo:RO_0002353)

# Object Property: obo:RO_0002350 (member of)

AnnotationAssertion(obo:IAO_0000112 obo:RO_0002350 "An organism that is a member of a population of organisms")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002350 "is member of is a mereological relation between a item and a collection.")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002350 "is member of")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002350 "member part of")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002350 "SIO")
AnnotationAssertion(obo:RO_0001900 obo:RO_0002350 obo:RO_0001901)
AnnotationAssertion(rdfs:label obo:RO_0002350 "member of"@en)
SubObjectPropertyOf(obo:RO_0002350 obo:BFO_0000050)
InverseObjectProperties(obo:RO_0002350 obo:RO_0002351)

# Object Property: obo:RO_0002351 (has member)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002351 "has member is a mereological relation between a collection and an item.")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002351 "SIO")
AnnotationAssertion(obo:RO_0001900 obo:RO_0002351 obo:RO_0001901)
AnnotationAssertion(rdfs:label obo:RO_0002351 "has member"@en)
SubObjectPropertyOf(obo:RO_0002351 obo:BFO_0000051)
IrreflexiveObjectProperty(obo:RO_0002351)

# Object Property: obo:RO_0002352 (input of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002352 "inverse of has input")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002352 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002352 obo:RO_0002259)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002352 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002352 "input of"@en)
SubObjectPropertyOf(obo:RO_0002352 obo:RO_0000056)

# Object Property: obo:RO_0002353 (output of)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002353 "inverse of has output")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002353 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002353 obo:RO_0002259)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002353 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002353 "output of"@en)
SubObjectPropertyOf(obo:RO_0002353 obo:RO_0000056)

# Object Property: obo:RO_0002479 (has part that occurs in)

AnnotationAssertion(obo:IAO_0000115 obo:RO_0002479 "p has part that occurs in c if and only if there exists some p1, such that p has_part p1, and p1 occurs in c.")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002479 <https://orcid.org/0000-0002-6601-2165>)
AnnotationAssertion(oboInOwl:inSubset obo:RO_0002479 subsets:ro-eco)
AnnotationAssertion(rdfs:label obo:RO_0002479 "has part that occurs in")
ObjectPropertyDomain(obo:RO_0002479 obo:BFO_0000003)
ObjectPropertyRange(obo:RO_0002479 obo:BFO_0000004)

# Object Property: CommonCoreOntologies:agent_in (agent in)

AnnotationAssertion(obo:IAO_0000115 CommonCoreOntologies:agent_in "x agent_in y iff y is an instance of Process and x is an instance of Agent, such that x is causally active in y."@en)
AnnotationAssertion(CommonCoreOntologies:is_curated_in_ontology CommonCoreOntologies:agent_in "http://www.ontologyrepository.com/CommonCoreOntologies/Mid/AgentOntology"^^xsd:anyURI)
AnnotationAssertion(rdfs:label CommonCoreOntologies:agent_in "agent in"@en)
SubObjectPropertyOf(CommonCoreOntologies:agent_in obo:RO_0000056)
InverseObjectProperties(CommonCoreOntologies:agent_in CommonCoreOntologies:has_agent)

# Object Property: CommonCoreOntologies:capability_of (CommonCoreOntologies:capability_of)

SubObjectPropertyOf(CommonCoreOntologies:capability_of obo:RO_0000052)
InverseObjectProperties(CommonCoreOntologies:capability_of CommonCoreOntologies:has_capability)
ObjectPropertyDomain(CommonCoreOntologies:capability_of CommonCoreOntologies:AgentCapability)
ObjectPropertyRange(CommonCoreOntologies:capability_of CommonCoreOntologies:Agent)

# Object Property: CommonCoreOntologies:has_agent (has agent)

AnnotationAssertion(obo:IAO_0000115 CommonCoreOntologies:has_agent "x has_agent y iff x is an instance of Process and y is an instance of Agent, such that y is causally active in x."@en)
AnnotationAssertion(CommonCoreOntologies:is_curated_in_ontology CommonCoreOntologies:has_agent "http://www.ontologyrepository.com/CommonCoreOntologies/Mid/AgentOntology"^^xsd:anyURI)
AnnotationAssertion(rdfs:label CommonCoreOntologies:has_agent "has agent"@en)
SubObjectPropertyOf(CommonCoreOntologies:has_agent obo:RO_0000057)

# Object Property: CommonCoreOntologies:has_capability (has capability)

AnnotationAssertion(obo:IAO_0000115 CommonCoreOntologies:has_capability "x has_capability y iff x is an instance of Agent and y is an instance of Agent Capability, such that x bearer of y."@en)
AnnotationAssertion(CommonCoreOntologies:is_curated_in_ontology CommonCoreOntologies:has_capability "http://www.ontologyrepository.com/CommonCoreOntologies/Mid/AgentOntology"^^xsd:anyURI)
AnnotationAssertion(rdfs:label CommonCoreOntologies:has_capability "has capability"@en)
SubObjectPropertyOf(CommonCoreOntologies:has_capability obo:RO_0000053)
ObjectPropertyDomain(CommonCoreOntologies:has_capability CommonCoreOntologies:Agent)
ObjectPropertyRange(CommonCoreOntologies:has_capability CommonCoreOntologies:AgentCapability)


############################
#   Data Properties
############################

# Data Property: obo:Ontorel-Core_0000002 (has textual value)

AnnotationAssertion(rdfs:label obo:Ontorel-Core_0000002 "has textual value"@en)
SubDataPropertyOf(obo:Ontorel-Core_0000002 owl:topDataProperty)

# Data Property: obo:Ontorel-Core_0000003 (has numerical value)

AnnotationAssertion(rdfs:label obo:Ontorel-Core_0000003 "has numerical value"@en)
SubDataPropertyOf(obo:Ontorel-Core_0000003 owl:topDataProperty)

# Data Property: obo:Ontorel-Core_0000004 (has temporal value)

AnnotationAssertion(rdfs:label obo:Ontorel-Core_0000004 "has temporal value"@en)
SubDataPropertyOf(obo:Ontorel-Core_0000004 owl:topDataProperty)


############################
#   Datatypes
############################

# Datatype: obo:Ontorel-Core_0000001 (ISO8601DateTime)

AnnotationAssertion(rdfs:label obo:Ontorel-Core_0000001 "ISO8601DateTime"@en)

# Datatype: obo:Ontorel-Core_0000006 (ISO8601Duration)

AnnotationAssertion(rdfs:label obo:Ontorel-Core_0000006 "ISO8601Duration"@en)


############################
#   Classes
############################

# Class: obo:BFO_0000001 (entity)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000001 "entity")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000001 "Entity")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000001 "Julius Caesar"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000001 "Verdi’s Requiem"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000001 "the Second World War"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000001 "your body mass index"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000001 "BFO 2 Reference: In all areas of empirical inquiry we encounter general terms of two sorts. First are general terms which refer to universals or types:animaltuberculosissurgical procedurediseaseSecond, are general terms used to refer to groups of entities which instantiate a given universal but do not correspond to the extension of any subuniversal of that universal because there is nothing intrinsic to the entities in question by virtue of which they – and only they – are counted as belonging to the given group. Examples are: animal purchased by the Emperortuberculosis diagnosed on a Wednesdaysurgical procedure performed on a patient from Stockholmperson identified as candidate for clinical trial #2056-555person who is signatory of Form 656-PPVpainting by Leonardo da VinciSuch terms, which represent what are called ‘specializations’ in [81"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/0000004>) Annotation(rdfs:comment "per discussion with Barry Smith") Annotation(rdfs:seeAlso <http://www.referent-tracking.com/_RTU/papers/CeustersICbookRevised.pdf>) obo:IAO_0000116 obo:BFO_0000001 "Entity doesn't have a closure axiom because the subclasses don't necessarily exhaust all possibilites. For example Werner Ceusters 'portions of reality' include 4 sorts, entities (as BFO construes them), universals, configurations, and relations. It is an open question as to whether entities as construed in BFO will at some point also include these other portions of reality. See, for example, 'How to track absolutely everything' at http://www.referent-tracking.com/_RTU/papers/CeustersICbookRevised.pdf"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/001-001>) obo:IAO_0000600 obo:BFO_0000001 "An entity is anything that exists or has existed or will exist. (axiom label in BFO2 Reference: [001-001])"@en)
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000001 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000001 "entity"@en)
SubClassOf(obo:BFO_0000001 owl:Thing)

# Class: obo:BFO_0000002 (continuant)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000002 "continuant")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000002 "Continuant")
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000002 "BFO 2 Reference: Continuant entities are entities which can be sliced to yield parts only along the spatial dimension, yielding for example the parts of your table which we call its legs, its top, its nails. ‘My desk stretches from the window to the door. It has spatial parts, and can be sliced (in space) in two. With respect to time, however, a thing is a continuant.’ [60, p. 240"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/0000007>) obo:IAO_0000116 obo:BFO_0000002 "Continuant doesn't have a closure axiom because the subclasses don't necessarily exhaust all possibilites. For example, in an expansion involving bringing in some of Ceuster's other portions of reality, questions are raised as to whether universals are continuants"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/008-002>) obo:IAO_0000600 obo:BFO_0000002 "A continuant is an entity that persists, endures, or continues to exist through time while maintaining its identity. (axiom label in BFO2 Reference: [008-002])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/126-001>) obo:IAO_0000601 obo:BFO_0000002 "if b is a continuant and if, for some t, c has_continuant_part b at t, then c is a continuant. (axiom label in BFO2 Reference: [126-001])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/009-002>) obo:IAO_0000601 obo:BFO_0000002 "if b is a continuant and if, for some t, cis continuant_part of b at t, then c is a continuant. (axiom label in BFO2 Reference: [009-002])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/011-002>) obo:IAO_0000601 obo:BFO_0000002 "if b is a material entity, then there is some temporal interval (referred to below as a one-dimensional temporal region) during which b exists. (axiom label in BFO2 Reference: [011-002])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/009-002>) obo:IAO_0000602 obo:BFO_0000002 "(forall (x y) (if (and (Continuant x) (exists (t) (continuantPartOfAt y x t))) (Continuant y))) // axiom label in BFO2 CLIF: [009-002] ")
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/126-001>) obo:IAO_0000602 obo:BFO_0000002 "(forall (x y) (if (and (Continuant x) (exists (t) (hasContinuantPartOfAt y x t))) (Continuant y))) // axiom label in BFO2 CLIF: [126-001] ")
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/008-002>) obo:IAO_0000602 obo:BFO_0000002 "(forall (x) (if (Continuant x) (Entity x))) // axiom label in BFO2 CLIF: [008-002] ")
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/011-002>) obo:IAO_0000602 obo:BFO_0000002 "(forall (x) (if (Material Entity x) (exists (t) (and (TemporalRegion t) (existsAt x t))))) // axiom label in BFO2 CLIF: [011-002] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000002 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000002 "continuant"@en)
SubClassOf(obo:BFO_0000002 obo:BFO_0000001)
DisjointClasses(obo:BFO_0000002 obo:BFO_0000003)

# Class: obo:BFO_0000003 (occurrent)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000003 "occurrent")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000003 "Occurrent")
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000003 "BFO 2 Reference: every occurrent that is not a temporal or spatiotemporal region is s-dependent on some independent continuant that is not a spatial region"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000003 "BFO 2 Reference: s-dependence obtains between every process and its participants in the sense that, as a matter of necessity, this process could not have existed unless these or those participants existed also. A process may have a succession of participants at different phases of its unfolding. Thus there may be different players on the field at different times during the course of a football game; but the process which is the entire game s-depends_on all of these players nonetheless. Some temporal parts of this process will s-depend_on on only some of the players."@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/0000006>) Annotation(rdfs:comment "per discussion with Barry Smith") obo:IAO_0000116 obo:BFO_0000003 "Occurrent doesn't have a closure axiom because the subclasses don't necessarily exhaust all possibilites. An example would be the sum of a process and the process boundary of another process."@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/0000012>) obo:IAO_0000116 obo:BFO_0000003 "Simons uses different terminology for relations of occurrents to regions: Denote the spatio-temporal location of a given occurrent e by 'spn[e]' and call this region its span. We may say an occurrent is at its span, in any larger region, and covers any smaller region. Now suppose we have fixed a frame of reference so that we can speak not merely of spatio-temporal but also of spatial regions (places) and temporal regions (times). The spread of an occurrent, (relative to a frame of reference) is the space it exactly occupies, and its spell is likewise the time it exactly occupies. We write 'spr[e]' and `spl[e]' respectively for the spread and spell of e, omitting mention of the frame.")
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/077-002>) obo:IAO_0000600 obo:BFO_0000003 "An occurrent is an entity that unfolds itself in time or it is the instantaneous boundary of such an entity (for example a beginning or an ending) or it is a temporal or spatiotemporal region which such an entity occupies_temporal_region or occupies_spatiotemporal_region. (axiom label in BFO2 Reference: [077-002])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/108-001>) obo:IAO_0000601 obo:BFO_0000003 "Every occurrent occupies_spatiotemporal_region some spatiotemporal region. (axiom label in BFO2 Reference: [108-001])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/079-001>) obo:IAO_0000601 obo:BFO_0000003 "b is an occurrent entity iff b is an entity that has temporal parts. (axiom label in BFO2 Reference: [079-001])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/108-001>) obo:IAO_0000602 obo:BFO_0000003 "(forall (x) (if (Occurrent x) (exists (r) (and (SpatioTemporalRegion r) (occupiesSpatioTemporalRegion x r))))) // axiom label in BFO2 CLIF: [108-001] ")
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/079-001>) obo:IAO_0000602 obo:BFO_0000003 "(forall (x) (iff (Occurrent x) (and (Entity x) (exists (y) (temporalPartOf y x))))) // axiom label in BFO2 CLIF: [079-001] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000003 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000003 "occurrent"@en)
SubClassOf(obo:BFO_0000003 obo:BFO_0000001)

# Class: obo:BFO_0000004 (independent continuant)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000004 "ic")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000004 "IndependentContinuant")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000004 "a chair"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000004 "a heart"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000004 "a leg"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000004 "a molecule"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000004 "a spatial region"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000004 "an atom"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000004 "an orchestra."@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000004 "an organism"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000004 "the bottom right portion of a human torso"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000004 "the interior of your mouth"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/017-002>) obo:IAO_0000115 obo:BFO_0000004 "b is an independent continuant = Def. b is a continuant which is such that there is no c and no t such that b s-depends_on c at t. (axiom label in BFO2 Reference: [017-002])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/134-001>) obo:IAO_0000601 obo:BFO_0000004 "For any independent continuant b and any time t there is some spatial region r such that b is located_in r at t. (axiom label in BFO2 Reference: [134-001])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/018-002>) obo:IAO_0000601 obo:BFO_0000004 "For every independent continuant b and time t during the region of time spanned by its life, there are entities which s-depends_on b during t. (axiom label in BFO2 Reference: [018-002])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/134-001>) obo:IAO_0000602 obo:BFO_0000004 "(forall (x t) (if (IndependentContinuant x) (exists (r) (and (SpatialRegion r) (locatedInAt x r t))))) // axiom label in BFO2 CLIF: [134-001] ")
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/018-002>) obo:IAO_0000602 obo:BFO_0000004 "(forall (x t) (if (and (IndependentContinuant x) (existsAt x t)) (exists (y) (and (Entity y) (specificallyDependsOnAt y x t))))) // axiom label in BFO2 CLIF: [018-002] ")
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/017-002>) obo:IAO_0000602 obo:BFO_0000004 "(iff (IndependentContinuant a) (and (Continuant a) (not (exists (b t) (specificallyDependsOnAt a b t))))) // axiom label in BFO2 CLIF: [017-002] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000004 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000004 "independent continuant"@en)
SubClassOf(obo:BFO_0000004 obo:BFO_0000002)
DisjointClasses(obo:BFO_0000004 obo:BFO_0000020)
DisjointClasses(obo:BFO_0000004 obo:BFO_0000031)

# Class: obo:BFO_0000006 (spatial region)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000006 "s-region")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000006 "SpatialRegion")
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000006 "BFO 2 Reference: Spatial regions do not participate in processes."@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/0000002>) Annotation(rdfs:comment "per discussion with Barry Smith") obo:IAO_0000116 obo:BFO_0000006 "Spatial region doesn't have a closure axiom because the subclasses don't exhaust all possibilites. An example would be the union of a spatial point and a spatial line that doesn't overlap the point, or two spatial lines that intersect at a single point. In both cases the resultant spatial region is neither 0-dimensional, 1-dimensional, 2-dimensional, or 3-dimensional."@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/035-001>) obo:IAO_0000600 obo:BFO_0000006 "A spatial region is a continuant entity that is a continuant_part_of spaceR as defined relative to some frame R. (axiom label in BFO2 Reference: [035-001])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/036-001>) obo:IAO_0000601 obo:BFO_0000006 "All continuant parts of spatial regions are spatial regions. (axiom label in BFO2 Reference: [036-001])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/036-001>) obo:IAO_0000602 obo:BFO_0000006 "(forall (x y t) (if (and (SpatialRegion x) (continuantPartOfAt y x t)) (SpatialRegion y))) // axiom label in BFO2 CLIF: [036-001] ")
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/035-001>) obo:IAO_0000602 obo:BFO_0000006 "(forall (x) (if (SpatialRegion x) (Continuant x))) // axiom label in BFO2 CLIF: [035-001] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000006 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000006 "spatial region"@en)
SubClassOf(obo:BFO_0000006 obo:BFO_0000141)
DisjointClasses(obo:BFO_0000006 obo:BFO_0000029)
DisjointClasses(obo:BFO_0000006 obo:BFO_0000140)

# Class: obo:BFO_0000008 (temporal region)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000008 "t-region")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000008 "TemporalRegion")
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/0000003>) Annotation(rdfs:comment "per discussion with Barry Smith") obo:IAO_0000116 obo:BFO_0000008 "Temporal region doesn't have a closure axiom because the subclasses don't exhaust all possibilites. An example would be the mereological sum of a temporal instant and a temporal interval that doesn't overlap the instant. In this case the resultant temporal region is neither 0-dimensional nor 1-dimensional"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/100-001>) obo:IAO_0000600 obo:BFO_0000008 "A temporal region is an occurrent entity that is part of time as defined relative to some reference frame. (axiom label in BFO2 Reference: [100-001])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/101-001>) obo:IAO_0000601 obo:BFO_0000008 "All parts of temporal regions are temporal regions. (axiom label in BFO2 Reference: [101-001])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/119-002>) obo:IAO_0000601 obo:BFO_0000008 "Every temporal region t is such that t occupies_temporal_region t. (axiom label in BFO2 Reference: [119-002])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/119-002>) obo:IAO_0000602 obo:BFO_0000008 "(forall (r) (if (TemporalRegion r) (occupiesTemporalRegion r r))) // axiom label in BFO2 CLIF: [119-002] ")
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/101-001>) obo:IAO_0000602 obo:BFO_0000008 "(forall (x y) (if (and (TemporalRegion x) (occurrentPartOf y x)) (TemporalRegion y))) // axiom label in BFO2 CLIF: [101-001] ")
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/100-001>) obo:IAO_0000602 obo:BFO_0000008 "(forall (x) (if (TemporalRegion x) (Occurrent x))) // axiom label in BFO2 CLIF: [100-001] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000008 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000008 "temporal region"@en)
SubClassOf(obo:BFO_0000008 obo:BFO_0000003)
DisjointClasses(obo:BFO_0000008 obo:BFO_0000011)
DisjointClasses(obo:BFO_0000008 obo:BFO_0000015)
DisjointClasses(obo:BFO_0000008 obo:BFO_0000035)

# Class: obo:BFO_0000009 (two-dimensional spatial region)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000009 "2d-s-region")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000009 "TwoDimensionalSpatialRegion")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000009 "an infinitely thin plane in space."@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000009 "the surface of a sphere-shaped part of space"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/039-001>) obo:IAO_0000600 obo:BFO_0000009 "A two-dimensional spatial region is a spatial region that is of two dimensions. (axiom label in BFO2 Reference: [039-001])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/039-001>) obo:IAO_0000602 obo:BFO_0000009 "(forall (x) (if (TwoDimensionalSpatialRegion x) (SpatialRegion x))) // axiom label in BFO2 CLIF: [039-001] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000009 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000009 "two-dimensional spatial region"@en)
SubClassOf(obo:BFO_0000009 obo:BFO_0000006)
DisjointClasses(obo:BFO_0000009 obo:BFO_0000028)

# Class: obo:BFO_0000011 (spatiotemporal region)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000011 "st-region")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000011 "SpatiotemporalRegion")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000011 "the spatiotemporal region occupied by a human life"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000011 "the spatiotemporal region occupied by a process of cellular meiosis."@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000011 "the spatiotemporal region occupied by the development of a cancer tumor"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/095-001>) obo:IAO_0000600 obo:BFO_0000011 "A spatiotemporal region is an occurrent entity that is part of spacetime. (axiom label in BFO2 Reference: [095-001])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/096-001>) obo:IAO_0000601 obo:BFO_0000011 "All parts of spatiotemporal regions are spatiotemporal regions. (axiom label in BFO2 Reference: [096-001])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/099-001>) obo:IAO_0000601 obo:BFO_0000011 "Each spatiotemporal region at any time t projects_onto some spatial region at t. (axiom label in BFO2 Reference: [099-001])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/098-001>) obo:IAO_0000601 obo:BFO_0000011 "Each spatiotemporal region projects_onto some temporal region. (axiom label in BFO2 Reference: [098-001])"@en)
AnnotationAssertion(obo:IAO_0000601 obo:BFO_0000011 "Every spatiotemporal region occupies_spatiotemporal_region itself."@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/107-002>) obo:IAO_0000601 obo:BFO_0000011 "Every spatiotemporal region s is such that s occupies_spatiotemporal_region s. (axiom label in BFO2 Reference: [107-002])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/107-002>) obo:IAO_0000602 obo:BFO_0000011 "(forall (r) (if (SpatioTemporalRegion r) (occupiesSpatioTemporalRegion r r))) // axiom label in BFO2 CLIF: [107-002] ")
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/099-001>) obo:IAO_0000602 obo:BFO_0000011 "(forall (x t) (if (SpatioTemporalRegion x) (exists (y) (and (SpatialRegion y) (spatiallyProjectsOntoAt x y t))))) // axiom label in BFO2 CLIF: [099-001] ")
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/096-001>) obo:IAO_0000602 obo:BFO_0000011 "(forall (x y) (if (and (SpatioTemporalRegion x) (occurrentPartOf y x)) (SpatioTemporalRegion y))) // axiom label in BFO2 CLIF: [096-001] ")
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/095-001>) obo:IAO_0000602 obo:BFO_0000011 "(forall (x) (if (SpatioTemporalRegion x) (Occurrent x))) // axiom label in BFO2 CLIF: [095-001] ")
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/098-001>) obo:IAO_0000602 obo:BFO_0000011 "(forall (x) (if (SpatioTemporalRegion x) (exists (y) (and (TemporalRegion y) (temporallyProjectsOnto x y))))) // axiom label in BFO2 CLIF: [098-001] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000011 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000011 "spatiotemporal region"@en)
SubClassOf(obo:BFO_0000011 obo:BFO_0000003)

# Class: obo:BFO_0000015 (process)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000015 "process")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000015 "Process")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000015 "a process of cell-division, \\ a beating of the heart"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000015 "a process of meiosis"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000015 "a process of sleeping"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000015 "the course of a disease"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000015 "the flight of a bird"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000015 "the life of an organism"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000015 "your process of aging."@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/083-003>) obo:IAO_0000115 obo:BFO_0000015 "p is a process = Def. p is an occurrent that has temporal proper parts and for some time t, p s-depends_on some material entity at t. (axiom label in BFO2 Reference: [083-003])"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000015 "BFO 2 Reference: The realm of occurrents is less pervasively marked by the presence of natural units than is the case in the realm of independent continuants. Thus there is here no counterpart of ‘object’. In BFO 1.0 ‘process’ served as such a counterpart. In BFO 2.0 ‘process’ is, rather, the occurrent counterpart of ‘material entity’. Those natural – as contrasted with engineered, which here means: deliberately executed – units which do exist in the realm of occurrents are typically either parasitic on the existence of natural units on the continuant side, or they are fiat in nature. Thus we can count lives; we can count football games; we can count chemical reactions performed in experiments or in chemical manufacturing. We cannot count the processes taking place, for instance, in an episode of insect mating behavior.Even where natural units are identifiable, for example cycles in a cyclical process such as the beating of a heart or an organism’s sleep/wake cycle, the processes in question form a sequence with no discontinuities (temporal gaps) of the sort that we find for instance where billiard balls or zebrafish or planets are separated by clear spatial gaps. Lives of organisms are process units, but they too unfold in a continuous series from other, prior processes such as fertilization, and they unfold in turn in continuous series of post-life processes such as post-mortem decay. Clear examples of boundaries of processes are almost always of the fiat sort (midnight, a time of death as declared in an operating theater or on a death certificate, the initiation of a state of war)"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/083-003>) obo:IAO_0000602 obo:BFO_0000015 "(iff (Process a) (and (Occurrent a) (exists (b) (properTemporalPartOf b a)) (exists (c t) (and (MaterialEntity c) (specificallyDependsOnAt a c t))))) // axiom label in BFO2 CLIF: [083-003] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000015 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000015 "process"@en)
SubClassOf(obo:BFO_0000015 obo:BFO_0000003)

# Class: obo:BFO_0000016 (disposition)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000016 "disposition")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000016 "Disposition")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000016 "an atom of element X has the disposition to decay to an atom of element Y"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000016 "certain people have a predisposition to colon cancer"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000016 "children are innately disposed to categorize objects in certain ways."@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000016 "the cell wall is disposed to filter chemicals in endocytosis and exocytosis"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000016 "BFO 2 Reference: Dispositions exist along a strength continuum. Weaker forms of disposition are realized in only a fraction of triggering cases. These forms occur in a significant number of cases of a similar type."@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/062-002>) obo:IAO_0000600 obo:BFO_0000016 "b is a disposition means: b is a realizable entity & b’s bearer is some material entity & b is such that if it ceases to exist, then its bearer is physically changed, & b’s realization occurs when and because this bearer is in some special physical circumstances, & this realization occurs in virtue of the bearer’s physical make-up. (axiom label in BFO2 Reference: [062-002])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/063-002>) obo:IAO_0000601 obo:BFO_0000016 "If b is a realizable entity then for all t at which b exists, b s-depends_on some material entity at t. (axiom label in BFO2 Reference: [063-002])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/063-002>) obo:IAO_0000602 obo:BFO_0000016 "(forall (x t) (if (and (RealizableEntity x) (existsAt x t)) (exists (y) (and (MaterialEntity y) (specificallyDepends x y t))))) // axiom label in BFO2 CLIF: [063-002] ")
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/062-002>) obo:IAO_0000602 obo:BFO_0000016 "(forall (x) (if (Disposition x) (and (RealizableEntity x) (exists (y) (and (MaterialEntity y) (bearerOfAt x y t)))))) // axiom label in BFO2 CLIF: [062-002] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000016 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000016 "disposition"@en)
SubClassOf(obo:BFO_0000016 obo:BFO_0000017)
DisjointClasses(obo:BFO_0000016 obo:BFO_0000023)

# Class: obo:BFO_0000017 (realizable entity)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000017 "realizable")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000017 "RealizableEntity")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000017 "the disposition of this piece of metal to conduct electricity."@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000017 "the disposition of your blood to coagulate"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000017 "the function of your reproductive organs"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000017 "the role of being a doctor"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000017 "the role of this boundary to delineate where Utah and Colorado meet"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/058-002>) obo:IAO_0000600 obo:BFO_0000017 "To say that b is a realizable entity is to say that b is a specifically dependent continuant that inheres in some independent continuant which is not a spatial region and is of a type instances of which are realized in processes of a correlated type. (axiom label in BFO2 Reference: [058-002])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/060-002>) obo:IAO_0000601 obo:BFO_0000017 "All realizable dependent continuants have independent continuants that are not spatial regions as their bearers. (axiom label in BFO2 Reference: [060-002])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/060-002>) obo:IAO_0000602 obo:BFO_0000017 "(forall (x t) (if (RealizableEntity x) (exists (y) (and (IndependentContinuant y) (not (SpatialRegion y)) (bearerOfAt y x t))))) // axiom label in BFO2 CLIF: [060-002] ")
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/058-002>) obo:IAO_0000602 obo:BFO_0000017 "(forall (x) (if (RealizableEntity x) (and (SpecificallyDependentContinuant x) (exists (y) (and (IndependentContinuant y) (not (SpatialRegion y)) (inheresIn x y)))))) // axiom label in BFO2 CLIF: [058-002] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000017 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000017 "realizable entity"@en)
SubClassOf(obo:BFO_0000017 obo:BFO_0000020)
DisjointClasses(obo:BFO_0000017 obo:BFO_0000019)

# Class: obo:BFO_0000018 (zero-dimensional spatial region)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000018 "0d-s-region")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000018 "ZeroDimensionalSpatialRegion")
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/037-001>) obo:IAO_0000600 obo:BFO_0000018 "A zero-dimensional spatial region is a point in space. (axiom label in BFO2 Reference: [037-001])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/037-001>) obo:IAO_0000602 obo:BFO_0000018 "(forall (x) (if (ZeroDimensionalSpatialRegion x) (SpatialRegion x))) // axiom label in BFO2 CLIF: [037-001] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000018 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000018 "zero-dimensional spatial region"@en)
SubClassOf(obo:BFO_0000018 obo:BFO_0000006)
DisjointClasses(obo:BFO_0000018 obo:BFO_0000028)

# Class: obo:BFO_0000019 (quality)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000019 "quality")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000019 "Quality")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000019 "the ambient temperature of this portion of air"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000019 "the color of a tomato"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000019 "the length of the circumference of your waist"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000019 "the mass of this piece of gold."@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000019 "the shape of your nose"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000019 "the shape of your nostril"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/055-001>) obo:IAO_0000600 obo:BFO_0000019 "a quality is a specifically dependent continuant that, in contrast to roles and dispositions, does not require any further process in order to be realized. (axiom label in BFO2 Reference: [055-001])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/105-001>) obo:IAO_0000601 obo:BFO_0000019 "If an entity is a quality at any time that it exists, then it is a quality at every time that it exists. (axiom label in BFO2 Reference: [105-001])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/055-001>) obo:IAO_0000602 obo:BFO_0000019 "(forall (x) (if (Quality x) (SpecificallyDependentContinuant x))) // axiom label in BFO2 CLIF: [055-001] ")
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/105-001>) obo:IAO_0000602 obo:BFO_0000019 "(forall (x) (if (exists (t) (and (existsAt x t) (Quality x))) (forall (t_1) (if (existsAt x t_1) (Quality x))))) // axiom label in BFO2 CLIF: [105-001] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000019 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000019 "quality"@en)
SubClassOf(obo:BFO_0000019 obo:BFO_0000020)

# Class: obo:BFO_0000020 (specifically dependent continuant)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000020 "sdc")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000020 "SpecificallyDependentContinuant")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000020 "Reciprocal specifically dependent continuants: the function of this key to open this lock and the mutually dependent disposition of this lock: to be opened by this key"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000020 "of one-sided specifically dependent continuants: the mass of this tomato"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000020 "of relational dependent continuants (multiple bearers): John’s love for Mary, the ownership relation between John and this statue, the relation of authority between John and his subordinates."@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000020 "the disposition of this fish to decay"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000020 "the function of this heart: to pump blood"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000020 "the mutual dependence of proton donors and acceptors in chemical reactions [79"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000020 "the mutual dependence of the role predator and the role prey as played by two organisms in a given interaction"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000020 "the pink color of a medium rare piece of grilled filet mignon at its center"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000020 "the role of being a doctor"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000020 "the shape of this hole."@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000020 "the smell of this portion of mozzarella"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/050-003>) obo:IAO_0000115 obo:BFO_0000020 "b is a specifically dependent continuant = Def. b is a continuant & there is some independent continuant c which is not a spatial region and which is such that b s-depends_on c at every time t during the course of b’s existence. (axiom label in BFO2 Reference: [050-003])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/0000005>) Annotation(rdfs:comment "per discussion with Barry Smith") obo:IAO_0000116 obo:BFO_0000020 "Specifically dependent continuant doesn't have a closure axiom because the subclasses don't necessarily exhaust all possibilites. We're not sure what else will develop here, but for example there are questions such as what are promises, obligation, etc."@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/050-003>) obo:IAO_0000602 obo:BFO_0000020 "(iff (SpecificallyDependentContinuant a) (and (Continuant a) (forall (t) (if (existsAt a t) (exists (b) (and (IndependentContinuant b) (not (SpatialRegion b)) (specificallyDependsOnAt a b t))))))) // axiom label in BFO2 CLIF: [050-003] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000020 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000020 "specifically dependent continuant"@en)
SubClassOf(obo:BFO_0000020 obo:BFO_0000002)
DisjointClasses(obo:BFO_0000020 obo:BFO_0000031)

# Class: obo:BFO_0000023 (role)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000023 "role")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000023 "Role")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000023 "John’s role of husband to Mary is dependent on Mary’s role of wife to John, and both are dependent on the object aggregate comprising John and Mary as member parts joined together through the relational quality of being married."@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000023 "the priest role"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000023 "the role of a boundary to demarcate two neighboring administrative territories"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000023 "the role of a building in serving as a military target"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000023 "the role of a stone in marking a property boundary"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000023 "the role of subject in a clinical trial"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000023 "the student role"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000023 "BFO 2 Reference: One major family of examples of non-rigid universals involves roles, and ontologies developed for corresponding administrative purposes may consist entirely of representatives of entities of this sort. Thus ‘professor’, defined as follows,b instance_of professor at t =Def. there is some c, c instance_of professor role & c inheres_in b at t.denotes a non-rigid universal and so also do ‘nurse’, ‘student’, ‘colonel’, ‘taxpayer’, and so forth. (These terms are all, in the jargon of philosophy, phase sortals.) By using role terms in definitions, we can create a BFO conformant treatment of such entities drawing on the fact that, while an instance of professor may be simultaneously an instance of trade union member, no instance of the type professor role is also (at any time) an instance of the type trade union member role (any more than any instance of the type color is at any time an instance of the type length).If an ontology of employment positions should be defined in terms of roles following the above pattern, this enables the ontology to do justice to the fact that individuals instantiate the corresponding universals –  professor, sergeant, nurse – only during certain phases in their lives."@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/061-001>) obo:IAO_0000600 obo:BFO_0000023 "b is a role means: b is a realizable entity & b exists because there is some single bearer that is in some special physical, social, or institutional set of circumstances in which this bearer does not have to be& b is not such that, if it ceases to exist, then the physical make-up of the bearer is thereby changed. (axiom label in BFO2 Reference: [061-001])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/061-001>) obo:IAO_0000602 obo:BFO_0000023 "(forall (x) (if (Role x) (RealizableEntity x))) // axiom label in BFO2 CLIF: [061-001] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000023 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000023 "role"@en)
SubClassOf(obo:BFO_0000023 obo:BFO_0000017)

# Class: obo:BFO_0000024 (fiat object part)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000024 "fiat-object-part")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000024 "FiatObjectPart")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000024 "or with divisions drawn by cognitive subjects for practical reasons, such as the division of a cake (before slicing) into (what will become) slices (and thus member parts of an object aggregate). However, this does not mean that fiat object parts are dependent for their existence on divisions or delineations effected by cognitive subjects. If, for example, it is correct to conceive geological layers of the Earth as fiat object parts of the Earth, then even though these layers were first delineated in recent times, still existed long before such delineation and what holds of these layers (for example that the oldest layers are also the lowest layers) did not begin to hold because of our acts of delineation.Treatment of material entity in BFOExamples viewed by some as problematic cases for the trichotomy of fiat object part, object, and object aggregate include: a mussel on (and attached to) a rock, a slime mold, a pizza, a cloud, a galaxy, a railway train with engine and multiple carriages, a clonal stand of quaking aspen, a bacterial community (biofilm), a broken femur. Note that, as Aristotle already clearly recognized, such problematic cases – which lie at or near the penumbra of instances defined by the categories in question – need not invalidate these categories. The existence of grey objects does not prove that there are not objects which are black and objects which are white; the existence of mules does not prove that there are not objects which are donkeys and objects which are horses. It does, however, show that the examples in question need to be addressed carefully in order to show how they can be fitted into the proposed scheme, for example by recognizing additional subdivisions [29"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000024 "the FMA:regional parts of an intact human body."@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000024 "the Western hemisphere of the Earth"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000024 "the division of the brain into regions"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000024 "the division of the planet into hemispheres"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000024 "the dorsal and ventral surfaces of the body"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000024 "the upper and lower lobes of the left lung"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000024 "BFO 2 Reference: Most examples of fiat object parts are associated with theoretically drawn divisions"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/027-004>) obo:IAO_0000600 obo:BFO_0000024 "b is a fiat object part = Def. b is a material entity which is such that for all times t, if b exists at t then there is some object c such that b proper continuant_part of  c at t and c is demarcated from the remainder of c by a two-dimensional continuant fiat boundary. (axiom label in BFO2 Reference: [027-004])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/027-004>) obo:IAO_0000602 obo:BFO_0000024 "(forall (x) (if (FiatObjectPart x) (and (MaterialEntity x) (forall (t) (if (existsAt x t) (exists (y) (and (Object y) (properContinuantPartOfAt x y t)))))))) // axiom label in BFO2 CLIF: [027-004] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000024 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000024 "fiat object part"@en)
SubClassOf(obo:BFO_0000024 obo:BFO_0000040)

# Class: obo:BFO_0000026 (one-dimensional spatial region)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000026 "1d-s-region")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000026 "OneDimensionalSpatialRegion")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000026 "an edge of a cube-shaped portion of space."@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/038-001>) obo:IAO_0000600 obo:BFO_0000026 "A one-dimensional spatial region is a line or aggregate of lines stretching from one point in space to another. (axiom label in BFO2 Reference: [038-001])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/038-001>) obo:IAO_0000602 obo:BFO_0000026 "(forall (x) (if (OneDimensionalSpatialRegion x) (SpatialRegion x))) // axiom label in BFO2 CLIF: [038-001] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000026 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000026 "one-dimensional spatial region"@en)
SubClassOf(obo:BFO_0000026 obo:BFO_0000006)
DisjointClasses(obo:BFO_0000026 obo:BFO_0000028)

# Class: obo:BFO_0000027 (object aggregate)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000027 "object-aggregate")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000027 "ObjectAggregate")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000027 "a collection of cells in a blood biobank."@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000027 "a swarm of bees is an aggregate of members who are linked together through natural bonds"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000027 "a symphony orchestra"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000027 "an organization is an aggregate whose member parts have roles of specific types (for example in a jazz band, a chess club, a football team)"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000027 "defined by fiat: the aggregate of members of an organization"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000027 "defined through physical attachment: the aggregate of atoms in a lump of granite"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000027 "defined through physical containment: the aggregate of molecules of carbon dioxide in a sealed container"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000027 "defined via attributive delimitations such as: the patients in this hospital"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000027 "the aggregate of bearings in a constant velocity axle joint"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000027 "the aggregate of blood cells in your body"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000027 "the nitrogen atoms in the atmosphere"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000027 "the restaurants in Palo Alto"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000027 "your collection of Meissen ceramic plates."@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/0000011>) Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/0000301>) obo:IAO_0000116 obo:BFO_0000027 "An entity a is an object aggregate if and only if there is a mutually exhaustive and pairwise disjoint partition of a into objects ")
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000027 "BFO 2 Reference: object aggregates may gain and lose parts while remaining numerically identical (one and the same individual) over time. This holds both for aggregates whose membership is determined naturally (the aggregate of cells in your body) and aggregates determined by fiat (a baseball team, a congressional committee)."@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/0000300>) obo:IAO_0000119 obo:BFO_0000027 "ISBN:978-3-938793-98-5pp124-158#Thomas Bittner and Barry Smith, 'A Theory of Granular Partitions', in K. Munn and B. Smith (eds.), Applied Ontology: An Introduction, Frankfurt/Lancaster: ontos, 2008, 125-158.")
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/025-004>) obo:IAO_0000600 obo:BFO_0000027 "b is an object aggregate means: b is a material entity consisting exactly of a plurality of objects as member_parts at all times at which b exists. (axiom label in BFO2 Reference: [025-004])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/025-004>) obo:IAO_0000602 obo:BFO_0000027 "(forall (x) (if (ObjectAggregate x) (and (MaterialEntity x) (forall (t) (if (existsAt x t) (exists (y z) (and (Object y) (Object z) (memberPartOfAt y x t) (memberPartOfAt z x t) (not (= y z)))))) (not (exists (w t_1) (and (memberPartOfAt w x t_1) (not (Object w)))))))) // axiom label in BFO2 CLIF: [025-004] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000027 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000027 "object aggregate"@en)
SubClassOf(obo:BFO_0000027 obo:BFO_0000040)

# Class: obo:BFO_0000028 (three-dimensional spatial region)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000028 "3d-s-region")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000028 "ThreeDimensionalSpatialRegion")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000028 "a cube-shaped region of space"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000028 "a sphere-shaped region of space,"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/040-001>) obo:IAO_0000600 obo:BFO_0000028 "A three-dimensional spatial region is a spatial region that is of three dimensions. (axiom label in BFO2 Reference: [040-001])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/040-001>) obo:IAO_0000602 obo:BFO_0000028 "(forall (x) (if (ThreeDimensionalSpatialRegion x) (SpatialRegion x))) // axiom label in BFO2 CLIF: [040-001] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000028 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000028 "three-dimensional spatial region"@en)
SubClassOf(obo:BFO_0000028 obo:BFO_0000006)

# Class: obo:BFO_0000029 (site)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000029 "site")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000029 "Site")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000029 "Manhattan Canyon)"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000029 "a hole in the interior of a portion of cheese"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000029 "a rabbit hole"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000029 "an air traffic control region defined in the airspace above an airport"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000029 "the Grand Canyon"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000029 "the Piazza San Marco"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000029 "the cockpit of an aircraft"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000029 "the hold of a ship"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000029 "the interior of a kangaroo pouch"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000029 "the interior of the trunk of your car"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000029 "the interior of your bedroom"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000029 "the interior of your office"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000029 "the interior of your refrigerator"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000029 "the lumen of your gut"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000029 "your left nostril (a fiat part – the opening – of your left nasal cavity)"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/034-002>) obo:IAO_0000600 obo:BFO_0000029 "b is a site means: b is a three-dimensional immaterial entity that is (partially or wholly) bounded by a material entity or it is a three-dimensional immaterial part thereof. (axiom label in BFO2 Reference: [034-002])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/034-002>) obo:IAO_0000602 obo:BFO_0000029 "(forall (x) (if (Site x) (ImmaterialEntity x))) // axiom label in BFO2 CLIF: [034-002] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000029 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000029 "site"@en)
SubClassOf(obo:BFO_0000029 obo:BFO_0000141)

# Class: obo:BFO_0000030 (object)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000030 "object")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000030 "Object")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000030 "atom"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000030 "cell"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000030 "cells and organisms"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000030 "engineered artifacts"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000030 "grain of sand"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000030 "molecule"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000030 "organelle"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000030 "organism"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000030 "planet"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000030 "solid portions of matter"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000030 "star"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000030 "BFO 2 Reference: BFO rests on the presupposition that at multiple micro-, meso- and macroscopic scales reality exhibits certain stable, spatially separated or separable material units, combined or combinable into aggregates of various sorts (for example organisms into what are called ‘populations’). Such units play a central role in almost all domains of natural science from particle physics to cosmology. Many scientific laws govern the units in question, employing general terms (such as ‘molecule’ or ‘planet’) referring to the types and subtypes of units, and also to the types and subtypes of the processes through which such units develop and interact. The division of reality into such natural units is at the heart of biological science, as also is the fact that these units may form higher-level units (as cells form multicellular organisms) and that they may also form aggregates of units, for example as cells form portions of tissue and organs form families, herds, breeds, species, and so on. At the same time, the division of certain portions of reality into engineered units (manufactured artifacts) is the basis of modern industrial technology, which rests on the distributed mass production of engineered parts through division of labor and on their assembly into larger, compound units such as cars and laptops. The division of portions of reality into units is one starting point for the phenomenon of counting."@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000030 "BFO 2 Reference: Each object is such that there are entities of which we can assert unproblematically that they lie in its interior, and other entities of which we can assert unproblematically that they lie in its exterior. This may not be so for entities lying at or near the boundary between the interior and exterior. This means that two objects – for example the two cells depicted in Figure 3 – may be such that there are material entities crossing their boundaries which belong determinately to neither cell. Something similar obtains in certain cases of conjoined twins (see below)."@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000030 "BFO 2 Reference: To say that b is causally unified means: b is a material entity which is such that its material parts are tied together in such a way that, in environments typical for entities of the type in question,if c, a continuant part of b that is in the interior of b at t, is larger than a certain threshold size (which will be determined differently from case to case, depending on factors such as porosity of external cover) and is moved in space to be at t at a location on the exterior of the spatial region that had been occupied by b at t, then either b’s other parts will be moved in coordinated fashion or b will be damaged (be affected, for example, by breakage or tearing) in the interval between t and t.causal changes in one part of b can have consequences for other parts of b without the mediation of any entity that lies on the exterior of b. Material entities with no proper material parts would satisfy these conditions trivially. Candidate examples of types of causal unity for material entities of more complex sorts are as follows (this is not intended to be an exhaustive list):CU1: Causal unity via physical coveringHere the parts in the interior of the unified entity are combined together causally through a common membrane or other physical covering\\. The latter points outwards toward and may serve a protective function in relation to what lies on the exterior of the entity [13, 47"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000030 "BFO 2 Reference: an object is a maximal causally unified material entity"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000030 "BFO 2 Reference: ‘objects’ are sometimes referred to as ‘grains’ [74"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/024-001>) obo:IAO_0000600 obo:BFO_0000030 "b is an object means: b is a material entity which manifests causal unity of one or other of the types CUn listed above & is of a type (a material universal) instances of which are maximal relative to this criterion of causal unity. (axiom label in BFO2 Reference: [024-001])"@en)
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000030 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000030 "object"@en)
SubClassOf(obo:BFO_0000030 obo:BFO_0000040)

# Class: obo:BFO_0000031 (generically dependent continuant)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000031 "gdc")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000031 "GenericallyDependentContinuant")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000031 "The entries in your database are patterns instantiated as quality instances in your hard drive. The database itself is an aggregate of such patterns. When you create the database you create a particular instance of the generically dependent continuant type database. Each entry in the database is an instance of the generically dependent continuant type IAO: information content entity."@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000031 "the pdf file on your laptop, the pdf file that is a copy thereof on my laptop"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000031 "the sequence of this protein molecule; the sequence that is a copy thereof in that protein molecule."@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/074-001>) obo:IAO_0000115 obo:BFO_0000031 "b is a generically dependent continuant = Def. b is a continuant that g-depends_on one or more other entities. (axiom label in BFO2 Reference: [074-001])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/074-001>) obo:IAO_0000602 obo:BFO_0000031 "(iff (GenericallyDependentContinuant a) (and (Continuant a) (exists (b t) (genericallyDependsOnAt a b t)))) // axiom label in BFO2 CLIF: [074-001] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000031 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000031 "generically dependent continuant"@en)
SubClassOf(obo:BFO_0000031 obo:BFO_0000002)

# Class: obo:BFO_0000034 (function)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000034 "function")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000034 "Function")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000034 "the function of a hammer to drive in nails"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000034 "the function of a heart pacemaker to regulate the beating of a heart through electricity"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000034 "the function of amylase in saliva to break down starch into sugar"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000034 "BFO 2 Reference: In the past, we have distinguished two varieties of function, artifactual function and biological function. These are not asserted subtypes of BFO:function however, since the same function – for example: to pump, to transport – can exist both in artifacts and in biological entities. The asserted subtypes of function that would be needed in order to yield a separate monoheirarchy are not artifactual function, biological function, etc., but rather transporting function, pumping function, etc."@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/064-001>) obo:IAO_0000600 obo:BFO_0000034 "A function is a disposition that exists in virtue of the bearer’s physical make-up and this physical make-up is something the bearer possesses because it came into being, either through evolution (in the case of natural biological entities) or through intentional design (in the case of artifacts), in order to realize processes of a certain sort. (axiom label in BFO2 Reference: [064-001])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/064-001>) obo:IAO_0000602 obo:BFO_0000034 "(forall (x) (if (Function x) (Disposition x))) // axiom label in BFO2 CLIF: [064-001] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000034 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000034 "function"@en)
SubClassOf(obo:BFO_0000034 obo:BFO_0000016)

# Class: obo:BFO_0000035 (process boundary)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000035 "p-boundary")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000035 "ProcessBoundary")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000035 "the boundary between the 2nd and 3rd year of your life."@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/084-001>) obo:IAO_0000115 obo:BFO_0000035 "p is a process boundary =Def. p is a temporal part of a process & p has no proper temporal parts. (axiom label in BFO2 Reference: [084-001])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/085-002>) obo:IAO_0000601 obo:BFO_0000035 "Every process boundary occupies_temporal_region a zero-dimensional temporal region. (axiom label in BFO2 Reference: [085-002])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/085-002>) obo:IAO_0000602 obo:BFO_0000035 "(forall (x) (if (ProcessBoundary x) (exists (y) (and (ZeroDimensionalTemporalRegion y) (occupiesTemporalRegion x y))))) // axiom label in BFO2 CLIF: [085-002] ")
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/084-001>) obo:IAO_0000602 obo:BFO_0000035 "(iff (ProcessBoundary a) (exists (p) (and (Process p) (temporalPartOf a p) (not (exists (b) (properTemporalPartOf b a)))))) // axiom label in BFO2 CLIF: [084-001] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000035 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000035 "process boundary"@en)
SubClassOf(obo:BFO_0000035 obo:BFO_0000003)

# Class: obo:BFO_0000038 (one-dimensional temporal region)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000038 "1d-t-region")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000038 "OneDimensionalTemporalRegion")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000038 "the temporal region during which a process occurs."@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000038 "BFO 2 Reference: A temporal interval is a special kind of one-dimensional temporal region, namely one that is self-connected (is without gaps or breaks)."@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/103-001>) obo:IAO_0000600 obo:BFO_0000038 "A one-dimensional temporal region is a temporal region that is extended. (axiom label in BFO2 Reference: [103-001])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/103-001>) obo:IAO_0000602 obo:BFO_0000038 "(forall (x) (if (OneDimensionalTemporalRegion x) (TemporalRegion x))) // axiom label in BFO2 CLIF: [103-001] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000038 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000038 "one-dimensional temporal region"@en)
SubClassOf(obo:BFO_0000038 obo:BFO_0000008)
DisjointClasses(obo:BFO_0000038 obo:BFO_0000148)

# Class: obo:BFO_0000040 (material entity)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000040 "material")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000040 "MaterialEntity")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000040 "a flame"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000040 "a forest fire"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000040 "a human being"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000040 "a hurricane"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000040 "a photon"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000040 "a puff of smoke"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000040 "a sea wave"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000040 "a tornado"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000040 "an aggregate of human beings."@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000040 "an energy wave"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000040 "an epidemic"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000040 "the undetached arm of a human being"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000040 "BFO 2 Reference: Material entities (continuants) can preserve their identity even while gaining and losing material parts. Continuants are contrasted with occurrents, which unfold themselves in successive temporal parts or phases [60"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000040 "BFO 2 Reference: Object, Fiat Object Part and Object Aggregate are not intended to be exhaustive of Material Entity. Users are invited to propose new subcategories of Material Entity."@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000040 "BFO 2 Reference: ‘Matter’ is intended to encompass both mass and energy (we will address the ontological treatment of portions of energy in a later version of BFO). A portion of matter is anything that includes elementary particles among its proper or improper parts: quarks and leptons, including electrons, as the smallest particles thus far discovered; baryons (including protons and neutrons) at a higher level of granularity; atoms and molecules at still higher levels, forming the cells, organs, organisms and other material entities studied by biologists, the portions of rock studied by geologists, the fossils studied by paleontologists, and so on.Material entities are three-dimensional entities (entities extended in three spatial dimensions), as contrasted with the processes in which they participate, which are four-dimensional entities (entities extended also along the dimension of time).According to the FMA, material entities may have immaterial entities as parts – including the entities identified below as sites; for example the interior (or ‘lumen’) of your small intestine is a part of your body. BFO 2.0 embodies a decision to follow the FMA here."@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/019-002>) obo:IAO_0000600 obo:BFO_0000040 "A material entity is an independent continuant that has some portion of matter as proper or improper continuant part. (axiom label in BFO2 Reference: [019-002])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/020-002>) obo:IAO_0000601 obo:BFO_0000040 "Every entity which has a material entity as continuant part is a material entity. (axiom label in BFO2 Reference: [020-002])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/021-002>) obo:IAO_0000601 obo:BFO_0000040 "every entity of which a material entity is continuant part is also a material entity. (axiom label in BFO2 Reference: [021-002])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/019-002>) obo:IAO_0000602 obo:BFO_0000040 "(forall (x) (if (MaterialEntity x) (IndependentContinuant x))) // axiom label in BFO2 CLIF: [019-002] ")
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/021-002>) obo:IAO_0000602 obo:BFO_0000040 "(forall (x) (if (and (Entity x) (exists (y t) (and (MaterialEntity y) (continuantPartOfAt x y t)))) (MaterialEntity x))) // axiom label in BFO2 CLIF: [021-002] ")
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/020-002>) obo:IAO_0000602 obo:BFO_0000040 "(forall (x) (if (and (Entity x) (exists (y t) (and (MaterialEntity y) (continuantPartOfAt y x t)))) (MaterialEntity x))) // axiom label in BFO2 CLIF: [020-002] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000040 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000040 "material entity"@en)
SubClassOf(obo:BFO_0000040 obo:BFO_0000004)
DisjointClasses(obo:BFO_0000040 obo:BFO_0000141)

# Class: obo:BFO_0000140 (continuant fiat boundary)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000140 "cf-boundary")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000140 "ContinuantFiatBoundary")
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/029-001>) obo:IAO_0000115 obo:BFO_0000140 "b is a continuant fiat boundary = Def. b is an immaterial entity that is of zero, one or two dimensions and does not include a spatial region as part. (axiom label in BFO2 Reference: [029-001])"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000140 "BFO 2 Reference: In BFO 1.1 the assumption was made that the external surface of a material entity such as a cell could be treated as if it were a boundary in the mathematical sense. The new document propounds the view that when we talk about external surfaces of material objects in this way then we are talking about something fiat. To be dealt with in a future version: fiat boundaries at different levels of granularity.More generally, the focus in discussion of boundaries in BFO 2.0 is now on fiat boundaries, which means: boundaries for which there is no assumption that they coincide with physical discontinuities. The ontology of boundaries becomes more closely allied with the ontology of regions."@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000140 "BFO 2 Reference: a continuant fiat boundary is a boundary of some material entity (for example: the plane separating the Northern and Southern hemispheres; the North Pole), or it is a boundary of some immaterial entity (for example of some portion of airspace). Three basic kinds of continuant fiat boundary can be distinguished (together with various combination kinds [29"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/0000008>) obo:IAO_0000116 obo:BFO_0000140 "Continuant fiat boundary doesn't have a closure axiom because the subclasses don't necessarily exhaust all possibilites. An example would be the mereological sum of two-dimensional continuant fiat boundary and a one dimensional continuant fiat boundary that doesn't overlap it. The situation is analogous to temporal and spatial regions."@en)
AnnotationAssertion(obo:IAO_0000601 obo:BFO_0000140 "Every continuant fiat boundary is located at some spatial region at every time at which it exists"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/029-001>) obo:IAO_0000602 obo:BFO_0000140 "(iff (ContinuantFiatBoundary a) (and (ImmaterialEntity a) (exists (b) (and (or (ZeroDimensionalSpatialRegion b) (OneDimensionalSpatialRegion b) (TwoDimensionalSpatialRegion b)) (forall (t) (locatedInAt a b t)))) (not (exists (c t) (and (SpatialRegion c) (continuantPartOfAt c a t)))))) // axiom label in BFO2 CLIF: [029-001] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000140 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000140 "continuant fiat boundary"@en)
SubClassOf(obo:BFO_0000140 obo:BFO_0000141)

# Class: obo:BFO_0000141 (immaterial entity)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000141 "immaterial")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000141 "ImmaterialEntity")
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000141 "BFO 2 Reference: Immaterial entities are divided into two subgroups:boundaries and sites, which bound, or are demarcated in relation, to material entities, and which can thus change location, shape and size and as their material hosts move or change shape or size (for example: your nasal passage; the hold of a ship; the boundary of Wales (which moves with the rotation of the Earth) [38, 7, 10"@en)
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000141 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000141 "immaterial entity"@en)
SubClassOf(obo:BFO_0000141 obo:BFO_0000004)

# Class: obo:BFO_0000142 (one-dimensional continuant fiat boundary)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000142 "1d-cf-boundary")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000142 "OneDimensionalContinuantFiatBoundary")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000142 "The Equator"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000142 "all geopolitical boundaries"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000142 "all lines of latitude and longitude"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000142 "the line separating the outer surface of the mucosa of the lower lip from the outer surface of the skin of the chin."@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000142 "the median sulcus of your tongue"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/032-001>) obo:IAO_0000600 obo:BFO_0000142 "a one-dimensional continuant fiat boundary is a continuous fiat line whose location is defined in relation to some material entity. (axiom label in BFO2 Reference: [032-001])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/032-001>) obo:IAO_0000602 obo:BFO_0000142 "(iff (OneDimensionalContinuantFiatBoundary a) (and (ContinuantFiatBoundary a) (exists (b) (and (OneDimensionalSpatialRegion b) (forall (t) (locatedInAt a b t)))))) // axiom label in BFO2 CLIF: [032-001] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000142 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000142 "one-dimensional continuant fiat boundary"@en)
SubClassOf(obo:BFO_0000142 obo:BFO_0000140)
DisjointClasses(obo:BFO_0000142 obo:BFO_0000146)
DisjointClasses(obo:BFO_0000142 obo:BFO_0000147)

# Class: obo:BFO_0000144 (process profile)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000144 "process-profile")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000144 "ProcessProfile")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000144 "On a somewhat higher level of complexity are what we shall call rate process profiles, which are the targets of selective abstraction focused not on determinate quality magnitudes plotted over time, but rather on certain ratios between these magnitudes and elapsed times. A speed process profile, for example, is represented by a graph plotting against time the ratio of distance covered per unit of time. Since rates may change, and since such changes, too, may have rates of change, we have to deal here with a hierarchy of process profile universals at successive levels"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000144 "One important sub-family of rate process profiles is illustrated by the beat or frequency profiles of cyclical processes, illustrated by the 60 beats per minute beating process of John’s heart, or the 120 beats per minute drumming process involved in one of John’s performances in a rock band, and so on. Each such process includes what we shall call a beat process profile instance as part, a subtype of rate process profile in which the salient ratio is not distance covered but rather number of beat cycles per unit of time. Each beat process profile instance instantiates the determinable universal beat process profile. But it also instantiates multiple more specialized universals at lower levels of generality, selected from   rate process profilebeat process profileregular beat process profile3 bpm beat process profile4 bpm beat process profileirregular beat process profileincreasing beat process profileand so on.In the case of a regular beat process profile, a rate can be assigned in the simplest possible fashion by dividing the number of cycles by the length of the temporal region occupied by the beating process profile as a whole. Irregular process profiles of this sort, for example as identified in the clinic, or in the readings on an aircraft instrument panel, are often of diagnostic significance."@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000144 "The simplest type of process profiles are what we shall call ‘quality process profiles’, which are the process profiles which serve as the foci of the sort of selective abstraction that is involved when measurements are made of changes in single qualities, as illustrated, for example, by process profiles of mass, temperature, aortic pressure, and so on."@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/093-002>) obo:IAO_0000115 obo:BFO_0000144 "b is a process_profile =Def. there is some process c such that b process_profile_of c (axiom label in BFO2 Reference: [093-002])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/094-005>) obo:IAO_0000600 obo:BFO_0000144 "b process_profile_of c holds when b proper_occurrent_part_of c& there is some proper_occurrent_part d of c which has no parts in common with b & is mutually dependent on b& is such that b, c and d occupy the same temporal region (axiom label in BFO2 Reference: [094-005])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/094-005>) obo:IAO_0000602 obo:BFO_0000144 "(forall (x y) (if (processProfileOf x y) (and (properContinuantPartOf x y) (exists (z t) (and (properOccurrentPartOf z y) (TemporalRegion t) (occupiesSpatioTemporalRegion x t) (occupiesSpatioTemporalRegion y t) (occupiesSpatioTemporalRegion z t) (not (exists (w) (and (occurrentPartOf w x) (occurrentPartOf w z))))))))) // axiom label in BFO2 CLIF: [094-005] ")
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/093-002>) obo:IAO_0000602 obo:BFO_0000144 "(iff (ProcessProfile a) (exists (b) (and (Process b) (processProfileOf a b)))) // axiom label in BFO2 CLIF: [093-002] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000144 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000144 "process profile"@en)
SubClassOf(obo:BFO_0000144 obo:BFO_0000015)
DisjointClasses(obo:BFO_0000144 obo:BFO_0000182)

# Class: obo:BFO_0000145 (relational quality)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000145 "r-quality")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000145 "RelationalQuality")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000145 "John’s role of husband to Mary is dependent on Mary’s role of wife to John, and both are dependent on the object aggregate comprising John and Mary as member parts joined together through the relational quality of being married."@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000145 "a marriage bond, an instance of requited love, an obligation between one person and another."@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/057-001>) obo:IAO_0000115 obo:BFO_0000145 "b is a relational quality = Def. for some independent continuants c, d and for some time t: b quality_of c at t & b quality_of d at t. (axiom label in BFO2 Reference: [057-001])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/057-001>) obo:IAO_0000602 obo:BFO_0000145 "(iff (RelationalQuality a) (exists (b c t) (and (IndependentContinuant b) (IndependentContinuant c) (qualityOfAt a b t) (qualityOfAt a c t)))) // axiom label in BFO2 CLIF: [057-001] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000145 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000145 "relational quality"@en)
SubClassOf(obo:BFO_0000145 obo:BFO_0000019)

# Class: obo:BFO_0000146 (two-dimensional continuant fiat boundary)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000146 "2d-cf-boundary")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000146 "TwoDimensionalContinuantFiatBoundary")
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/033-001>) obo:IAO_0000600 obo:BFO_0000146 "a two-dimensional continuant fiat boundary (surface) is a self-connected fiat surface whose location is defined in relation to some material entity. (axiom label in BFO2 Reference: [033-001])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/033-001>) obo:IAO_0000602 obo:BFO_0000146 "(iff (TwoDimensionalContinuantFiatBoundary a) (and (ContinuantFiatBoundary a) (exists (b) (and (TwoDimensionalSpatialRegion b) (forall (t) (locatedInAt a b t)))))) // axiom label in BFO2 CLIF: [033-001] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000146 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000146 "two-dimensional continuant fiat boundary"@en)
SubClassOf(obo:BFO_0000146 obo:BFO_0000140)

# Class: obo:BFO_0000147 (zero-dimensional continuant fiat boundary)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000147 "0d-cf-boundary")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000147 "ZeroDimensionalContinuantFiatBoundary")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000147 "the geographic North Pole"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000147 "the point of origin of some spatial coordinate system."@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000147 "the quadripoint where the boundaries of Colorado, Utah, New Mexico, and Arizona meet"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/0000001>) Annotation(rdfs:comment "requested by Melanie Courtot") Annotation(rdfs:seeAlso <https://groups.google.com/d/msg/bfo-owl-devel/s9Uug5QmAws/ZDRnpiIi_TUJ>) obo:IAO_0000116 obo:BFO_0000147 "zero dimension continuant fiat boundaries are not spatial points. Considering the example 'the quadripoint where the boundaries of Colorado, Utah, New Mexico, and Arizona meet' : There are many frames in which that point is zooming through many points in space. Whereas, no matter what the frame, the quadripoint is always in the same relation to the boundaries of Colorado, Utah, New Mexico, and Arizona."@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/031-001>) obo:IAO_0000600 obo:BFO_0000147 "a zero-dimensional continuant fiat boundary is a fiat point whose location is defined in relation to some material entity. (axiom label in BFO2 Reference: [031-001])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/031-001>) obo:IAO_0000602 obo:BFO_0000147 "(iff (ZeroDimensionalContinuantFiatBoundary a) (and (ContinuantFiatBoundary a) (exists (b) (and (ZeroDimensionalSpatialRegion b) (forall (t) (locatedInAt a b t)))))) // axiom label in BFO2 CLIF: [031-001] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000147 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000147 "zero-dimensional continuant fiat boundary"@en)
SubClassOf(obo:BFO_0000147 obo:BFO_0000140)

# Class: obo:BFO_0000148 (zero-dimensional temporal region)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000148 "0d-t-region")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000148 "ZeroDimensionalTemporalRegion")
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000148 "a temporal region that is occupied by a process boundary"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000148 "right now"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000148 "the moment at which a child is born"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000148 "the moment at which a finger is detached in an industrial accident"@en)
AnnotationAssertion(obo:IAO_0000112 obo:BFO_0000148 "the moment of death."@en)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000148 "temporal instant."@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/102-001>) obo:IAO_0000600 obo:BFO_0000148 "A zero-dimensional temporal region is a temporal region that is without extent. (axiom label in BFO2 Reference: [102-001])"@en)
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/102-001>) obo:IAO_0000602 obo:BFO_0000148 "(forall (x) (if (ZeroDimensionalTemporalRegion x) (TemporalRegion x))) // axiom label in BFO2 CLIF: [102-001] ")
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000148 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000148 "zero-dimensional temporal region"@en)
SubClassOf(obo:BFO_0000148 obo:BFO_0000008)

# Class: obo:BFO_0000182 (history)

AnnotationAssertion(obo:BFO_0000179 obo:BFO_0000182 "history")
AnnotationAssertion(obo:BFO_0000180 obo:BFO_0000182 "History")
AnnotationAssertion(Annotation(obo:IAO_0010000 <http://purl.obolibrary.org/obo/bfo/axiom/138-001>) obo:IAO_0000600 obo:BFO_0000182 "A history is a process that is the sum of the totality of processes taking place in the spatiotemporal region occupied by a material entity or site, including processes on the surface of the entity or within the cavities to which it serves as host. (axiom label in BFO2 Reference: [138-001])"@en)
AnnotationAssertion(rdfs:isDefinedBy obo:BFO_0000182 obo:bfo.owl)
AnnotationAssertion(rdfs:label obo:BFO_0000182 "history"@en)
SubClassOf(obo:BFO_0000182 obo:BFO_0000015)

# Class: obo:HEPRO_0000001 (health procedure request)

AnnotationAssertion(obo:IAO_0000115 obo:HEPRO_0000001 "A request requesting the execution of some health procedure."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000061 obo:HEPRO_0000001 "A request that has as part a health procedure specification."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000062 obo:HEPRO_0000001 "A request requesting the execution of some health procedure."@en)
AnnotationAssertion(oboInOwl:inSubset obo:HEPRO_0000001 OpenLHS-Core:OpenLHS-H)
AnnotationAssertion(rdfs:label obo:HEPRO_0000001 "health procedure request"@en)
SubClassOf(obo:HEPRO_0000001 obo:OpenLHS-Core_0000027)
SubClassOf(obo:HEPRO_0000001 ObjectSomeValuesFrom(obo:RO_0002180 obo:HEPRO_0000030))

# Class: obo:HEPRO_0000003 (health procedure report)

AnnotationAssertion(obo:IAO_0000115 obo:HEPRO_0000003 "An information content entity containing information about some health procedure requests and possibly the associated health procedures."@en)
AnnotationAssertion(oboInOwl:inSubset obo:HEPRO_0000003 OpenLHS-Core:OpenLHS-H)
AnnotationAssertion(rdfs:label obo:HEPRO_0000003 "health procedure report"@en)
SubClassOf(obo:HEPRO_0000003 obo:IAO_0000030)

# Class: obo:HEPRO_0000004 (health procedure)

AnnotationAssertion(obo:IAO_0000115 obo:HEPRO_0000004 "- A planned process that is maximally directed by a health procedure specification.
- A planned process that is guided by the objective of contributing to a desired effect on the health status of an organism or several organisms achieved through the treatment, diagnosis, or prevention of disease or injury."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000061 obo:HEPRO_0000004 "A planned process that has some components that are planned processes, including at least one that is a health activity."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000062 obo:HEPRO_0000004 "- A planned process that is maximally directed by a health procedure specification.
- A planned process that is guided by the objective of contributing to a desired effect on the health status of an organism or several organisms achieved through the treatment, diagnosis, or prevention of disease or injury."@en)
AnnotationAssertion(oboInOwl:inSubset obo:HEPRO_0000004 OpenLHS-Core:OpenLHS-H)
AnnotationAssertion(rdfs:label obo:HEPRO_0000004 "health procedure"@en)
EquivalentClasses(obo:HEPRO_0000004 ObjectIntersectionOf(obo:OBI_0000011 ObjectSomeValuesFrom(obo:OpenLHS-Core_0000067 obo:HEPRO_0000030)))
SubClassOf(obo:HEPRO_0000004 ObjectSomeValuesFrom(obo:RO_0002018 obo:HEPRO_0000005))

# Class: obo:HEPRO_0000005 (health activity)

AnnotationAssertion(obo:IAO_0000115 obo:HEPRO_0000005 "A planned process that aims to produce a truthful statement about the health status of an organism or modify it."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000061 obo:HEPRO_0000005 "A planned process that aims to produce a truthful statement about the health status of an organism or modify it."@en)
AnnotationAssertion(oboInOwl:inSubset obo:HEPRO_0000005 OpenLHS-Core:OpenLHS-H)
AnnotationAssertion(rdfs:label obo:HEPRO_0000005 "health activity"@en)
SubClassOf(obo:HEPRO_0000005 obo:OBI_0000011)

# Class: obo:HEPRO_0000006 (health procedure resulting process)

AnnotationAssertion(obo:IAO_0000115 obo:HEPRO_0000006 "A planned process that is a part of a health procedure, that has as specified input at least one health activity outcome information and aim at generating a health procedure outcome information."@en)
AnnotationAssertion(oboInOwl:inSubset obo:HEPRO_0000006 OpenLHS-Core:OpenLHS-H)
AnnotationAssertion(rdfs:label obo:HEPRO_0000006 "health procedure resulting process"@en)
SubClassOf(obo:HEPRO_0000006 obo:OBI_0000011)
SubClassOf(obo:HEPRO_0000006 ObjectSomeValuesFrom(obo:OBI_0000293 obo:HEPRO_0000008))

# Class: obo:HEPRO_0000007 (health procedure outcome information)

AnnotationAssertion(obo:IAO_0000115 obo:HEPRO_0000007 "An information content entity that is the output of a health procedure resulting process and that describes some outcomes of a health procedure."@en)
AnnotationAssertion(oboInOwl:inSubset obo:HEPRO_0000007 OpenLHS-Core:OpenLHS-H)
AnnotationAssertion(rdfs:label obo:HEPRO_0000007 "health procedure outcome information"@en)
SubClassOf(obo:HEPRO_0000007 obo:IAO_0000030)
SubClassOf(obo:HEPRO_0000007 ObjectSomeValuesFrom(obo:OBI_0000312 obo:HEPRO_0000006))

# Class: obo:HEPRO_0000008 (health activity outcome information)

AnnotationAssertion(obo:IAO_0000115 obo:HEPRO_0000008 "An information content entity that is a specified output of a health activity."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000061 obo:HEPRO_0000008 "An information content entity that is a specified output of a health activity."@en)
AnnotationAssertion(oboInOwl:inSubset obo:HEPRO_0000008 OpenLHS-Core:OpenLHS-H)
AnnotationAssertion(rdfs:label obo:HEPRO_0000008 "health activity outcome information"@en)
SubClassOf(obo:HEPRO_0000008 obo:IAO_0000030)
SubClassOf(obo:HEPRO_0000008 ObjectSomeValuesFrom(obo:OBI_0000312 obo:HEPRO_0000005))

# Class: obo:HEPRO_0000009 (health provider identifier)

AnnotationAssertion(obo:IAO_0000115 obo:HEPRO_0000009 "An individual identifier that denotes a health provider."@en)
AnnotationAssertion(oboInOwl:inSubset obo:HEPRO_0000009 OpenLHS-Core:OpenLHS-H)
AnnotationAssertion(rdfs:label obo:HEPRO_0000009 "health provider identifier"@en)
SubClassOf(obo:HEPRO_0000009 obo:IOIO_0000013)
SubClassOf(obo:HEPRO_0000009 ObjectExactCardinality(1 obo:IAO_0000219 obo:HEPRO_0000012))

# Class: obo:HEPRO_0000010 (physician identifier)

AnnotationAssertion(obo:IAO_0000115 obo:HEPRO_0000010 "A health provider identifier that is used to denote a person authorised to act as a physician."@en)
AnnotationAssertion(oboInOwl:inSubset obo:HEPRO_0000010 OpenLHS-Core:OpenLHS-H)
AnnotationAssertion(rdfs:label obo:HEPRO_0000010 "physician identifier"@en)
SubClassOf(obo:HEPRO_0000010 obo:HEPRO_0000009)
SubClassOf(obo:HEPRO_0000010 ObjectExactCardinality(1 obo:IAO_0000219 obo:NCBITaxon_9606))

# Class: obo:HEPRO_0000011 (health provider role)

AnnotationAssertion(obo:IAO_0000115 obo:HEPRO_0000011 "A role that inheres in an organism as a consequence of training in order to be able to participate as a performer in some health activities."@en)
AnnotationAssertion(obo:IAO_0000600 obo:HEPRO_0000011 "This usually includes health professional like physicians, nurses or pharmacists etc.
It could also includes non professionals like patient attendant but it would exclude others like secretaries or accountants."@en)
AnnotationAssertion(oboInOwl:inSubset obo:HEPRO_0000011 OpenLHS-Core:OpenLHS-H)
AnnotationAssertion(rdfs:label obo:HEPRO_0000011 "health provider role"@en)
SubClassOf(obo:HEPRO_0000011 obo:BFO_0000023)
SubClassOf(obo:HEPRO_0000011 ObjectSomeValuesFrom(obo:RO_0000081 obo:OBI_0100026))

# Class: obo:HEPRO_0000012 (health provider)

AnnotationAssertion(obo:IAO_0000115 obo:HEPRO_0000012 "An organism that is the bearer of a health provider role."@en)
AnnotationAssertion(oboInOwl:inSubset obo:HEPRO_0000012 OpenLHS-Core:OpenLHS-H)
AnnotationAssertion(rdfs:label obo:HEPRO_0000012 "health provider"@en)
SubClassOf(obo:HEPRO_0000012 obo:NCBITaxon_2759)
SubClassOf(obo:HEPRO_0000012 ObjectSomeValuesFrom(obo:RO_0000087 obo:HEPRO_0000011))

# Class: obo:HEPRO_0000013 (diagnostic health procedure)

AnnotationAssertion(obo:IAO_0000115 obo:HEPRO_0000013 "A health procedure that include a diagnostic procedure - TBD."@en)
AnnotationAssertion(oboInOwl:inSubset obo:HEPRO_0000013 OpenLHS-Core:OpenLHS-H)
AnnotationAssertion(rdfs:label obo:HEPRO_0000013 "diagnostic health procedure"@en)
SubClassOf(obo:HEPRO_0000013 obo:HEPRO_0000004)

# Class: obo:HEPRO_0000014 (surgical health procedure)

AnnotationAssertion(obo:IAO_0000115 obo:HEPRO_0000014 "A health procedure that includes a surgical procedure - TBD."@en)
AnnotationAssertion(oboInOwl:inSubset obo:HEPRO_0000014 OpenLHS-Core:OpenLHS-H)
AnnotationAssertion(rdfs:label obo:HEPRO_0000014 "surgical health procedure"@en)
SubClassOf(obo:HEPRO_0000014 obo:HEPRO_0000004)

# Class: obo:HEPRO_0000015 (health procedure sub-group name)

AnnotationAssertion(obo:IAO_0000112 obo:HEPRO_0000015 "'curative procedures'
'Surgeries performed on June, 19th 2023 at Velpeau Hospital'"@en)
AnnotationAssertion(obo:IAO_0000115 obo:HEPRO_0000015 "An information content entity that is about a sub-group of health procedures."@en)
AnnotationAssertion(rdfs:comment obo:HEPRO_0000015 "We suppose that if an ICE is about a group of particular entities, it is also about each of these entities."@en)
AnnotationAssertion(rdfs:label obo:HEPRO_0000015 "health procedure sub-group name"@en)
SubClassOf(obo:HEPRO_0000015 obo:IAO_0000030)
SubClassOf(obo:HEPRO_0000015 ObjectSomeValuesFrom(obo:IAO_0000136 obo:HEPRO_0000004))

# Class: obo:HEPRO_0000016 (health activity sub-group name)

AnnotationAssertion(obo:IAO_0000112 obo:HEPRO_0000016 "'laboratory test'"@en)
AnnotationAssertion(obo:IAO_0000115 obo:HEPRO_0000016 "An information content entity that is about a sub-group of health activities."@en)
AnnotationAssertion(rdfs:comment obo:HEPRO_0000016 "We suppose that if an ICE is about a group of particular entities, it is also about each of these entities."@en)
AnnotationAssertion(rdfs:label obo:HEPRO_0000016 "health activity sub-group name"@en)
SubClassOf(obo:HEPRO_0000016 obo:IAO_0000030)
SubClassOf(obo:HEPRO_0000016 ObjectSomeValuesFrom(obo:IAO_0000136 obo:HEPRO_0000005))

# Class: obo:HEPRO_0000017 (pathological condition sub-group name)

AnnotationAssertion(obo:IAO_0000115 obo:HEPRO_0000017 "An information content entity that is about a sub-group of pathological conditions."@en)
AnnotationAssertion(rdfs:comment obo:HEPRO_0000017 "We suppose that if an ICE is about a group of particular entities, it is also about each of these entities."@en)
AnnotationAssertion(rdfs:label obo:HEPRO_0000017 "pathological condition sub-group name"@en)
SubClassOf(obo:HEPRO_0000017 obo:IAO_0000030)
SubClassOf(obo:HEPRO_0000017 ObjectSomeValuesFrom(obo:IAO_0000136 obo:OpenLHS-Core_0000060))

# Class: obo:HEPRO_0000018 (free-text pathological condition sub-group name)

AnnotationAssertion(obo:IAO_0000115 obo:HEPRO_0000018 "A pathological condition sub-group name that is recorded in free-text."@en)
AnnotationAssertion(rdfs:label obo:HEPRO_0000018 "free-text pathological condition sub-group name"@en)
SubClassOf(obo:HEPRO_0000018 obo:HEPRO_0000017)

# Class: obo:HEPRO_0000019 (structured pathological condition sub-group name)

AnnotationAssertion(obo:IAO_0000115 obo:HEPRO_0000019 "A pathological condition sub-group name that is recorded in a structured manner."@en)
AnnotationAssertion(rdfs:label obo:HEPRO_0000019 "structured pathological condition sub-group name"@en)
SubClassOf(obo:HEPRO_0000019 obo:HEPRO_0000017)

# Class: obo:HEPRO_0000020 (health procedure beginning statement)

AnnotationAssertion(obo:IAO_0000115 obo:HEPRO_0000020 "A process beginning statement that temporally qualifies the beginning of a health procedure."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000062 obo:HEPRO_0000020 "A process beginning statement that temporally qualifies the beginning of a health procedure."@en)
AnnotationAssertion(rdfs:label obo:HEPRO_0000020 "health procedure beginning statement"@en)
SubClassOf(obo:HEPRO_0000020 obo:OpenLHS-Core_0000033)
SubClassOf(obo:HEPRO_0000020 ObjectSomeValuesFrom(obo:RO_0002180 obo:HEPRO_0000101))
SubClassOf(obo:HEPRO_0000020 ObjectSomeValuesFrom(obo:RO_0002180 obo:HEPRO_0000103))

# Class: obo:HEPRO_0000021 (health procedure ending statement)

AnnotationAssertion(obo:IAO_0000115 obo:HEPRO_0000021 "A process ending statement that temporally qualifies the end of a health procedure."@en)
AnnotationAssertion(rdfs:label obo:HEPRO_0000021 "health procedure ending statement"@en)
SubClassOf(obo:HEPRO_0000021 obo:OpenLHS-Core_0000034)
SubClassOf(obo:HEPRO_0000021 ObjectSomeValuesFrom(obo:RO_0002180 obo:HEPRO_0000101))
SubClassOf(obo:HEPRO_0000021 ObjectSomeValuesFrom(obo:RO_0002180 obo:HEPRO_0000105))

# Class: obo:HEPRO_0000022 (health activity beginning statement)

AnnotationAssertion(obo:IAO_0000115 obo:HEPRO_0000022 "A process beginning statement that temporally qualifies the beginning of a health activity."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000062 obo:HEPRO_0000022 "A process beginning statement that temporally qualifies the beginning of a health activity."@en)
AnnotationAssertion(rdfs:label obo:HEPRO_0000022 "health activity beginning statement"@en)
SubClassOf(obo:HEPRO_0000022 obo:OpenLHS-Core_0000033)
SubClassOf(obo:HEPRO_0000022 ObjectSomeValuesFrom(obo:RO_0002180 obo:HEPRO_0000100))
SubClassOf(obo:HEPRO_0000022 ObjectSomeValuesFrom(obo:RO_0002180 obo:HEPRO_0000102))

# Class: obo:HEPRO_0000023 (health activity ending statement)

AnnotationAssertion(obo:IAO_0000115 obo:HEPRO_0000023 "A process ending statement that temporally qualifies the end of a health activity."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000062 obo:HEPRO_0000023 "A process ending statement that temporally qualifies the end of a health activity."@en)
AnnotationAssertion(rdfs:label obo:HEPRO_0000023 "health activity ending statement"@en)
SubClassOf(obo:HEPRO_0000023 obo:OpenLHS-Core_0000034)
SubClassOf(obo:HEPRO_0000023 ObjectSomeValuesFrom(obo:RO_0002180 obo:HEPRO_0000100))
SubClassOf(obo:HEPRO_0000023 ObjectSomeValuesFrom(obo:RO_0002180 obo:HEPRO_0000104))

# Class: obo:HEPRO_0000025 (health procedure agreement specification)

AnnotationAssertion(obo:IAO_0000115 obo:HEPRO_0000025 "A service agreement directive entity that aims to direct some health procedure."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000061 obo:HEPRO_0000025 "A service agreement specification that has as part a health procedure specification.")
AnnotationAssertion(obo:OpenLHS-Core_0000062 obo:HEPRO_0000025 "A service agreement specification that aims to direct some health procedure."@en)
AnnotationAssertion(rdfs:label obo:HEPRO_0000025 "health procedure agreement specification"@en)
SubClassOf(obo:HEPRO_0000025 obo:OpenLHS-Core_0000028)
SubClassOf(obo:HEPRO_0000025 ObjectSomeValuesFrom(obo:BFO_0000051 obo:HEPRO_0000030))

# Class: obo:HEPRO_0000030 (health procedure specification)

AnnotationAssertion(obo:IAO_0000115 obo:HEPRO_0000030 "A directive information entity that aims to direct a health procedure."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000062 obo:HEPRO_0000030 "A directive information entity that aims to direct a health procedure."@en)
AnnotationAssertion(rdfs:label obo:HEPRO_0000030 "health procedure specification"@en)
SubClassOf(obo:HEPRO_0000030 obo:IAO_0000033)

# Class: obo:HEPRO_0000100 (health activity identifier)

AnnotationAssertion(obo:IAO_0000115 obo:HEPRO_0000100 "An identifier that denotes a health activity."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000062 obo:HEPRO_0000100 "An identifier that denotes a health activity."@en)
AnnotationAssertion(rdfs:label obo:HEPRO_0000100 "health activity identifier"@en)
SubClassOf(obo:HEPRO_0000100 obo:IAO_0020000)

# Class: obo:HEPRO_0000101 (health procedure identifier)

AnnotationAssertion(obo:IAO_0000115 obo:HEPRO_0000101 "An identifier that denotes a health procedure."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000062 obo:HEPRO_0000101 "An identifier that denotes a health procedure."@en)
AnnotationAssertion(rdfs:label obo:HEPRO_0000101 "health procedure identifier"@en)
SubClassOf(obo:HEPRO_0000101 obo:IAO_0020000)

# Class: obo:HEPRO_0000102 (health activity beginning temporal information)

AnnotationAssertion(obo:IAO_0000115 obo:HEPRO_0000102 "A temporal information that is a component of a health activity beginning statement that states that the temporal region denoted by this temporal information overlaps with the temporal region occupied by the beginning of the health activity."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000062 obo:HEPRO_0000102 "A temporal information that is a component of a health activity beginning statement that states that the temporal region denoted by this temporal information overlaps with the temporal region occupied by the beginning of the health activity."@en)
AnnotationAssertion(rdfs:label obo:HEPRO_0000102 "health activity beginning temporal information"@en)
SubClassOf(obo:HEPRO_0000102 obo:OpenLHS-Core_0000065)

# Class: obo:HEPRO_0000103 (health procedure beginning temporal information)

AnnotationAssertion(obo:IAO_0000115 obo:HEPRO_0000103 "A temporal information that is a component of a health procedure beginning statement that states that the temporal region denoted by this temporal information overlaps with the temporal region occupied by the beginning of the health procedure."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000062 obo:HEPRO_0000103 "A temporal information that is a component of a health procedure beginning statement that states that the temporal region denoted by this temporal information overlaps with the temporal region occupied by the beginning of the health procedure."@en)
AnnotationAssertion(rdfs:label obo:HEPRO_0000103 "health procedure beginning temporal information"@en)
SubClassOf(obo:HEPRO_0000103 obo:OpenLHS-Core_0000065)

# Class: obo:HEPRO_0000104 (health activity ending temporal information)

AnnotationAssertion(obo:IAO_0000115 obo:HEPRO_0000104 "A temporal information that is a component of a health activity ending statement that states that the temporal region denoted by this temporal information overlaps with the temporal region occupied by the ending of the health activity."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000062 obo:HEPRO_0000104 "A temporal information that is a component of a health activity ending statement that states that the temporal region denoted by this temporal information overlaps with the temporal region occupied by the ending of the health activity."@en)
AnnotationAssertion(rdfs:label obo:HEPRO_0000104 "health activity ending temporal information"@en)
SubClassOf(obo:HEPRO_0000104 obo:OpenLHS-Core_0000065)

# Class: obo:HEPRO_0000105 (health procedure ending temporal information)

AnnotationAssertion(obo:IAO_0000115 obo:HEPRO_0000105 "A temporal information that is a component of a health procedure ending statement that states that the temporal region denoted by this temporal information overlaps with the temporal region occupied by the ending of the health procedure."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000062 obo:HEPRO_0000105 "A temporal information that is a component of a health procedure ending statement that states that the temporal region denoted by this temporal information overlaps with the temporal region occupied by the ending of the health procedure."@en)
AnnotationAssertion(rdfs:label obo:HEPRO_0000105 "health procedure ending temporal information"@en)
SubClassOf(obo:HEPRO_0000105 obo:OpenLHS-Core_0000065)

# Class: obo:HEPRO_0000125 (pathological condition presence statement)

AnnotationAssertion(obo:IAO_0000115 obo:HEPRO_0000125 "A pragmatically accepted statement that states the presence of a pathological condition for an organism."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000061 obo:HEPRO_0000125 "A pragmatically accepted statement that states the presence of a pathological condition for an organism."@en)
AnnotationAssertion(rdfs:label obo:HEPRO_0000125 "pathological condition presence statement"@en)
SubClassOf(obo:HEPRO_0000125 obo:OpenLHS-Core_0000010)
SubClassOf(obo:HEPRO_0000125 ObjectSomeValuesFrom(obo:RO_0002180 obo:HEPRO_0000017))
SubClassOf(obo:HEPRO_0000125 ObjectSomeValuesFrom(obo:RO_0002180 obo:IOIO_0000013))

# Class: obo:HEPRO_0000127 (pathological condition start temporally qualifying statement)

AnnotationAssertion(obo:IAO_0000115 obo:HEPRO_0000127 "A temporally qualifying statement that qualifies the clinically identified appearance of a disorder or a disease, or the beginning of a pathological process."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000062 obo:HEPRO_0000127 "A temporally qualifying statement that qualifies the clinically identified appearance of a disorder or a disease, or the beginning of a pathological process."@en)
AnnotationAssertion(rdfs:label obo:HEPRO_0000127 "pathological condition start temporally qualifying statement"@en)
SubClassOf(obo:HEPRO_0000127 obo:HEPRO_0000125)
SubClassOf(obo:HEPRO_0000127 ObjectSomeValuesFrom(obo:RO_0002180 obo:HEPRO_0000129))

# Class: obo:HEPRO_0000128 (pathological condition end temporally qualifying statement)

AnnotationAssertion(obo:IAO_0000115 obo:HEPRO_0000128 "A temporally qualifying statement that qualifies the clinically identified disappearance of a disorder or a disease, or the ending of a pathological process."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000062 obo:HEPRO_0000128 "A temporally qualifying statement that qualifies the clinically identified disappearance of a disorder or a disease, or the ending of a pathological process."@en)
AnnotationAssertion(rdfs:label obo:HEPRO_0000128 "pathological condition end temporally qualifying statement"@en)
SubClassOf(obo:HEPRO_0000128 obo:HEPRO_0000125)
SubClassOf(obo:HEPRO_0000128 ObjectSomeValuesFrom(obo:RO_0002180 obo:HEPRO_0000130))

# Class: obo:HEPRO_0000129 (pathological condition start temporal information)

AnnotationAssertion(obo:IAO_0000115 obo:HEPRO_0000129 "A temporal information that is a component of a pathological condition start temporallly qualifying statement that states that the temporal region denoted by this temporal information overlaps with the temporal region occupied by the clinically identified start of the pathological condition."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000062 obo:HEPRO_0000129 "A temporal information that is a component of a pathological condition start temporallly qualifying statement that states that the temporal region denoted by this temporal information overlaps with the temporal region occupied by the clinically identified start of the pathological condition."@en)
AnnotationAssertion(rdfs:label obo:HEPRO_0000129 "pathological condition start temporal information"@en)
SubClassOf(obo:HEPRO_0000129 obo:OpenLHS-Core_0000065)

# Class: obo:HEPRO_0000130 (pathological condition end temporal information)

AnnotationAssertion(obo:IAO_0000115 obo:HEPRO_0000130 "A temporal information that is a component of a pathological condition end temporallly qualifying statement that states that the temporal region denoted by this temporal information overlaps with the temporal region occupied by the clinically identified end of the pathological condition."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000062 obo:HEPRO_0000130 "A temporal information that is a component of a pathological condition end temporallly qualifying statement that states that the temporal region denoted by this temporal information overlaps with the temporal region occupied by the clinically identified end of the pathological condition."@en)
AnnotationAssertion(rdfs:label obo:HEPRO_0000130 "pathological condition end temporal information"@en)
SubClassOf(obo:HEPRO_0000130 obo:OpenLHS-Core_0000065)

# Class: obo:IAO_0000005 (objective specification)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000005 "objective specification"@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000005 "In the protocol of a ChIP assay the objective specification says to identify protein and DNA interaction."@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000005 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000005 "A directive information entity that describes an intended process endpoint. When part of a plan specification the concretization is realized in a planned process in which the bearer tries to effect the world so that the process endpoint is achieved."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000005 "2009-03-16: original definition when imported from OBI read: \"objective is an non realizable information entity which can serve as that  proper part of a plan towards which the realization of the plan is directed.\""@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000005 "2014-03-31: In the example of usage (\"In the protocol of a ChIP assay the objective specification says to identify protein and DNA interaction\") there is a protocol which is the ChIP assay protocol. In addition to being concretized on paper, the protocol can be concretized as a realizable entity, such as a plan that inheres in a person. The objective specification is the part that says that some protein and DNA interactions are identified. This is a specification of a process endpoint: the boundary in the process before which they are not identified and after which they are. During the realization of the plan, the goal is to get to the point of having the interactions, and participants in the realization of the plan try to do that."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000005 "Answers the question, why did you do this experiment?"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000005 "PERSON: Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000005 "PERSON: Barry Smith"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000005 "PERSON: Bjoern Peters"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000005 "PERSON: Jennifer Fostel"@en)
AnnotationAssertion(obo:IAO_0000118 obo:IAO_0000005 "goal specification"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000005 "OBI Plan and Planned Process/Roles Branch"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000005 "OBI_0000217"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000005 "objective specification"@en)
SubClassOf(obo:IAO_0000005 obo:IAO_0000033)

# Class: obo:IAO_0000007 (action specification)

AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000007 "Pour the contents of flask 1 into flask 2"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000007 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000007 "A directive information entity that describes an action the bearer will take."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000007 "Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000007 "OBI Plan and Planned Process branch"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000007 "action specification"@en)
SubClassOf(obo:IAO_0000007 obo:IAO_0000033)

# Class: obo:IAO_0000027 (data item)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000027 "data item"@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000027 "Data items include counts of things, analyte concentrations, and statistical summaries."@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000027 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000027 "An information content entity that is intended to be a truthful statement about something (modulo, e.g., measurement precision or other systematic errors) and is constructed/acquired by a method which reliably tends to produce (approximately) truthful statements."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000027 "2/2/2009 Alan and Bjoern discussing FACS run output data. This is a data item because it is about the cell population. Each element records an event and is typically further composed a set of measurment data items that record the fluorescent intensity stimulated by one of the lasers."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000027 "2009-03-16: data item deliberatly ambiguous: we merged data set and datum to be one entity, not knowing how to define singular versus plural. So data item is more general than datum."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000027 "2009-03-16: removed datum as alternative term as datum specifically refers to singular form, and is thus not an exact synonym."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000027 "2014-03-31: See discussion at http://odontomachus.wordpress.com/2014/03/30/aboutness-objects-propositions/")
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000027 "JAR: datum     -- well, this will be very tricky to define, but maybe some 
information-like stuff that might be put into a computer and that is 
meant, by someone, to denote and/or to be interpreted by some 
process... I would include lists, tables, sentences... I think I might 
defer to Barry, or to Brian Cantwell Smith

JAR: A data item is an approximately justified approximately true approximate belief"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000027 "PERSON: Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000027 "PERSON: Chris Stoeckert"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000027 "PERSON: Jonathan Rees"@en)
AnnotationAssertion(obo:IAO_0000118 obo:IAO_0000027 "data"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000027 "data item"@en)
SubClassOf(obo:IAO_0000027 obo:IAO_0000030)

# Class: obo:IAO_0000028 (symbol)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000028 "symbol"@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000028 "a serial number such as \"12324X\""@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000028 "a stop sign"@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000028 "a written proper name such as \"OBI\""@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000028 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000028 "An information content entity that is a mark(s) or character(s) used as a conventional representation of another entity."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000028 "20091104, MC: this needs work and will most probably change"@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000028 "2014-03-31: We would like to have a deeper analysis of 'mark' and 'sign' in the future (see https://github.com/information-artifact-ontology/IAO/issues/154)."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000028 "PERSON: James A. Overton"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000028 "PERSON: Jonathan Rees"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000028 "based on Oxford English Dictionary"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000028 "symbol"@en)
SubClassOf(obo:IAO_0000028 obo:IAO_0000030)

# Class: obo:IAO_0000030 (information content entity)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000030 "information content entity"@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000030 "Examples of information content entites include journal articles, data, graphical layouts, and graphs."@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000030 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000030 "A generically dependent continuant that is about some thing."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000030 "2014-03-10: The use of \"thing\" is intended to be general enough to include universals and configurations (see https://groups.google.com/d/msg/information-ontology/GBxvYZCk1oc/-L6B5fSBBTQJ)."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000030 "information_content_entity 'is_encoded_in' some digital_entity in obi before split (040907). information_content_entity 'is_encoded_in' some physical_document in obi before split (040907).

Previous. An information content entity is a non-realizable information entity that 'is encoded in' some digital or physical entity."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000030 "PERSON: Chris Stoeckert"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000030 "OBI_0000142"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000030 "information content entity"@en)
SubClassOf(obo:IAO_0000030 obo:BFO_0000031)
SubClassOf(obo:IAO_0000030 ObjectSomeValuesFrom(obo:IAO_0000136 obo:BFO_0000001))

# Class: obo:IAO_0000033 (directive information entity)

AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000033 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000033 "An information content entity whose concretizations indicate to their bearer how to realize them in a process."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000033 "2009-03-16: provenance: a term realizable information entity was proposed for OBI (OBI_0000337) , edited by the PlanAndPlannedProcess branch. Original definition was  \"is the specification of a process that can be concretized and realized by an actor\" with alternative term  \"instruction\".It has been subsequently moved to IAO where the objective for which the original term was defined was satisfied with the definitionof this, different, term."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000033 "2013-05-30 Alan Ruttenberg: What differentiates a directive information entity from an information concretization is that it can have concretizations that are either qualities or realizable entities. The concretizations that are realizable entities are created when an individual chooses to take up the direction, i.e. has the intention to (try to) realize it."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000033 "8/6/2009 Alan Ruttenberg: Changed label from \"information entity about a realizable\" after discussions at ICBO"@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000033 "Werner pushed back on calling it realizable information entity as it isn't realizable. However this name isn't right either. An example would be a recipe. The realizable entity would be a plan, but the information entity isn't about the plan, it, once concretized, *is* the plan. -Alan"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000033 "PERSON: Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000033 "PERSON: Bjoern Peters"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000033 "directive information entity"@en)
SubClassOf(obo:IAO_0000033 obo:IAO_0000030)
SubClassOf(obo:IAO_0000033 ObjectSomeValuesFrom(obo:IAO_0000136 obo:BFO_0000017))

# Class: obo:IAO_0000104 (plan specification)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000104 "plan specification"@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000104 "PMID: 18323827.Nat Med. 2008 Mar;14(3):226.New plan proposed to help resolve conflicting medical advice."@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000104 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000104 "A directive information entity with action specifications and objective specifications as parts, and that may be concretized as a realizable entity that, if realized, is realized in a process in which the bearer tries to achieve the objectives by taking the actions specified."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000104 "2009-03-16: provenance: a term a plan was proposed for OBI (OBI_0000344) , edited by the PlanAndPlannedProcess branch. Original definition was \" a plan is a specification of a process that is realized by an actor to achieve the objective specified as part of the plan\". It has been subsequently moved to IAO where the objective for which the original term was defined was satisfied with the definitionof this, different, term."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000104 "2014-03-31: A plan specification can have other parts, such as conditional specifications."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000104 "2022-01-16 Updated definition to that proposed by Clint Dowloand, IAO Issue 231."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000104 "Alternative previous definition: a plan is a set of instructions that specify how an objective should be achieved"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000104 "Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000104 "Clint Dowland"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000104 "OBI Plan and Planned Process branch"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000104 "OBI_0000344"@en)
AnnotationAssertion(rdfs:comment obo:IAO_0000104 "2/3/2009 Comment from OBI review.

Action specification not well enough specified.
Conditional specification not well enough specified.
Question whether all plan specifications have objective specifications.

Request that IAO either clarify these or change definitions not to use them"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000104 "plan specification"@en)
AnnotationAssertion(rdfs:seeAlso obo:IAO_0000104 "https://github.com/information-artifact-ontology/IAO/issues/231#issuecomment-1010455131"@en)
SubClassOf(obo:IAO_0000104 obo:IAO_0000033)
SubClassOf(obo:IAO_0000104 ObjectSomeValuesFrom(obo:BFO_0000051 obo:IAO_0000005))
SubClassOf(obo:IAO_0000104 ObjectSomeValuesFrom(obo:BFO_0000051 obo:IAO_0000007))

# Class: obo:IAO_0000109 (measurement datum)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000109 "measurement datum"@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000109 "Examples of measurement data are the recoding of the weight of a mouse as {40,mass,\"grams\"}, the recording of an observation of the behavior of the mouse {,process,\"agitated\"}, the recording of the expression level of a gene as measured through the process of microarray experiment {3.4,luminosity,}."@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000109 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000109 "A measurement datum is an information content entity that is a recording of the output of a measurement such as produced by a device."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000109 "2/2/2009 is_specified_output of some assay?"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000109 "person:Chris Stoeckert"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000109 "OBI_0000305"@en)
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000109 "group:OBI"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000109 "measurement datum"@en)
SubClassOf(obo:IAO_0000109 obo:IAO_0000027)

# Class: obo:IAO_0000300 (textual entity)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000300 "textual entity"@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000300 "Words, sentences, paragraphs, and the written (non-figure) parts of publications are all textual entities"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000300 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000300 "A textual entity is a part of a manifestation (FRBR sense), a generically dependent continuant whose concretizations are patterns of glyphs intended to be interpreted as words, formulas, etc."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000300 "AR, (IAO call 2009-09-01): a document as a whole is not typically a textual entity, because it has pictures in it - rather there are parts of it that are textual entities. Examples: The title, paragraph 2 sentence 7, etc."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000300 "MC, 2009-09-14 (following IAO call 2009-09-01): textual entities live at the FRBR (http://en.wikipedia.org/wiki/Functional_Requirements_for_Bibliographic_Records) manifestation level. Everything is significant: line break, pdf and html versions of same document are different textual entities."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000300 "PERSON: Lawrence Hunter"@en)
AnnotationAssertion(obo:IAO_0000118 obo:IAO_0000300 "text"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000300 "textual entity"@en)
SubClassOf(obo:IAO_0000300 obo:IAO_0000030)

# Class: obo:IAO_0000310 (document)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0000310 "document"@en)
AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000310 "A journal article, patent application, laboratory notebook, or a book"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000310 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000310 "A collection of information content entities intended to be understood together as a whole"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000310 "PERSON: Lawrence Hunter"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000310 "document"@en)
SubClassOf(obo:IAO_0000310 obo:IAO_0000030)

# Class: obo:IAO_0000422 (postal address)

AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000422 obo:IAO_0000123)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000422 "A textual entity that is used as directive to deliver something to a person, or organization")
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000422 "2010-05-24 Alan Ruttenberg. Use label for the string representation. See issue https://github.com/information-artifact-ontology/IAO/issues/59")
AnnotationAssertion(rdfs:label obo:IAO_0000422 "postal address"@en)
SubClassOf(obo:IAO_0000422 obo:IAO_0000300)

# Class: obo:IAO_0000577 (centrally registered identifier symbol)

AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000577 "The sentence \"The article has Pubmed ID 12345.\" contains a CRID that has two parts: one part is the CRID symbol, which is '12345'; the other part denotes the CRID registry, which is Pubmed."@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000577 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000577 "A symbol that is part of a CRID and that is sufficient to look up a record from the CRID's registry."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000577 "PERSON: Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000577 "PERSON: Bill Hogan"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000577 "PERSON: Bjoern Peters"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000577 "PERSON: Melanie Courtot"@en)
AnnotationAssertion(obo:IAO_0000118 obo:IAO_0000577 "CRID symbol")
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000577 "Original proposal from Bjoern, discussions at IAO calls"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000577 "centrally registered identifier symbol"@en)
SubClassOf(obo:IAO_0000577 obo:IAO_0000028)
SubClassOf(obo:IAO_0000577 ObjectSomeValuesFrom(obo:BFO_0000050 obo:IAO_0000578))

# Class: obo:IAO_0000578 (centrally registered identifier)

AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000578 "The sentence \"The article has Pubmed ID 12345.\" contains a CRID that has two parts: one part is the CRID symbol, which is '12345'; the other part denotes the CRID registry, which is Pubmed."@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000578 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000578 "An information content entity that consists of a CRID symbol and additional information about the CRID registry to which it belongs."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000578 "2014-05-05: In defining this term we take no position on what the CRID denotes. In particular do not assume it denotes a *record* in the CRID registry (since the registry might not have 'records')."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000578 "Alan, IAO call 20101124: potentially the CRID denotes the instance it was associated with during creation."@en)
AnnotationAssertion(obo:IAO_0000116 obo:IAO_0000578 "Note, IAO call 20101124: URIs are not always CRID, as not centrally registered. We acknowledge that CRID is a subset of a larger identifier class, but this subset fulfills our current needs. OBI PURLs are CRID as they are registered with OCLC. UPCs (Universal Product Codes from AC Nielsen)are not CRID as they are not centrally registered."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000578 "PERSON: Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000578 "PERSON: Bill Hogan"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000578 "PERSON: Bjoern Peters"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000578 "PERSON: Melanie Courtot"@en)
AnnotationAssertion(obo:IAO_0000118 obo:IAO_0000578 "CRID")
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000578 "Original proposal from Bjoern, discussions at IAO calls"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000578 "centrally registered identifier"@en)
SubClassOf(obo:IAO_0000578 obo:IAO_0020000)
SubClassOf(obo:IAO_0000578 ObjectSomeValuesFrom(obo:BFO_0000051 obo:IAO_0000577))
SubClassOf(obo:IAO_0000578 ObjectSomeValuesFrom(obo:BFO_0000051 ObjectSomeValuesFrom(obo:IAO_0000219 obo:IAO_0000579)))

# Class: obo:IAO_0000579 (centrally registered identifier registry)

AnnotationAssertion(obo:IAO_0000112 obo:IAO_0000579 "PubMed is a CRID registry. It has a code set of PubMed identifiers associated with journal articles. "@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000579 obo:IAO_0000120)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000579 "A code set of CRID records, each consisting of a CRID symbol and additional information which was recorded in the code set through an assigning a centrally registered identifier process."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000579 "Justin Whorton"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000579 "PERSON: Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000579 "PERSON: Bill Hogan"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000579 "PERSON: Bjoern Peters"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000579 "PERSON: Melanie Courtot"@en)
AnnotationAssertion(obo:IAO_0000118 obo:IAO_0000579 "CRID registry")
AnnotationAssertion(obo:IAO_0000119 obo:IAO_0000579 "Original proposal from Bjoern, discussions at IAO calls"@en)
AnnotationAssertion(obo:IAO_0000233 obo:IAO_0000579 "https://github.com/information-artifact-ontology/IAO/issues/237"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000579 "centrally registered identifier registry"@en)
SubClassOf(obo:IAO_0000579 obo:IAO_0020020)

# Class: obo:IAO_0000646 (postal code)

AnnotationAssertion(obo:IAO_0000115 obo:IAO_0000646 "An identifier that denotes some postal delivery route, some aggregate of postal delivery routes or a geographical region and was created for the purpose of sorting and delivering mail."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0000646 "Mathias Brochhausen"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000646 "postal code"@en)
SubClassOf(obo:IAO_0000646 obo:IAO_0020000)

# Class: obo:IAO_0020000 (identifier)

AnnotationAssertion(obo:IAO_0000111 obo:IAO_0020000 "identifier"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IAO_0020000 "An information content entity that is the outcome of a dubbing process and is used to refer to one instance of entity shared by a group of people to refer to that individual entity."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0020000 "Justin Whorton"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0020000 "Mathias Brochhausen"@en)
AnnotationAssertion(obo:IAO_0000118 obo:IAO_0020000 "proper name"@en)
AnnotationAssertion(obo:IAO_0000233 obo:IAO_0020000 "https://github.com/information-artifact-ontology/IAO/issues/237"@en)
AnnotationAssertion(dc:creator obo:IAO_0020000 "Mathias Brochhausen")
AnnotationAssertion(rdfs:comment obo:IAO_0020000 "Sep 29, 2016: The current definition has been amended from the previous version: \"A proper name is an information content entity that is the outcome of a dubbing process and is used to refer to one instance of entity shared by a group of people to refer to that individual entity.\" to more accuratly reflect the necessary and sufficient condition on the class. (MB)"@en)
AnnotationAssertion(rdfs:label obo:IAO_0020000 "identifier"@en)
EquivalentClasses(obo:IAO_0020000 ObjectIntersectionOf(obo:IAO_0000030 ObjectSomeValuesFrom(obo:IAO_0000219 obo:BFO_0000001) ObjectSomeValuesFrom(obo:OBI_0000312 obo:IAO_0020010)))
SubClassOf(obo:IAO_0020000 obo:IAO_0000030)

# Class: obo:IAO_0020010 (identifier creating process)

AnnotationAssertion(obo:IAO_0000115 obo:IAO_0020010 "A planned process that provides a reference to an individual entity shared by a group of subscribers to refer to that individual entity."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0020010 "Justin Whorton"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0020010 "Mathias Brochhausen"@en)
AnnotationAssertion(obo:IAO_0000118 obo:IAO_0020010 "dubbing process"@en)
AnnotationAssertion(obo:IAO_0000118 obo:IAO_0020010 "naming"@en)
AnnotationAssertion(obo:IAO_0000233 obo:IAO_0020010 "https://github.com/information-artifact-ontology/IAO/issues/237"@en)
AnnotationAssertion(dc:creator obo:IAO_0020010 "Mathias Brochhausen")
AnnotationAssertion(rdfs:label obo:IAO_0020010 "identifier creating process"@en)
EquivalentClasses(obo:IAO_0020010 ObjectIntersectionOf(obo:OBI_0000011 ObjectSomeValuesFrom(obo:OBI_0000299 obo:IAO_0020000)))
SubClassOf(obo:IAO_0020010 obo:OBI_0000011)

# Class: obo:IAO_0020020 (code set)

AnnotationAssertion(obo:IAO_0000115 obo:IAO_0020020 "An information content entity that is a collection of other information content entities that has been created to identify or annotate things in a specified domain, and where the intention of its creators is that the collection has a one-to-one correspondence with those things."@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0020020 "Alan Ruttenberg"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0020020 "Justin Whorton"@en)
AnnotationAssertion(obo:IAO_0000117 obo:IAO_0020020 "Mathias Brochhausen"@en)
AnnotationAssertion(obo:IAO_0000118 obo:IAO_0020020 "code map"@en)
AnnotationAssertion(obo:IAO_0000118 obo:IAO_0020020 "code system"@en)
AnnotationAssertion(obo:IAO_0000118 obo:IAO_0020020 "codeset"@en)
AnnotationAssertion(obo:IAO_0000118 obo:IAO_0020020 "coding system"@en)
AnnotationAssertion(obo:IAO_0000118 obo:IAO_0020020 "controlled vocabulary"@en)
AnnotationAssertion(obo:IAO_0000233 obo:IAO_0020020 "https://github.com/information-artifact-ontology/IAO/issues/237"@en)
AnnotationAssertion(dc:contributor obo:IAO_0020020 "Alan Ruttenberg")
AnnotationAssertion(dc:contributor obo:IAO_0020020 "Clint Dowland")
AnnotationAssertion(dc:contributor obo:IAO_0020020 "Matt Diller")
AnnotationAssertion(dc:contributor obo:IAO_0020020 "Sarah Bost")
AnnotationAssertion(dc:contributor obo:IAO_0020020 "William R. Hogan")
AnnotationAssertion(rdfs:comment obo:IAO_0020020 "Code sets might include non-entities/things (e.g. missing thumbs)."@en)
AnnotationAssertion(rdfs:comment obo:IAO_0020020 "Does not imply absence vs. presence of any taxonomy."@en)
AnnotationAssertion(rdfs:comment obo:IAO_0020020 "Does not imply that aggregated entities denote particulars, universals, or defined classes (a.k.a. attributive collections) or even that they denote only one of these three types of entities."@en)
AnnotationAssertion(rdfs:comment obo:IAO_0020020 "Each aggregated entity is often (but not necessarily) associated with a text string—variously called a “description,” “name,” “title,” or “label”—that helps humans reach the target of denotation.

When there is no such string, it is almost always because the entities take the form of human language words. For example, a “sex” or “gender” code set could contain “MALE” and “FEMALE,” or even “M” and “F” (by convention, we understand what these mean)."@en)
AnnotationAssertion(rdfs:comment obo:IAO_0020020 "For National Drug Codes (NDCs) and similar code sets, there doesn’t even have to be a single, fully-concretized copy somewhere (for example, for NDCs there is no centralized database or repository where they all live as one instance of concretization of code set). The code set can be “distributively” concretized. This seems like an unusual exception, but it also likely applies to Universal Product Codes (UPCs) and their follow on Global Trade Item Numbers (GTINs)."@en)
AnnotationAssertion(rdfs:comment obo:IAO_0020020 "For each given domain, there can potentially exist multiple code sets. The multiplicity of code sets is partially due to the different specific purposes of those code sets."@en)
AnnotationAssertion(rdfs:comment obo:IAO_0020020 "Many code sets are created for a specific purpose in addition to merely identifying or annotating core ideas of a specified domain."@en)
AnnotationAssertion(rdfs:comment obo:IAO_0020020 "The information content entities do not denote each other."@en)
AnnotationAssertion(rdfs:label obo:IAO_0020020 "code set"@en)
SubClassOf(obo:IAO_0020020 obo:IAO_0000030)
SubClassOf(obo:IAO_0020020 ObjectSomeValuesFrom(obo:BFO_0000051 obo:IAO_0020000))

# Class: obo:IOIO_0000001 (human birth statement)

AnnotationAssertion(obo:IAO_0000112 obo:IOIO_0000001 "Connor, John, born on 28/2/1985

Connor, John, born on 28/2/1985, son of Connor, Sarah born on 13/11/1965"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IOIO_0000001 "A process temporally qualifying statement about the birth of a human including an identifier and a temporal information of the birth of this human."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000061 obo:IOIO_0000001 "A process temporally qualifying statement about the birth of a human including an identifier and a temporal information of the birth of this human."@en)
AnnotationAssertion(oboInOwl:inSubset obo:IOIO_0000001 OpenLHS-Core:OpenLHS-H)
AnnotationAssertion(rdfs:label obo:IOIO_0000001 "human birth statement"@en)
SubClassOf(obo:IOIO_0000001 obo:OpenLHS-Core_0000031)
SubClassOf(obo:IOIO_0000001 ObjectSomeValuesFrom(obo:RO_0002180 obo:IOIO_0000005))
SubClassOf(obo:IOIO_0000001 ObjectSomeValuesFrom(obo:RO_0002180 obo:IOIO_0000014))

# Class: obo:IOIO_0000002 (civil birth record)

AnnotationAssertion(obo:IAO_0000115 obo:IOIO_0000002 "A state sanctioned human birth statement."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000061 obo:IOIO_0000002 "A state sanctioned human birth statement."@en)
AnnotationAssertion(oboInOwl:inSubset obo:IOIO_0000002 OpenLHS-Core:OpenLHS-H)
AnnotationAssertion(rdfs:label obo:IOIO_0000002 "civil birth record"@en)
EquivalentClasses(obo:IOIO_0000002 ObjectIntersectionOf(obo:IOIO_0000001 obo:OpenLHS-Core_0000011))

# Class: obo:IOIO_0000003 (human death statement)

AnnotationAssertion(obo:IAO_0000112 obo:IOIO_0000003 "Reese, Kyle died in 1984"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IOIO_0000003 "A process temporally qualifying statement about the death of a human including an identifier and a temporal information of the death of this human."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000061 obo:IOIO_0000003 "A process temporally qualifying statement about the death of a human including an identifier and a temporal information of the death of this human."@en)
AnnotationAssertion(oboInOwl:inSubset obo:IOIO_0000003 OpenLHS-Core:OpenLHS-H)
AnnotationAssertion(rdfs:label obo:IOIO_0000003 "human death statement"@en)
SubClassOf(obo:IOIO_0000003 obo:OpenLHS-Core_0000031)
SubClassOf(obo:IOIO_0000003 ObjectSomeValuesFrom(obo:RO_0002180 obo:IOIO_0000006))
SubClassOf(obo:IOIO_0000003 ObjectSomeValuesFrom(obo:RO_0002180 obo:IOIO_0000014))

# Class: obo:IOIO_0000004 (civil death record)

AnnotationAssertion(obo:IAO_0000115 obo:IOIO_0000004 "A state sanctioned human death statement."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000061 obo:IOIO_0000004 "A state sanctioned human death statement."@en)
AnnotationAssertion(oboInOwl:inSubset obo:IOIO_0000004 OpenLHS-Core:OpenLHS-H)
AnnotationAssertion(rdfs:label obo:IOIO_0000004 "civil death record"@en)
EquivalentClasses(obo:IOIO_0000004 ObjectIntersectionOf(obo:IOIO_0000003 obo:OpenLHS-Core_0000011))

# Class: obo:IOIO_0000005 (human birth temporal information)

AnnotationAssertion(obo:IAO_0000115 obo:IOIO_0000005 "A temporal information that is a component of a human birth statement that states that the temporal region denoted by this temporal information overlaps with the temporal region occupied by the birth of this human."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000062 obo:IOIO_0000005 "A temporal information that is a component of a human birth statement that states that the temporal region denoted by this temporal information overlaps with the temporal region occupied by the birth of this human."@en)
AnnotationAssertion(rdfs:label obo:IOIO_0000005 "human birth temporal information"@en)
SubClassOf(obo:IOIO_0000005 obo:OpenLHS-Core_0000065)
SubClassOf(obo:IOIO_0000005 ObjectSomeValuesFrom(obo:OpenLHS-Core_0000070 obo:IOIO_0000001))

# Class: obo:IOIO_0000006 (human death temporal information)

AnnotationAssertion(obo:IAO_0000115 obo:IOIO_0000006 "A temporal information that is a component of a human death statement that states that the temporal region denoted by this temporal information overlaps with the temporal region occupied by the death of this human."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000062 obo:IOIO_0000006 "A temporal information that is a component of a human death statement that states that the temporal region denoted by this temporal information overlaps with the temporal region occupied by the death of this human."@en)
AnnotationAssertion(rdfs:label obo:IOIO_0000006 "human death temporal information"@en)
SubClassOf(obo:IOIO_0000006 obo:OpenLHS-Core_0000065)
SubClassOf(obo:IOIO_0000006 ObjectSomeValuesFrom(obo:OpenLHS-Core_0000070 obo:IOIO_0000003))

# Class: obo:IOIO_0000010 (biological sex information content entity)

AnnotationAssertion(obo:IAO_0000115 obo:IOIO_0000010 "An information content entity that denotes the biological sex of an organism."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000062 obo:IOIO_0000010 "An information content entity that denotes the biological sex of an organism."@en)
AnnotationAssertion(rdfs:label obo:IOIO_0000010 "biological sex information content entity"@en)
SubClassOf(obo:IOIO_0000010 obo:IAO_0000030)

# Class: obo:IOIO_0000011 (human biological sex information content entity)

AnnotationAssertion(obo:IAO_0000115 obo:IOIO_0000011 "A biological sex information content entity that denotes the biological sex of a human."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000062 obo:IOIO_0000011 "A biological sex information content entity that denotes the biological sex of a human."@en)
AnnotationAssertion(oboInOwl:inSubset obo:IOIO_0000011 OpenLHS-Core:OpenLHS-H)
AnnotationAssertion(rdfs:label obo:IOIO_0000011 "human biological sex information content entity"@en)
SubClassOf(obo:IOIO_0000011 obo:IOIO_0000010)

# Class: obo:IOIO_0000012 (human biological sex or gender identity information content entity)

AnnotationAssertion(obo:IAO_0000115 obo:IOIO_0000012 "An information content entity that denotes a biological sex or a gender identity of a human."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000062 obo:IOIO_0000012 "An information content entity that denotes a biological sex or a gender identity of a human."@en)
AnnotationAssertion(oboInOwl:inSubset obo:IOIO_0000012 OpenLHS-Core:OpenLHS-H)
AnnotationAssertion(rdfs:label obo:IOIO_0000012 "human biological sex or gender identity information content entity"@en)
EquivalentClasses(obo:IOIO_0000012 ObjectUnionOf(obo:IOIO_0000011 obo:OMRSE_00000209))
SubClassOf(obo:IOIO_0000012 obo:IAO_0000030)

# Class: obo:IOIO_0000013 (organism identifier)

AnnotationAssertion(obo:IAO_0000112 obo:IOIO_0000013 "'Goose' (the name of a cat)"@en)
AnnotationAssertion(obo:IAO_0000115 obo:IOIO_0000013 "An identifier that denotes a particular organism."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000062 obo:IOIO_0000013 "An identifier that denotes a particular organism."@en)
AnnotationAssertion(rdfs:label obo:IOIO_0000013 "organism identifier"@en)
EquivalentClasses(obo:IOIO_0000013 ObjectIntersectionOf(obo:IAO_0020000 ObjectExactCardinality(1 obo:IAO_0000219 obo:OBI_0100026)))

# Class: obo:IOIO_0000014 (human identifier)

AnnotationAssertion(obo:IAO_0000115 obo:IOIO_0000014 "An organism identifier that denotes a particular human."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000062 obo:IOIO_0000014 "An organism identifier that denotes a particular human."@en)
AnnotationAssertion(oboInOwl:inSubset obo:IOIO_0000014 OpenLHS-Core:OpenLHS-H)
AnnotationAssertion(rdfs:label obo:IOIO_0000014 "human identifier"@en)
EquivalentClasses(obo:IOIO_0000014 ObjectIntersectionOf(obo:IOIO_0000013 ObjectExactCardinality(1 obo:IAO_0000219 obo:NCBITaxon_9606)))
SubClassOf(obo:IOIO_0000014 DataExactCardinality(1 obo:Ontorel-Core_0000002))

# Class: obo:IOIO_0000015 (human biological sex statement)

AnnotationAssertion(obo:IAO_0000115 obo:IOIO_0000015 "A pragmatically accepted statement stating the biological sex of a human."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000062 obo:IOIO_0000015 "A pragmatically accepted statement stating the biological sex of a human."@en)
AnnotationAssertion(oboInOwl:inSubset obo:IOIO_0000015 OpenLHS-Core:OpenLHS-H)
AnnotationAssertion(rdfs:label obo:IOIO_0000015 "human biological sex statement"@en)
SubClassOf(obo:IOIO_0000015 obo:OpenLHS-Core_0000010)
SubClassOf(obo:IOIO_0000015 ObjectSomeValuesFrom(obo:RO_0002180 obo:IOIO_0000011))
SubClassOf(obo:IOIO_0000015 ObjectSomeValuesFrom(obo:RO_0002180 obo:IOIO_0000014))

# Class: obo:IOIO_0000020 (human birth date)

AnnotationAssertion(obo:IAO_0000115 obo:IOIO_0000020 "A human birth temporal information that denotes a time interval of one day as defined in a calendar accepted in a human society."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000062 obo:IOIO_0000020 "A human birth temporal information that denotes a time interval of one day as defined in a calendar accepted in a human society."@en)
AnnotationAssertion(rdfs:label obo:IOIO_0000020 "human birth date"@en)
SubClassOf(obo:IOIO_0000020 obo:IOIO_0000005)

# Class: obo:IOIO_0000021 (human death date)

AnnotationAssertion(obo:IAO_0000115 obo:IOIO_0000021 "A human death temporal information that denotes a time interval of one day as defined in a calendar accepted in a human society."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000062 obo:IOIO_0000021 "A human death temporal information that denotes a time interval of one day as defined in a calendar accepted in a human society."@en)
AnnotationAssertion(rdfs:label obo:IOIO_0000021 "human death date"@en)
SubClassOf(obo:IOIO_0000021 obo:IOIO_0000006)

# Class: obo:IOIO_0000022 (primary residence statement)

AnnotationAssertion(obo:IAO_0000115 obo:IOIO_0000022 "A pragmatically accepted statement that states characteristics of the primary residence of an individual at a given moment in time."@en)
AnnotationAssertion(rdfs:label obo:IOIO_0000022 "primary residence statement"@en)
SubClassOf(obo:IOIO_0000022 obo:OpenLHS-Core_0000010)

# Class: obo:IOIO_0000023 (living environment type)

AnnotationAssertion(obo:IAO_0000115 obo:IOIO_0000023 "An information content entity that aims at representing a type of living environment applicable to a primary residence."@en)
AnnotationAssertion(rdfs:label obo:IOIO_0000023 "living environment type"@en)
SubClassOf(obo:IOIO_0000023 obo:IAO_0000030)

# Class: obo:IOIO_0000030 (human age at a specified temporal region)

AnnotationAssertion(obo:IAO_0000115 obo:IOIO_0000030 "An information content entity that is about the size of the 1-D temporal region that overlaps with both the temporal region denoted by a human birth temporal information and the specified temporal region."@en)
AnnotationAssertion(rdfs:label obo:IOIO_0000030 "human age at a specified temporal region"@en)
SubClassOf(obo:IOIO_0000030 obo:IAO_0000030)

# Class: obo:IOIO_0000031 (human age at a specified temporal region statement)

AnnotationAssertion(obo:IAO_0000115 obo:IOIO_0000031 "A  statement that includes an human identifier and the human age at a specified temporal region of the human denoted by the human identifier."@en)
AnnotationAssertion(rdfs:label obo:IOIO_0000031 "human age at a specified temporal region statement"@en)
SubClassOf(obo:IOIO_0000031 obo:SEPIO_0000174)
SubClassOf(obo:IOIO_0000031 ObjectSomeValuesFrom(obo:RO_0002180 obo:IOIO_0000014))
SubClassOf(obo:IOIO_0000031 ObjectSomeValuesFrom(obo:RO_0002180 obo:IOIO_0000030))

# Class: obo:NCBITaxon_10239 (Viruses)

AnnotationAssertion(obo:IAO_0000111 obo:NCBITaxon_10239 "Viruses")
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_10239 obo:ncbitaxon.owl)
AnnotationAssertion(rdfs:label obo:NCBITaxon_10239 "Viruses")
SubClassOf(obo:NCBITaxon_10239 obo:OBI_0100026)

# Class: obo:NCBITaxon_2 (Bacteria)

AnnotationAssertion(obo:IAO_0000111 obo:NCBITaxon_2 "Bacteria")
AnnotationAssertion(obo:IAO_0000118 obo:NCBITaxon_2 "eubacteria")
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_2 obo:ncbitaxon.owl)
AnnotationAssertion(rdfs:label obo:NCBITaxon_2 "Bacteria")
SubClassOf(obo:NCBITaxon_2 obo:OBI_0100026)

# Class: obo:NCBITaxon_2157 (Archaea)

AnnotationAssertion(obo:IAO_0000111 obo:NCBITaxon_2157 "Archaea")
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_2157 obo:ncbitaxon.owl)
AnnotationAssertion(rdfs:label obo:NCBITaxon_2157 "Archaea")
SubClassOf(obo:NCBITaxon_2157 obo:OBI_0100026)

# Class: obo:NCBITaxon_2759 (Eukaryota)

AnnotationAssertion(obo:IAO_0000111 obo:NCBITaxon_2759 "Eukaryota")
AnnotationAssertion(obo:IAO_0000118 obo:NCBITaxon_2759 "eucaryotes")
AnnotationAssertion(obo:IAO_0000118 obo:NCBITaxon_2759 "eukaryotes")
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_2759 obo:ncbitaxon.owl)
AnnotationAssertion(rdfs:label obo:NCBITaxon_2759 "Eukaryota")
SubClassOf(obo:NCBITaxon_2759 obo:OBI_0100026)

# Class: obo:NCBITaxon_9606 (Homo sapiens)

AnnotationAssertion(obo:IAO_0000111 obo:NCBITaxon_9606 "Homo sapiens")
AnnotationAssertion(obo:IAO_0000118 obo:NCBITaxon_9606 "human")
AnnotationAssertion(obo:IAO_0000118 obo:NCBITaxon_9606 "human being")
AnnotationAssertion(obo:IAO_0000412 obo:NCBITaxon_9606 obo:ncbitaxon.owl)
AnnotationAssertion(oboInOwl:inSubset obo:NCBITaxon_9606 OpenLHS-Core:OpenLHS-H)
AnnotationAssertion(rdfs:label obo:NCBITaxon_9606 "Homo sapiens")
SubClassOf(obo:NCBITaxon_9606 obo:NCBITaxon_2759)

# Class: obo:OBI_0000011 (planned process)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000011 "planned process")
AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000011 "planned process"@en)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000011 "Injecting mice with a vaccine in order to test its efficacy")
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000011 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000011 "A process that realizes a plan which is the concretization of a plan specification."@en)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0000011 "'Plan' includes a future direction sense. That can be problematic if plans are changed during their execution. There are however implicit contingencies for protocols that an agent has in his mind that can be considered part of the plan, even if the agent didn't have them in mind before. Therefore, a planned process can diverge from what the agent would have said the plan was before executing it, by adjusting to problems encountered during execution (e.g. choosing another reagent with equivalent properties, if the originally planned one has run out.)")
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0000011 "We are only considering successfully completed planned processes. A plan may be modified, and details added during execution. For a given planned process, the associated realized plan specification is the one encompassing all changes made during execution. This means that all processes in which an agent acts towards achieving some 
objectives is a planned process.")
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000011 "Bjoern Peters")
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000011 "branch derived")
AnnotationAssertion(obo:IAO_0000232 obo:OBI_0000011 "6/11/9: Edited at workshop. Used to include: is initiated by an agent")
AnnotationAssertion(obo:IAO_0000232 obo:OBI_0000011 "This class merges the previously separated objective driven process and planned process, as they the separation proved hard to maintain. (1/22/09, branch call)"@en)
AnnotationAssertion(obo:IAO_0000412 obo:OBI_0000011 obo:obi.owl)
AnnotationAssertion(rdfs:label obo:OBI_0000011 "planned process"@en)
EquivalentClasses(obo:OBI_0000011 ObjectSomeValuesFrom(obo:BFO_0000055 ObjectSomeValuesFrom(obo:RO_0000059 obo:IAO_0000104)))
SubClassOf(obo:OBI_0000011 obo:BFO_0000015)

# Class: obo:OBI_0000245 (organization)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000245 "organization"@en)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000245 "PMID: 16353909.AAPS J. 2005 Sep 22;7(2):E274-80. Review. The joint food and agriculture organization of the United Nations/World Health Organization Expert Committee on Food Additives and its role in the evaluation of the safety of veterinary drug residues in foods."@en)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000245 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000245 "An entity that can bear roles, has members, and has a set of organization rules. Members of organizations are either organizations themselves or individual people. Members can bear specific organization member roles that are determined in the organization rules. The organization rules also determine how decisions are made on behalf of the organization by the organization members."@en)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0000245 "BP: The definition summarizes long email discussions on the OBI developer, roles, biomaterial and denrie branches. It leaves open if an organization is a material entity or a dependent continuant, as no consensus was reached on that.  The current placement as material is therefore temporary, in order to move forward with development. Here is the entire email summary, on which the definition is based:

1) there are organization_member_roles (president, treasurer, branch
editor), with individual persons as bearers

2) there are organization_roles (employer, owner, vendor, patent holder)

3) an organization has a charter / rules / bylaws, which specify what roles
there are, how they should be realized, and how to modify the
charter/rules/bylaws themselves.

It is debatable what the organization itself is (some kind of dependent
continuant or an aggregate of people). This also determines who/what the
bearer of organization_roles' are. My personal favorite is still to define
organization as a kind of 'legal entity', but thinking it through leads to
all kinds of questions that are clearly outside the scope of OBI.

Interestingly enough, it does not seem to matter much where we place
organization itself, as long as we can subclass it (University, Corporation,
Government Agency, Hospital), instantiate it (Affymetrix, NCBI, NIH, ISO,
W3C, University of Oklahoma), and have it play roles.

This leads to my proposal: We define organization through the statements 1 -
3 above, but without an 'is a' statement for now. We can leave it in its
current place in the is_a hierarchy (material entity) or move it up to
'continuant'. We leave further clarifications to BFO, and close this issue
for now."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000245 "PERSON: Alan Ruttenberg")
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000245 "PERSON: Bjoern Peters")
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000245 "PERSON: Philippe Rocca-Serra")
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000245 "PERSON: Susanna Sansone")
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000245 "GROUP: OBI")
AnnotationAssertion(rdfs:label obo:OBI_0000245 "organization"@en)
SubClassOf(obo:OBI_0000245 obo:BFO_0000040)

# Class: obo:OBI_0000260 (plan)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0000260 "plan"@en)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0000260 "The plan of researcher X to perform an experiment according to a protocol.")
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0000260 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0000260 "A plan is a realizable entity that is the inheres in a bearer who is committed to realizing it as a planned process."@en)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0000260 "This class is included to make clear how the plan specification, the plan, and the planned process relate. OBI will however only subclass and work under the 'plan specification', and 'planned process' class, as we want to avoid to get deep into discussions of 'intend' etc.")
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0000260 "AR, BP, JM, MC, PRS"@en)
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0000260 "branch derived"@en)
AnnotationAssertion(rdfs:label obo:OBI_0000260 "plan"@en)
SubClassOf(obo:OBI_0000260 obo:BFO_0000017)

# Class: obo:OBI_0100026 (organism)

AnnotationAssertion(obo:IAO_0000111 obo:OBI_0100026 "organism"@en)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0100026 "animal"@en)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0100026 "fungus"@en)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0100026 "plant"@en)
AnnotationAssertion(obo:IAO_0000112 obo:OBI_0100026 "virus"@en)
AnnotationAssertion(obo:IAO_0000114 obo:OBI_0100026 obo:IAO_0000122)
AnnotationAssertion(obo:IAO_0000115 obo:OBI_0100026 "A material entity that is an individual living system, such as animal, plant, bacteria or virus, that is capable of replicating or reproducing, growth and maintenance in the right environment. An organism may be unicellular or made up, like humans, of many billions of cells divided into specialized tissues and organs."@en)
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0100026 "10/21/09: This is a placeholder term, that should ideally be imported from the NCBI taxonomy, but the high level hierarchy there does not suit our needs (includes plasmids and 'other organisms')")
AnnotationAssertion(obo:IAO_0000116 obo:OBI_0100026 "13-02-2009:
OBI doesn't take position as to  when an organism starts or ends being an organism - e.g. sperm, foetus.
This issue is outside the scope of OBI.")
AnnotationAssertion(obo:IAO_0000117 obo:OBI_0100026 "GROUP: OBI Biomaterial Branch")
AnnotationAssertion(obo:IAO_0000119 obo:OBI_0100026 "WEB: http://en.wikipedia.org/wiki/Organism"@en)
AnnotationAssertion(rdfs:label obo:OBI_0100026 "organism"@en)
EquivalentClasses(obo:OBI_0100026 ObjectUnionOf(obo:NCBITaxon_10239 obo:NCBITaxon_2 obo:NCBITaxon_2157 obo:NCBITaxon_2759))
SubClassOf(obo:OBI_0100026 obo:BFO_0000040)

# Class: obo:OGMS_0000020 (symptom)

AnnotationAssertion(obo:IAO_0000115 obo:OGMS_0000020 "A process experienced by the patient, which can only be experienced by the patient, that is hypothesized to be clinically relevant."@en)
AnnotationAssertion(obo:IAO_0000116 obo:OGMS_0000020 "note: defined class")
AnnotationAssertion(obo:IAO_0000119 obo:OGMS_0000020 "http://ontology.buffalo.edu/medo/Disease_and_Diagnosis.pdf")
AnnotationAssertion(obo:IAO_0000232 obo:OGMS_0000020 "creation date: 2010-11-18T11:02:10Z
Updated: 2020-07-06")
AnnotationAssertion(rdfs:label obo:OGMS_0000020 "symptom")
SubClassOf(obo:OGMS_0000020 obo:BFO_0000015)

# Class: obo:OGMS_0000031 (disease)

AnnotationAssertion(obo:IAO_0000115 obo:OGMS_0000031 "A disposition (i) to undergo pathological processes that (ii) exists in an organism because of one or more disorders in that organism."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OGMS_0000031 "Albert Goldfain")
AnnotationAssertion(obo:IAO_0000119 obo:OGMS_0000031 "http://ontology.buffalo.edu/medo/Disease_and_Diagnosis.pdf")
AnnotationAssertion(obo:IAO_0000232 obo:OGMS_0000031 "creation date: 2009-06-23T11:21:20Z")
AnnotationAssertion(rdfs:label obo:OGMS_0000031 "disease")
SubClassOf(obo:OGMS_0000031 obo:BFO_0000016)

# Class: obo:OGMS_0000045 (disorder)

AnnotationAssertion(obo:IAO_0000115 obo:OGMS_0000045 "A material entity which is clinically abnormal and part of an extended organism. Disorders are the physical basis of disease."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OGMS_0000045 "Albert Goldfain")
AnnotationAssertion(obo:IAO_0000119 obo:OGMS_0000045 "http://ontology.buffalo.edu/medo/Disease_and_Diagnosis.pdf")
AnnotationAssertion(obo:IAO_0000232 obo:OGMS_0000045 "creation date: 2009-06-23T11:39:44Z")
AnnotationAssertion(rdfs:label obo:OGMS_0000045 "disorder")
SubClassOf(obo:OGMS_0000045 obo:BFO_0000040)

# Class: obo:OGMS_0000060 (bodily process)

AnnotationAssertion(obo:IAO_0000117 obo:OGMS_0000060 "Albert Goldfain")
AnnotationAssertion(obo:IAO_0000232 obo:OGMS_0000060 "creation date: 2009-06-23T11:53:49Z")
AnnotationAssertion(rdfs:label obo:OGMS_0000060 "bodily process")
SubClassOf(obo:OGMS_0000060 obo:BFO_0000015)

# Class: obo:OGMS_0000061 (pathological bodily process)

AnnotationAssertion(obo:IAO_0000115 obo:OGMS_0000061 "A bodily process that is clinically abnormal."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OGMS_0000061 "Albert Goldfain")
AnnotationAssertion(obo:IAO_0000119 obo:OGMS_0000061 "http://ontology.buffalo.edu/medo/Disease_and_Diagnosis.pdf")
AnnotationAssertion(obo:IAO_0000232 obo:OGMS_0000061 "creation date: 2009-06-23T11:54:29Z")
AnnotationAssertion(rdfs:label obo:OGMS_0000061 "pathological bodily process")
SubClassOf(obo:OGMS_0000061 obo:OGMS_0000060)

# Class: obo:OGMS_0000086 (syndrome)

AnnotationAssertion(obo:IAO_0000115 obo:OGMS_0000086 "A pattern of signs and symptoms that typically co-occur."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OGMS_0000086 "Albert Goldfain")
AnnotationAssertion(obo:IAO_0000119 obo:OGMS_0000086 "http://code.google.com/p/ogms/issues/detail?id=32")
AnnotationAssertion(obo:IAO_0000232 obo:OGMS_0000086 "creation date: 2009-11-24T04:51:11Z")
AnnotationAssertion(rdfs:label obo:OGMS_0000086 "syndrome")
SubClassOf(obo:OGMS_0000086 obo:BFO_0000019)

# Class: obo:OGMS_0000102 (injury)

AnnotationAssertion(obo:IAO_0000115 obo:OGMS_0000102 "A disorder that involves some structural damage that is immediately caused by a catastrophic external force."@en)
AnnotationAssertion(obo:IAO_0000116 obo:OGMS_0000102 "At the scale of organism (as opposed to the cellular scale or the population scale), an injury is typically the result of a catastrophic event. Consider the implications of making 'injury' a subtype of 'disorder'.

Note: Adopted subtype of disorder, and injury can occur at the scale of organism down to cellular level.")
AnnotationAssertion(obo:IAO_0000117 obo:OGMS_0000102 "Albert Goldfain
Sagar Jain")
AnnotationAssertion(obo:IAO_0000119 obo:OGMS_0000102 "http://groups.google.com/group/ogms-discuss/browse_thread/thread/ca0ad373f27774c5

OGMS call adoption- 16 SEPT 2015
https://docs.google.com/document/d/1iiV1-fTS7BUUSzDw3N_Afx42698YWf54-FOTY2NkAxo/edit")
AnnotationAssertion(obo:IAO_0000232 obo:OGMS_0000102 "creation date: 2011-09-20T09:57:44Z
edited date: 30 SEPT 2015")
AnnotationAssertion(rdfs:label obo:OGMS_0000102 "injury")
SubClassOf(obo:OGMS_0000102 obo:OGMS_0000045)

# Class: obo:OGMS_0000129 (physical sign)

AnnotationAssertion(obo:IAO_0000115 obo:OGMS_0000129 "An abnormal material entity that is part of a patient and hypothesized to be clinically relevant.")
AnnotationAssertion(obo:IAO_0000232 obo:OGMS_0000129 "Example: an abnormal growth, an inflammatory infiltrate, swollen tissue, distension")
AnnotationAssertion(rdfs:label obo:OGMS_0000129 "physical sign")
SubClassOf(obo:OGMS_0000129 obo:BFO_0000040)

# Class: obo:OGMS_0000141 (processual sign)

AnnotationAssertion(obo:IAO_0000115 obo:OGMS_0000141 "An abnormal processual entity occuring in a patient that is hypothesized to be clinically relevant.")
AnnotationAssertion(rdfs:label obo:OGMS_0000141 "processual sign")
SubClassOf(obo:OGMS_0000141 obo:BFO_0000015)

# Class: obo:OGMS_0000142 (qualitative sign)

AnnotationAssertion(obo:IAO_0000115 obo:OGMS_0000142 "An abnormal observable quality of a part of a patient that is hypothesized to be clinically relevant.")
AnnotationAssertion(obo:IAO_0000232 obo:OGMS_0000142 "Example: the color of a rash; the shape of a melanoma")
AnnotationAssertion(rdfs:label obo:OGMS_0000142 "qualitative sign")
SubClassOf(obo:OGMS_0000142 obo:BFO_0000019)

# Class: obo:OMRSE_00000061 (architectural structure)

AnnotationAssertion(obo:IAO_0000115 obo:OMRSE_00000061 "A material entity that is a human made strcuture with firm connection between its foundation and the ground."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OMRSE_00000061 "Mathias Brochhausen"@en)
AnnotationAssertion(obo:IAO_0000119 obo:OMRSE_00000061 "http://de.wikipedia.org/wiki/Bauwerk"@en)
AnnotationAssertion(rdfs:comment obo:OMRSE_00000061 "\"Building\" is a subclass of this. "@en)
AnnotationAssertion(rdfs:comment obo:OMRSE_00000061 "This type of entity is referred to as \"Bauwerk\" or \"Bauliche Anlage\"."@en)
AnnotationAssertion(rdfs:label obo:OMRSE_00000061 "architectural structure"@en)
SubClassOf(obo:OMRSE_00000061 obo:BFO_0000040)

# Class: obo:OMRSE_00000062 (facility)

AnnotationAssertion(obo:IAO_0000115 obo:OMRSE_00000062 "An architectural structure that bears some function."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OMRSE_00000062 "Mathias Brochhausen"@en)
AnnotationAssertion(rdfs:label obo:OMRSE_00000062 "facility"@en)
EquivalentClasses(obo:OMRSE_00000062 ObjectIntersectionOf(obo:OMRSE_00000061 ObjectSomeValuesFrom(obo:RO_0000053 obo:BFO_0000034)))
SubClassOf(obo:OMRSE_00000062 obo:OMRSE_00000061)
SubClassOf(Annotation(owl:versionInfo "09/09/2017") obo:OMRSE_00000062 ObjectSomeValuesFrom(obo:OMRSE_00000068 obo:OBI_0000245))
SubClassOf(obo:OMRSE_00000062 ObjectSomeValuesFrom(obo:RO_0000053 obo:BFO_0000034))

# Class: obo:OMRSE_00000204 (social identity information content entity)

AnnotationAssertion(obo:IAO_0000115 obo:OMRSE_00000204 "An information content entity that is intended to be a truthful statement about some person and whether that person identifies as some particular aspect of social identity—such as a gender, an ethnicity, a race, or a sexual orientation—where the sense of identifying may correspond to either (i) an aspect of one’s cognitive representation of oneself, (ii) how one prefers to be regarded by others within some social context, or (iii) how one chooses to present oneself to others within some social context."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OMRSE_00000204 "S. Clint Dowland"@en)
AnnotationAssertion(dc:contributor obo:OMRSE_00000204 "Amanda Hicks"@en)
AnnotationAssertion(dc:contributor obo:OMRSE_00000204 "Mathias Brochhausen"@en)
AnnotationAssertion(dc:contributor obo:OMRSE_00000204 "Matthew Diller"@en)
AnnotationAssertion(dc:contributor obo:OMRSE_00000204 "Sarah Bost"@en)
AnnotationAssertion(dc:contributor obo:OMRSE_00000204 "William R. Hogan"@en)
AnnotationAssertion(rdfs:comment obo:OMRSE_00000204 "We include (i)-(iii) to acknowledge that there are different senses of \"identify\" that are relevant here, and that we may not always be sure which sense the person concretizing the social identity information content entity intended. While (i) concerns how one thinks of oneself, (ii) and (iii) are more focused on one's interactions with others. Importantly, some choose not to share with others how they identify in the sense of (i). For example, one can consider oneself to be some certain gender without either wanting others to know or choosing to present oneself in a corresponding way. We distinguish (ii) and (iii) because one can prefer to be regarded some certain way without attempting to present oneself in any corresponding way."@en)
AnnotationAssertion(rdfs:label obo:OMRSE_00000204 "social identity information content entity"@en)
SubClassOf(obo:OMRSE_00000204 obo:IAO_0000030)

# Class: obo:OMRSE_00000209 (gender identity information content entity)

AnnotationAssertion(obo:IAO_0000115 obo:OMRSE_00000209 "A social identity information content entity that is about whether some person identifies as some gender."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OMRSE_00000209 "S. Clint Dowland"@en)
AnnotationAssertion(dc:contributor obo:OMRSE_00000209 "Amanda Hicks"@en)
AnnotationAssertion(dc:contributor obo:OMRSE_00000209 "Mathias Brochhausen"@en)
AnnotationAssertion(dc:contributor obo:OMRSE_00000209 "Matthew Diller"@en)
AnnotationAssertion(dc:contributor obo:OMRSE_00000209 "Sarah Bost"@en)
AnnotationAssertion(dc:contributor obo:OMRSE_00000209 "William R. Hogan"@en)
AnnotationAssertion(rdfs:label obo:OMRSE_00000209 "gender identity information content entity"@en)
SubClassOf(obo:OMRSE_00000209 obo:OMRSE_00000204)

# Class: obo:OMRSE_00000210 (female gender identity information content entity)

AnnotationAssertion(obo:IAO_0000115 obo:OMRSE_00000210 "A gender identity information content entity that is about some person's identifying as female in gender."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OMRSE_00000210 "S. Clint Dowland"@en)
AnnotationAssertion(dc:contributor obo:OMRSE_00000210 "Amanda Hicks"@en)
AnnotationAssertion(dc:contributor obo:OMRSE_00000210 "Mathias Brochhausen"@en)
AnnotationAssertion(dc:contributor obo:OMRSE_00000210 "Matthew Diller"@en)
AnnotationAssertion(dc:contributor obo:OMRSE_00000210 "Sarah Bost"@en)
AnnotationAssertion(dc:contributor obo:OMRSE_00000210 "William R. Hogan"@en)
AnnotationAssertion(rdfs:label obo:OMRSE_00000210 "female gender identity information content entity"@en)
SubClassOf(obo:OMRSE_00000210 obo:OMRSE_00000209)

# Class: obo:OMRSE_00000211 (male gender identity information content entity)

AnnotationAssertion(obo:IAO_0000115 obo:OMRSE_00000211 "A gender identity information content entity that is about some person's identifying as male in gender."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OMRSE_00000211 "S. Clint Dowland"@en)
AnnotationAssertion(dc:contributor obo:OMRSE_00000211 "Amanda Hicks"@en)
AnnotationAssertion(dc:contributor obo:OMRSE_00000211 "Mathias Brochhausen"@en)
AnnotationAssertion(dc:contributor obo:OMRSE_00000211 "Matthew Diller"@en)
AnnotationAssertion(dc:contributor obo:OMRSE_00000211 "Sarah Bost"@en)
AnnotationAssertion(dc:contributor obo:OMRSE_00000211 "William R. Hogan"@en)
AnnotationAssertion(rdfs:label obo:OMRSE_00000211 "male gender identity information content entity"@en)
SubClassOf(obo:OMRSE_00000211 obo:OMRSE_00000209)

# Class: obo:OMRSE_00000212 (non-binary identity information content entity)

AnnotationAssertion(obo:IAO_0000115 obo:OMRSE_00000212 "A gender identity information content entity that is about some person's identifying as non-binary in gender."@en)
AnnotationAssertion(obo:IAO_0000117 obo:OMRSE_00000212 "S. Clint Dowland"@en)
AnnotationAssertion(dc:contributor obo:OMRSE_00000212 "Amanda Hicks"@en)
AnnotationAssertion(dc:contributor obo:OMRSE_00000212 "Mathias Brochhausen"@en)
AnnotationAssertion(dc:contributor obo:OMRSE_00000212 "Matthew Diller"@en)
AnnotationAssertion(dc:contributor obo:OMRSE_00000212 "Sarah Bost"@en)
AnnotationAssertion(dc:contributor obo:OMRSE_00000212 "William R. Hogan"@en)
AnnotationAssertion(rdfs:label obo:OMRSE_00000212 "non-binary identity information content entity"@en)
SubClassOf(obo:OMRSE_00000212 obo:OMRSE_00000209)

# Class: obo:OpenLHS-Core_0000009 (informational entity)

AnnotationAssertion(obo:IAO_0000600 obo:OpenLHS-Core_0000009 "A generically dependent continuant that is a building block of information or a combination thereof."@en)
AnnotationAssertion(rdfs:comment obo:OpenLHS-Core_0000009 "Contrarily to ICE, informational entities are not necessarily about some things. Therefore they includes ICE, but also words like 'unicorn', letters like 'a' or pictures of unicorns."@en)
AnnotationAssertion(rdfs:label obo:OpenLHS-Core_0000009 "informational entity"@en)
SubClassOf(obo:OpenLHS-Core_0000009 obo:BFO_0000031)

# Class: obo:OpenLHS-Core_0000010 (pragmatically accepted statement)

AnnotationAssertion(obo:IAO_0000115 obo:OpenLHS-Core_0000010 "A statement for which there is at least one contributor such that if it/he acts upon it, it/he will treat it as true."@en)
AnnotationAssertion(Annotation(rdfs:comment "Note that the contributor does not need to believe in the truth of the statement to be disposed to act as if it was true."@en) obo:OpenLHS-Core_0000062 obo:OpenLHS-Core_0000010 "A statement for which there is at least one contributor such that if it/he acts upon it, it/he will treat it as true."@en)
AnnotationAssertion(rdfs:label obo:OpenLHS-Core_0000010 "pragmatically accepted statement"@en)
SubClassOf(obo:OpenLHS-Core_0000010 obo:SEPIO_0000174)
SubClassOf(obo:OpenLHS-Core_0000010 ObjectSomeValuesFrom(obo:RO_0000056 ObjectIntersectionOf(obo:BFO_0000015 ObjectSomeValuesFrom(obo:BFO_0000055 obo:OpenLHS-Core_0000043))))

# Class: obo:OpenLHS-Core_0000011 (government sanctioned statement)

AnnotationAssertion(obo:IAO_0000112 obo:OpenLHS-Core_0000011 "A date of birth recorded in the French civil registrar."@en)
AnnotationAssertion(obo:IAO_0000115 obo:OpenLHS-Core_0000011 "A pragmatically accepted statement authored by a governement or a related organization such that if this organization acts upon it, it will treat it as true."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000062 obo:OpenLHS-Core_0000011 "A pragmatically accepted statement authored by a governement or a related organization such that if this organization acts upon it, it will treat it as true."@en)
AnnotationAssertion(rdfs:label obo:OpenLHS-Core_0000011 "government sanctioned statement"@en)
SubClassOf(obo:OpenLHS-Core_0000011 obo:OpenLHS-Core_0000010)
SubClassOf(obo:OpenLHS-Core_0000011 ObjectSomeValuesFrom(obo:OBI_0000312 ObjectIntersectionOf(obo:BFO_0000015 ObjectSomeValuesFrom(CommonCoreOntologies:has_agent obo:OBI_0000245))))

# Class: obo:OpenLHS-Core_0000012 (informational slot)

AnnotationAssertion(obo:IAO_0000115 obo:OpenLHS-Core_0000012 "An informational entity that can be filled by an informational filler."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000062 obo:OpenLHS-Core_0000012 "An informational entity that can be filled by an informational filler."@en)
AnnotationAssertion(rdfs:label obo:OpenLHS-Core_0000012 "informational slot"@en)
SubClassOf(obo:OpenLHS-Core_0000012 obo:OpenLHS-Core_0000009)
DisjointClasses(obo:OpenLHS-Core_0000012 obo:OpenLHS-Core_0000013)

# Class: obo:OpenLHS-Core_0000013 (informational filler)

AnnotationAssertion(obo:IAO_0000115 obo:OpenLHS-Core_0000013 "An informational entity that fills an informational slot."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000062 obo:OpenLHS-Core_0000013 "An informational entity that fills an informational slot."@en)
AnnotationAssertion(rdfs:label obo:OpenLHS-Core_0000013 "informational filler"@en)
EquivalentClasses(obo:OpenLHS-Core_0000013 ObjectIntersectionOf(obo:OpenLHS-Core_0000009 ObjectSomeValuesFrom(obo:OpenLHS-Core_0000001 obo:OpenLHS-Core_0000012)))

# Class: obo:OpenLHS-Core_0000020 (canadian postal address)

AnnotationAssertion(obo:IAO_0000115 obo:OpenLHS-Core_0000020 "A postal address that can be used to help the delivery of something in Canada."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000061 obo:OpenLHS-Core_0000020 "A postal address that can be used to help the delivery of something in Canada."@en)
AnnotationAssertion(rdfs:label obo:OpenLHS-Core_0000020 "canadian postal address"@en)
SubClassOf(obo:OpenLHS-Core_0000020 obo:IAO_0000422)
SubClassOf(obo:OpenLHS-Core_0000020 ObjectExactCardinality(1 obo:RO_0002180 obo:OpenLHS-Core_0000022))
SubClassOf(obo:OpenLHS-Core_0000020 ObjectExactCardinality(1 obo:RO_0002180 obo:OpenLHS-Core_0000024))
SubClassOf(obo:OpenLHS-Core_0000020 ObjectExactCardinality(1 obo:RO_0002180 obo:OpenLHS-Core_0000025))
SubClassOf(obo:OpenLHS-Core_0000020 ObjectExactCardinality(1 obo:RO_0002180 obo:OpenLHS-Core_0000026))

# Class: obo:OpenLHS-Core_0000021 (canadian census subdivision identifier)

AnnotationAssertion(obo:IAO_0000115 obo:OpenLHS-Core_0000021 "An identifier that denotes a Canadian municipality (as determined by provincial/territorial legislation) or a Canadian area treated as a municipal equivalent for statistical purposes (e.g., Indian reserves, Indian settlements and unorganized territories)."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000062 obo:OpenLHS-Core_0000021 "An identifier that denotes a Canadian municipality (as determined by provincial/territorial legislation) or a Canadian area treated as a municipal equivalent for statistical purposes (e.g., Indian reserves, Indian settlements and unorganized territories)."@en)
AnnotationAssertion(rdfs:label obo:OpenLHS-Core_0000021 "canadian census subdivision identifier"@en)
SubClassOf(obo:OpenLHS-Core_0000021 obo:IAO_0020000)
SubClassOf(obo:OpenLHS-Core_0000021 ObjectSomeValuesFrom(obo:IAO_0000235 obo:OpenLHS-Core_0000026))

# Class: obo:OpenLHS-Core_0000022 (canadian first-order administrative region identifier)

AnnotationAssertion(obo:IAO_0000115 obo:OpenLHS-Core_0000022 "An identifier that denotes a Canadian province or a Canadian territory."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000062 obo:OpenLHS-Core_0000022 "An identifier that denotes a Canadian province or a Canadian territory."@en)
AnnotationAssertion(rdfs:label obo:OpenLHS-Core_0000022 "canadian first-order administrative region identifier"@en)
SubClassOf(obo:OpenLHS-Core_0000022 obo:IAO_0020000)

# Class: obo:OpenLHS-Core_0000023 (canadian forward sorting area code)

AnnotationAssertion(obo:IAO_0000115 obo:OpenLHS-Core_0000023 "An identifier that denotes a geographical region on which is based the first three characters of a Canadian postal code."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000062 obo:OpenLHS-Core_0000023 "An identifier that denotes a geographical region on which is based the first three characters of a Canadian postal code."@en)
AnnotationAssertion(rdfs:label obo:OpenLHS-Core_0000023 "canadian forward sorting area code"@en)
SubClassOf(obo:OpenLHS-Core_0000023 obo:IAO_0020000)

# Class: obo:OpenLHS-Core_0000024 (postal address city)

AnnotationAssertion(obo:IAO_0000115 obo:OpenLHS-Core_0000024 "An identifier that denotes a city and is intended to be used as part of a postal address."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000062 obo:OpenLHS-Core_0000024 "An identifier that denotes a city and is intended to be used as part of a postal address."@en)
AnnotationAssertion(rdfs:label obo:OpenLHS-Core_0000024 "postal address city"@en)
SubClassOf(obo:OpenLHS-Core_0000024 obo:IAO_0020000)
SubClassOf(obo:OpenLHS-Core_0000024 ObjectSomeValuesFrom(obo:BFO_0000050 obo:IAO_0000422))

# Class: obo:OpenLHS-Core_0000025 (postal address country)

AnnotationAssertion(obo:IAO_0000115 obo:OpenLHS-Core_0000025 "An identifier that denotes a country and is intended to be used as part of a postal address."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000062 obo:OpenLHS-Core_0000025 "An identifier that denotes a country and is intended to be used as part of a postal address."@en)
AnnotationAssertion(rdfs:label obo:OpenLHS-Core_0000025 "postal address country"@en)
SubClassOf(obo:OpenLHS-Core_0000025 obo:IAO_0020000)
SubClassOf(obo:OpenLHS-Core_0000025 ObjectSomeValuesFrom(obo:BFO_0000050 obo:IAO_0000422))

# Class: obo:OpenLHS-Core_0000026 (canadian postal code)

AnnotationAssertion(obo:IAO_0000115 obo:OpenLHS-Core_0000026 "A postal code that denotes some geographical region in Canada."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000062 obo:OpenLHS-Core_0000026 "A postal code that denotes some geographical region in Canada."@en)
AnnotationAssertion(rdfs:label obo:OpenLHS-Core_0000026 "canadian postal code"@en)
SubClassOf(obo:OpenLHS-Core_0000026 obo:IAO_0000646)
SubClassOf(obo:OpenLHS-Core_0000026 ObjectExactCardinality(1 obo:RO_0002180 obo:OpenLHS-Core_0000023))

# Class: obo:OpenLHS-Core_0000027 (request)

AnnotationAssertion(obo:IAO_0000115 obo:OpenLHS-Core_0000027 "An information content entity specifiying one or several types of processes that a party, whether a person or an organization, wants to see instantiated for the benefit of itself or another party."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000061 obo:OpenLHS-Core_0000027 "An information content entity specifiying one or several types of processes that a party, whether a person or an organization, wants to see instantiated for the benefit of itself or another party."@en)
AnnotationAssertion(Annotation(obo:IAO_0000116 "hence the definitional necessary condition."@en) rdfs:comment obo:OpenLHS-Core_0000027 "It is an open question whether the mereological sum of a request with any other ICE is also a request"@en)
AnnotationAssertion(rdfs:label obo:OpenLHS-Core_0000027 "request"@en)
SubClassOf(obo:OpenLHS-Core_0000027 obo:IAO_0000030)
SubClassOf(obo:OpenLHS-Core_0000027 ObjectSomeValuesFrom(obo:BFO_0000051 obo:IAO_0000033))

# Class: obo:OpenLHS-Core_0000028 (service agreement specification)

AnnotationAssertion(obo:IAO_0000115 obo:OpenLHS-Core_0000028 "An information content entity that specifies a service agreement made between a request party and a service offer party, and aim to direct some processes that correspond to what has been agreed between the parties."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000061 obo:OpenLHS-Core_0000028 "An information content entity that is the output of a service agreement negociation."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000062 obo:OpenLHS-Core_0000028 "An information content entity that specifies a service agreement made between a request party and a service offer party, and aim to direct some processes that correspond to what has been agreed between the parties."@en)
AnnotationAssertion(rdfs:label obo:OpenLHS-Core_0000028 "service agreement specification"@en)
SubClassOf(obo:OpenLHS-Core_0000028 obo:IAO_0000030)
SubClassOf(obo:OpenLHS-Core_0000028 ObjectSomeValuesFrom(obo:OBI_0000312 obo:OpenLHS-Core_0000035))

# Class: obo:OpenLHS-Core_0000029 (service offer)

AnnotationAssertion(obo:IAO_0000115 obo:OpenLHS-Core_0000029 "An information content entity describing the processes a person or an organization is willing to perform for a third-party."@en)
AnnotationAssertion(Annotation(obo:IAO_0000116 "It is an open question whether offering to cook for one's spouse is a service offer."@en) Annotation(rdfs:comment "A service is usually offered for a compensation"@en) obo:OpenLHS-Core_0000061 obo:OpenLHS-Core_0000029 "An information content entity describing the processes a person or an organization is willing to perform for a third-party."@en)
AnnotationAssertion(rdfs:label obo:OpenLHS-Core_0000029 "service offer"@en)
SubClassOf(obo:OpenLHS-Core_0000029 obo:IAO_0000030)

# Class: obo:OpenLHS-Core_0000030 (temporally qualifying statement)

AnnotationAssertion(obo:IAO_0000115 obo:OpenLHS-Core_0000030 "A statement that states that an entity existed, exists or will exist at some point during a specified temporal region."@en)
AnnotationAssertion(Annotation(rdfs:comment "More formally, this amount to states that a temporal region overlaps (in the sense of Allen's temporal relations) with a temporal region during which some entity exists."@en) obo:OpenLHS-Core_0000062 obo:OpenLHS-Core_0000030 "A statement that states that an entity existed, exists or will exist at some point during a specified temporal region."@en)
AnnotationAssertion(rdfs:label obo:OpenLHS-Core_0000030 "temporally qualifying statement"@en)
SubClassOf(obo:OpenLHS-Core_0000030 obo:SEPIO_0000174)
SubClassOf(obo:OpenLHS-Core_0000030 ObjectSomeValuesFrom(obo:RO_0002180 obo:OpenLHS-Core_0000065))

# Class: obo:OpenLHS-Core_0000031 (process temporally qualifying statement)

AnnotationAssertion(obo:IAO_0000115 obo:OpenLHS-Core_0000031 "A temporally qualifying statement stating that a temporal region overlaps with a temporal region during which some process occurred, occurs or will occur."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000062 obo:OpenLHS-Core_0000031 "A temporally qualifying statement stating that a temporal region overlaps with a temporal region during which some process occurred, occurs or will occur."@en)
AnnotationAssertion(rdfs:label obo:OpenLHS-Core_0000031 "process temporally qualifying statement"@en)
SubClassOf(obo:OpenLHS-Core_0000031 obo:OpenLHS-Core_0000030)
SubClassOf(obo:OpenLHS-Core_0000031 ObjectSomeValuesFrom(obo:IAO_0000136 obo:BFO_0000015))

# Class: obo:OpenLHS-Core_0000033 (process beginning statement)

AnnotationAssertion(obo:IAO_0000115 obo:OpenLHS-Core_0000033 "A process temporally qualifying statement qualifying temporally the beginning of a process."@en)
AnnotationAssertion(Annotation(rdfs:comment "A process that is a mereological sum of temporally disconnected processes has only one process beginning."@en) obo:OpenLHS-Core_0000062 obo:OpenLHS-Core_0000033 "A process temporally qualifying statement qualifying temporally the beginning of a process."@en)
AnnotationAssertion(rdfs:label obo:OpenLHS-Core_0000033 "process beginning statement"@en)
SubClassOf(obo:OpenLHS-Core_0000033 obo:OpenLHS-Core_0000031)

# Class: obo:OpenLHS-Core_0000034 (process ending statement)

AnnotationAssertion(obo:IAO_0000115 obo:OpenLHS-Core_0000034 "A process temporally qualifying statement qualifying temporally the ending of a process."@en)
AnnotationAssertion(Annotation(rdfs:comment "A process that is a mereological sum of temporally disconnected processes has only one process ending."@en) obo:OpenLHS-Core_0000062 obo:OpenLHS-Core_0000034 "A process temporally qualifying statement qualifying temporally the ending of a process."@en)
AnnotationAssertion(rdfs:label obo:OpenLHS-Core_0000034 "process ending statement"@en)
SubClassOf(obo:OpenLHS-Core_0000034 obo:OpenLHS-Core_0000031)

# Class: obo:OpenLHS-Core_0000035 (service agreement negotiation)

AnnotationAssertion(obo:IAO_0000115 obo:OpenLHS-Core_0000035 "A planned process of interaction between a request party and a service offer party having as specified input some request and some service offer and that aims to generate as output a service agreement."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000061 obo:OpenLHS-Core_0000035 "A planned process of interaction between a request party and a service offer party having as specified input some request and some service offer and that aims to generate as output a service agreement."@en)
AnnotationAssertion(rdfs:label obo:OpenLHS-Core_0000035 "service agreement negotiation"@en)
SubClassOf(obo:OpenLHS-Core_0000035 obo:OBI_0000011)
SubClassOf(obo:OpenLHS-Core_0000035 ObjectSomeValuesFrom(obo:OBI_0000293 obo:OpenLHS-Core_0000027))
SubClassOf(obo:OpenLHS-Core_0000035 ObjectSomeValuesFrom(obo:OBI_0000293 obo:OpenLHS-Core_0000029))

# Class: obo:OpenLHS-Core_0000036 (service delivery)

AnnotationAssertion(obo:IAO_0000115 obo:OpenLHS-Core_0000036 "- A planned process that aims at fulfilling the commitments of a service agreement.

- A planned process that is maximally directed by a service agreement specification."@en)
AnnotationAssertion(Annotation(rdfs:comment "All service deliveries are directed by a service agreement specification, even if this specification is concretized only mentally."@en) obo:OpenLHS-Core_0000062 obo:OpenLHS-Core_0000036 "- A planned process that aims at fulfilling the commitments of a service agreement.

- A planned process that is maximally directed by a service agreement specification."@en)
AnnotationAssertion(rdfs:label obo:OpenLHS-Core_0000036 "service delivery"@en)
EquivalentClasses(obo:OpenLHS-Core_0000036 ObjectIntersectionOf(obo:OBI_0000011 ObjectSomeValuesFrom(obo:OpenLHS-Core_0000067 obo:OpenLHS-Core_0000028)))

# Class: obo:OpenLHS-Core_0000043 (agent plan to act as if some statement was true)

AnnotationAssertion(obo:IAO_0000115 obo:OpenLHS-Core_0000043 "A plan of an agent to act as if some statement was true."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000062 obo:OpenLHS-Core_0000043 "A plan of an agent to act as if some statement was true."@en)
AnnotationAssertion(rdfs:label obo:OpenLHS-Core_0000043 "agent plan to act as if some statement was true"@en)
SubClassOf(obo:OpenLHS-Core_0000043 obo:OBI_0000260)
SubClassOf(obo:OpenLHS-Core_0000043 ObjectSomeValuesFrom(obo:RO_0000052 CommonCoreOntologies:Agent))
SubClassOf(obo:OpenLHS-Core_0000043 ObjectAllValuesFrom(obo:BFO_0000054 ObjectIntersectionOf(obo:BFO_0000015 ObjectSomeValuesFrom(obo:RO_0000057 obo:SEPIO_0000174))))

# Class: obo:OpenLHS-Core_0000044 (temporal qualification of the appearance of a plan to act as if some statement was true)

AnnotationAssertion(obo:IAO_0000115 obo:OpenLHS-Core_0000044 "A continuant appearance statement that temporally qualifies the apparition of a plan to act as if some statement was true."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000062 obo:OpenLHS-Core_0000044 "A continuant appearance statement that temporally qualifies the apparition of a plan to act as if some statement was true."@en)
AnnotationAssertion(rdfs:label obo:OpenLHS-Core_0000044 "temporal qualification of the appearance of a plan to act as if some statement was true"@en)
SubClassOf(obo:OpenLHS-Core_0000044 obo:OpenLHS-Core_0000052)
SubClassOf(obo:OpenLHS-Core_0000044 ObjectSomeValuesFrom(obo:IAO_0000136 obo:OpenLHS-Core_0000043))

# Class: obo:OpenLHS-Core_0000045 (temporal qualification of the disappearance of a plan to act as if some statement was true)

AnnotationAssertion(obo:IAO_0000115 obo:OpenLHS-Core_0000045 "A continuant disappearance statement that temporally qualifies the disappearance of a plan to act as if some statement was true."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000062 obo:OpenLHS-Core_0000045 "A continuant disappearance statement that temporally qualifies the disappearance of a plan to act as if some statement was true."@en)
AnnotationAssertion(rdfs:label obo:OpenLHS-Core_0000045 "temporal qualification of the disappearance of a plan to act as if some statement was true"@en)
SubClassOf(obo:OpenLHS-Core_0000045 obo:OpenLHS-Core_0000053)
SubClassOf(obo:OpenLHS-Core_0000045 ObjectSomeValuesFrom(obo:IAO_0000136 obo:OpenLHS-Core_0000043))

# Class: obo:OpenLHS-Core_0000051 (continuant temporally qualifying statement)

AnnotationAssertion(obo:IAO_0000112 obo:OpenLHS-Core_0000051 "'May 5th 2023' for characterizing temporally a plan that existed from 8 AM to noon on this day."@en)
AnnotationAssertion(obo:IAO_0000115 obo:OpenLHS-Core_0000051 "A temporally qualifying statement stating that a temporal region overlaps with a temporal region during which some continuant exists."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000062 obo:OpenLHS-Core_0000051 "A temporally qualifying statement stating that a temporal region overlaps with a temporal region during which some continuant exists."@en)
AnnotationAssertion(rdfs:label obo:OpenLHS-Core_0000051 "continuant temporally qualifying statement"@en)
SubClassOf(obo:OpenLHS-Core_0000051 obo:OpenLHS-Core_0000030)
SubClassOf(obo:OpenLHS-Core_0000051 ObjectSomeValuesFrom(obo:IAO_0000136 obo:BFO_0000002))

# Class: obo:OpenLHS-Core_0000052 (continuant appearance statement)

AnnotationAssertion(obo:IAO_0000115 obo:OpenLHS-Core_0000052 "A continuant temporally qualifying statement qualifying temporally the appearance of a continuant."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000062 obo:OpenLHS-Core_0000052 "A continuant temporally qualifying statement qualifying temporally the appearance of a continuant."@en)
AnnotationAssertion(rdfs:label obo:OpenLHS-Core_0000052 "continuant appearance statement"@en)
SubClassOf(obo:OpenLHS-Core_0000052 obo:OpenLHS-Core_0000051)

# Class: obo:OpenLHS-Core_0000053 (continuant disappearance statement)

AnnotationAssertion(obo:IAO_0000115 obo:OpenLHS-Core_0000053 "A continuant temporally qualifying statement temporally qualifying the disappearance of a continuant."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000062 obo:OpenLHS-Core_0000053 "A continuant temporally qualifying statement temporally qualifying the disappearance of a continuant."@en)
AnnotationAssertion(rdfs:label obo:OpenLHS-Core_0000053 "continuant disappearance statement"@en)
SubClassOf(obo:OpenLHS-Core_0000053 obo:OpenLHS-Core_0000051)

# Class: obo:OpenLHS-Core_0000054 (specified value)

AnnotationAssertion(obo:IAO_0000112 obo:OpenLHS-Core_0000054 "4 Km"@en)
AnnotationAssertion(obo:OpenLHS-Core_0000061 obo:OpenLHS-Core_0000054 "An information content entity whose structure and content follow a template."@en)
AnnotationAssertion(rdfs:label obo:OpenLHS-Core_0000054 "specified value"@en)
SubClassOf(obo:OpenLHS-Core_0000054 obo:IAO_0000030)

# Class: obo:OpenLHS-Core_0000055 (numerical specified value)

AnnotationAssertion(rdfs:label obo:OpenLHS-Core_0000055 "numerical specified value"@en)
SubClassOf(obo:OpenLHS-Core_0000055 obo:OpenLHS-Core_0000054)

# Class: obo:OpenLHS-Core_0000056 (unit qualified scalar specified value)

AnnotationAssertion(rdfs:label obo:OpenLHS-Core_0000056 "unit qualified scalar specified value"@en)
SubClassOf(obo:OpenLHS-Core_0000056 obo:OpenLHS-Core_0000054)
SubClassOf(obo:OpenLHS-Core_0000056 ObjectExactCardinality(1 obo:RO_0002180 obo:OpenLHS-Core_0000055))
SubClassOf(obo:OpenLHS-Core_0000056 ObjectExactCardinality(1 obo:RO_0002180 obo:OpenLHS-Core_0000057))

# Class: obo:OpenLHS-Core_0000057 (unit)

AnnotationAssertion(rdfs:label obo:OpenLHS-Core_0000057 "unit"@en)
SubClassOf(obo:OpenLHS-Core_0000057 obo:IAO_0000030)

# Class: obo:OpenLHS-Core_0000060 (pathological condition)

AnnotationAssertion(obo:IAO_0000115 obo:OpenLHS-Core_0000060 "An entity that is a disorder, a disease or a pathological bodily process"@en)
AnnotationAssertion(obo:OpenLHS-Core_0000062 obo:OpenLHS-Core_0000060 "An entity that is a disorder, a disease or a pathological bodily process"@en)
AnnotationAssertion(rdfs:label obo:OpenLHS-Core_0000060 "pathological condition"@en)
EquivalentClasses(obo:OpenLHS-Core_0000060 ObjectUnionOf(obo:OGMS_0000031 obo:OGMS_0000045 obo:OGMS_0000061))
SubClassOf(obo:OpenLHS-Core_0000060 obo:BFO_0000001)

# Class: obo:OpenLHS-Core_0000065 (temporal information)

AnnotationAssertion(obo:IAO_0000115 obo:OpenLHS-Core_0000065 "An information content entity that denotes a one-dimension temporal region."@en)
AnnotationAssertion(obo:OpenLHS-Core_0000062 obo:OpenLHS-Core_0000065 "An information content entity that denotes a one-dimension temporal region."@en)
AnnotationAssertion(rdfs:label obo:OpenLHS-Core_0000065 "temporal information"@en)
EquivalentClasses(obo:OpenLHS-Core_0000065 ObjectIntersectionOf(obo:IAO_0000030 ObjectExactCardinality(1 obo:IAO_0000219 obo:BFO_0000008)))

# Class: obo:SEPIO_0000174 (statement)

AnnotationAssertion(obo:IAO_0000112 obo:SEPIO_0000174 "The following is derived from https://en.wikipedia.org/wiki/Statement_(logic):

Examples of sentences that are (or make) statements:
\"Socrates is a man.\"
\"A triangle has three sides.\"
\"Madrid is the capital of Spain.\"
\"There are five ducks on the lake\"
\"The BRAF V600E mutation causes breast cancer\"

Examples of sentences that are not (or do not make) statements:
\"Who are you?\"
\"Run!\"
\"Greenness perambulates.\"
\"I had one grunch but the eggplant over there.\"
\"The King of France is wise.\"
\"Broccoli tastes good.\"

The first two examples are not declarative sentences and therefore are not (or do not make) statements. The third and fourth are declarative sentences but, lacking meaning, are neither true nor false and therefore are not (or do not make) statements. The fifth and sixth examples are meaningful declarative sentences, but are not statements but rather matters of opinion or taste.")
AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000174 "An information content entity expressing a declarative sentence that is either true or false.")
AnnotationAssertion(rdfs:comment obo:SEPIO_0000174 "From https://en.wikipedia.org/wiki/Statement_(logic) (2017-06-21):
\"A statement is a declarative sentence that bears truth value, in that it can be either true or false. This definition derives from the domain of logic, where a statement is either (a) a meaningful declarative sentence that is either true or false, or (b) that which a true or false declarative sentence asserts. In the latter case, a statement is distinct from a sentence in that a sentence is only one formulation of a statement, whereas there may be many other formulations expressing the same statement . . . In (this treatment), \"statement\" is introduced in order to distinguish a sentence from its informational content. A statement is regarded as the information content of an information-bearing sentence. Thus, a sentence is related to the statement it bears like a numeral to the number it refers to. Statements are abstract logical entities, while sentences are grammatical entities.\"
----
Note that the definition in (b) describes something closer to the notion of a 'Proposition' as defined in SEPIO?")
AnnotationAssertion(rdfs:comment obo:SEPIO_0000174 "Statements are sentences (or, more precisely, the information content of sentences) that declare a definitive or proposed fact - expressing something about the world or one's experience of it that may or may not be true. The identity of a particular Statement is dependent upon (1) what it reports as true (its semantic content), (2) the Agent stating it, and (3) the occasion on which the statement is made. 

The phrase \"the pink elephant\" describes an entity, but is not a 'statement' as it has no truth value. By contrast, the phrase \"the pink elephant is in the room\" is a statement as this can be evaluated for its truth.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000174 "statement"@en)
SubClassOf(obo:SEPIO_0000174 obo:IAO_0000030)

# Class: obo:SEPIO_0000187 (confidence level)

AnnotationAssertion(obo:IAO_0000115 obo:SEPIO_0000187 "A measurement datum that quantifies the level of confidence an agent has that a particular piece of information is true.")
AnnotationAssertion(rdfs:label obo:SEPIO_0000187 "confidence level"@en)
SubClassOf(obo:SEPIO_0000187 obo:IAO_0000109)
SubClassOf(obo:SEPIO_0000187 ObjectSomeValuesFrom(obo:IAO_0000136 obo:IAO_0000030))
SubClassOf(obo:SEPIO_0000187 ObjectSomeValuesFrom(obo:OpenLHS-Core_0000005 CommonCoreOntologies:Agent))

# Class: CommonCoreOntologies:Agent (Agent)

AnnotationAssertion(obo:IAO_0000115 CommonCoreOntologies:Agent "A Material Entity that is capable of performing Planned Acts"@en)
AnnotationAssertion(CommonCoreOntologies:is_curated_in_ontology CommonCoreOntologies:Agent "http://www.ontologyrepository.com/CommonCoreOntologies/Mid/AgentOntology"^^xsd:anyURI)
AnnotationAssertion(rdfs:label CommonCoreOntologies:Agent "Agent"@en)
EquivalentClasses(CommonCoreOntologies:Agent ObjectIntersectionOf(obo:BFO_0000040 ObjectSomeValuesFrom(CommonCoreOntologies:agent_in obo:BFO_0000015)))
SubClassOf(CommonCoreOntologies:Agent obo:BFO_0000040)

# Class: CommonCoreOntologies:AgentCapability (Agent Capability)

AnnotationAssertion(obo:IAO_0000115 CommonCoreOntologies:AgentCapability "A Realizable Entity that inheres in an Agent to the extent of that Agent's capacity to realize it in Intentional Acts of a certain type."@en)
AnnotationAssertion(CommonCoreOntologies:is_curated_in_ontology CommonCoreOntologies:AgentCapability "http://www.ontologyrepository.com/CommonCoreOntologies/Mid/AgentOntology"^^xsd:anyURI)
AnnotationAssertion(rdfs:label CommonCoreOntologies:AgentCapability "Agent Capability"@en)
SubClassOf(CommonCoreOntologies:AgentCapability obo:BFO_0000017)


SubObjectPropertyOf(ObjectPropertyChain(obo:BFO_0000050 obo:BFO_0000062) obo:BFO_0000062)
SubObjectPropertyOf(ObjectPropertyChain(obo:BFO_0000050 obo:BFO_0000063) obo:BFO_0000063)
SubObjectPropertyOf(ObjectPropertyChain(obo:BFO_0000050 obo:BFO_0000066) obo:BFO_0000066)
SubObjectPropertyOf(ObjectPropertyChain(obo:BFO_0000051 obo:BFO_0000055 obo:RO_0000052) obo:RO_0000057)
SubObjectPropertyOf(ObjectPropertyChain(obo:BFO_0000051 obo:BFO_0000066) obo:RO_0002479)
SubObjectPropertyOf(ObjectPropertyChain(obo:BFO_0000051 obo:RO_0000057) obo:RO_0000057)
SubObjectPropertyOf(ObjectPropertyChain(obo:BFO_0000066 obo:BFO_0000050) obo:BFO_0000066)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002091 obo:BFO_0000062) obo:BFO_0000062)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002092 obo:BFO_0000062) obo:BFO_0000062)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002092 obo:BFO_0000063) obo:BFO_0000063)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002093 obo:BFO_0000062) obo:RO_0002086)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002224 obo:RO_0002230) obo:RO_0002087)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002224 obo:RO_0002233) obo:RO_0002233)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002230 obo:RO_0002224) obo:RO_0002090)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002230 obo:RO_0002234) obo:RO_0002234)
DLSafeRule(Body(ObjectPropertyAtom(obo:RO_0002180 Variable(<urn:swrl#w>) Variable(<urn:swrl#p>)) ClassAtom(obo:BFO_0000015 Variable(<urn:swrl#w>)) ClassAtom(obo:BFO_0000015 Variable(<urn:swrl#p>)))Head(ObjectPropertyAtom(obo:RO_0002018 Variable(<urn:swrl#w>) Variable(<urn:swrl#p>))))
DLSafeRule(Body(ClassAtom(obo:BFO_0000016 Variable(<urn:swrl#d>)) ObjectPropertyAtom(obo:RO_0000053 Variable(<urn:swrl#e>) Variable(<urn:swrl#d>)))Head(ObjectPropertyAtom(obo:RO_0000091 Variable(<urn:swrl#e>) Variable(<urn:swrl#d>))))
DLSafeRule(Body(ClassAtom(obo:BFO_0000019 Variable(<urn:swrl#d>)) ObjectPropertyAtom(obo:RO_0000053 Variable(<urn:swrl#e>) Variable(<urn:swrl#d>)))Head(ObjectPropertyAtom(obo:RO_0000086 Variable(<urn:swrl#e>) Variable(<urn:swrl#d>))))
DLSafeRule(Body(ClassAtom(obo:BFO_0000023 Variable(<urn:swrl#d>)) ObjectPropertyAtom(obo:RO_0000053 Variable(<urn:swrl#e>) Variable(<urn:swrl#d>)))Head(ObjectPropertyAtom(obo:RO_0000087 Variable(<urn:swrl#e>) Variable(<urn:swrl#d>))))
DLSafeRule(Body(ClassAtom(obo:BFO_0000034 Variable(<urn:swrl#d>)) ObjectPropertyAtom(obo:RO_0000053 Variable(<urn:swrl#e>) Variable(<urn:swrl#d>)))Head(ObjectPropertyAtom(obo:RO_0000085 Variable(<urn:swrl#e>) Variable(<urn:swrl#d>))))
)